{"results": [{"node": {"name": "campaign_info_all", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "resource_type": "model", "path": "campaign_info/campaign_info_all.sql", "original_file_path": "models/campaign_info/campaign_info_all.sql", "package_name": "ds_dbt", "raw_sql": "SELECT c.field_campaigns_target_id as campaign_node_id,\n       n2.title as campaign_node_id_title,\n       c.entity_id as campaign_run_id,\n       n1.title as campaign_run_id_title,\n       fdfct.field_campaign_type_value as campaign_type,\n       c.language as campaign_language,\n       fdfrd.field_run_date_value as campaign_run_start_date,\n       fdfrd.field_run_date_value2 as campaign_run_end_date,\n       to_timestamp(n1.created) as campaign_created_date,\n       fdfrn.field_reportback_noun_value as campaign_noun,\n       fdfrv.field_reportback_verb_value as campaign_verb,\n       array_to_string(array_agg(distinct ttd2.name), ', ') as campaign_cause_type,\n       array_to_string(array_agg(distinct fdfcta.field_call_to_action_value), ', ') as campaign_cta,\n       array_to_string(array_agg(distinct ttd1.name), ', ') as campaign_action_type \nFROM {{ env_var('FIELD_DATA_FIELD_CAMPAIGNS') }} c \nLEFT JOIN {{ env_var('NODE') }} n1 \n    ON n1.nid = c.entity_id \nLEFT JOIN {{ env_var('NODE') }} n2 \n    ON n2.nid = c.field_campaigns_target_id \nLEFT JOIN {{ env_var('FIELD_DATA_FIELD_CAMPAIGN_TYPE') }} fdfct \n    ON c.field_campaigns_target_id = fdfct.entity_id \nLEFT JOIN {{ env_var('FIELD_DATA_FIELD_RUN_DATE') }} fdfrd \n    ON c.entity_id = fdfrd.entity_id and c.language = fdfrd.language \nLEFT JOIN {{ env_var('FIELD_DATA_FIELD_CALL_TO_ACTION') }} fdfcta \n    ON c.field_campaigns_target_id = fdfcta.entity_id and c.language = fdfcta.language \nLEFT JOIN {{ env_var('FIELD_DATA_FIELD_REPORTBACK_NOUN') }} fdfrn \n    ON c.field_campaigns_target_id = fdfrn.entity_id and c.language = fdfrn.language \nLEFT JOIN {{ env_var('FIELD_DATA_FIELD_REPORTBACK_VERB') }} fdfrv \n    ON c.field_campaigns_target_id = fdfrv.entity_id and c.language = fdfrv.language \nLEFT JOIN {{ env_var('FIELD_DATA_FIELD_ACTION_TYPE') }} fdfat \n    ON fdfat.entity_id = c.field_campaigns_target_id \nLEFT JOIN {{ env_var('TAXONOMY_TERM_DATA') }} ttd1 \n    ON fdfat.field_action_type_tid = ttd1.tid \nLEFT JOIN {{ env_var('FIELD_DATA_FIELD_CAUSE') }} fdfc \n    ON fdfc.entity_id = c.field_campaigns_target_id \nLEFT JOIN {{ env_var('TAXONOMY_TERM_DATA') }} ttd2 \n    ON fdfc.field_cause_tid = ttd2.tid \nWHERE c.bundle = 'campaign_run' \nGROUP BY 1,2,3,4,5,6,7,8,9,10,11 \nORDER BY c.field_campaigns_target_id, fdfrd.field_run_date_value", "refs": [], "sources": [], "depends_on": {"nodes": [], "macros": []}, "unique_id": "model.ds_dbt.campaign_info_all", "empty": false, "fqn": ["ds_dbt", "campaign_info", "campaign_info_all"], "tags": [], "config": {"enabled": true, "materialized": "table", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}, "alias": "campaign_info_all"}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "campaign_info_all", "columns": {"campaign_node_id": {"name": "campaign_node_id", "description": "This is a unique identifier for the campaign"}, "campaign_node_id_title": {"name": "campaign_node_id_title", "description": "Campaign title"}, "campaign_run_id": {"name": "campaign_run_id", "description": "Unique identifier for the campaign run"}, "campaign_run_id_title": {"name": "campaign_run_id_title", "description": "Title of the campaign run"}, "campaign_type": {"name": "campaign_type", "description": "Campaign cause type (eg. Mental Health, Education)"}, "campaign_language": {"name": "campaign_language", "description": "\"Language in which the campaign is available\""}, "campaign_run_start_date": {"name": "campaign_run_start_date", "description": "Start date of the campaign run"}, "campaign_run_end_date": {"name": "campaign_run_end_date", "description": "End date of the campaign run"}, "campaign_created_date": {"name": "campaign_created_date", "description": "When the campaign was created in UTC (eg. 2018-01-01 12:00:00)"}, "campaign_noun": {"name": "campaign_noun", "description": "Noun applicable to the user's action"}, "campaign_verb": {"name": "campaign_verb", "description": "Verb describing the action the user should take"}, "campaign_cause_type": {"name": "campaign_cause_type", "description": "Campaign cause type (eg. Mental Health, Education)"}, "campaign_cta": {"name": "campaign_cta", "description": "Campaign's call to action"}, "campaign_action_type": {"name": "campaign_action_type", "description": "Campaign action type (eg. Make Something, Share Something)"}}, "description": "A table containing all campaign info (includes international).", "patch_path": "models/campaign_info/schema.yml", "docrefs": [{"documentation_package": "", "documentation_name": "campaign_id", "column_name": "campaign_node_id"}, {"documentation_package": "", "documentation_name": "campaign_node_id_title", "column_name": "campaign_node_id_title"}, {"documentation_package": "", "documentation_name": "campaign_run_id", "column_name": "campaign_run_id"}, {"documentation_package": "", "documentation_name": "campaign_run_id_title", "column_name": "campaign_run_id_title"}, {"documentation_package": "", "documentation_name": "campaign_cause_type", "column_name": "campaign_type"}, {"documentation_package": "", "documentation_name": "campaign_language", "column_name": "campaign_language"}, {"documentation_package": "", "documentation_name": "campaign_run_start_date", "column_name": "campaign_run_start_date"}, {"documentation_package": "", "documentation_name": "campaign_run_end_date", "column_name": "campaign_run_end_date"}, {"documentation_package": "", "documentation_name": "campaign_created_date", "column_name": "campaign_created_date"}, {"documentation_package": "", "documentation_name": "campaign_noun", "column_name": "campaign_noun"}, {"documentation_package": "", "documentation_name": "campaign_verb", "column_name": "campaign_verb"}, {"documentation_package": "", "documentation_name": "campaign_cause_type", "column_name": "campaign_cause_type"}, {"documentation_package": "", "documentation_name": "campaign_cta", "column_name": "campaign_cta"}, {"documentation_package": "", "documentation_name": "campaign_action_type", "column_name": "campaign_action_type"}], "compiled": true, "compiled_sql": "SELECT c.field_campaigns_target_id as campaign_node_id,\n       n2.title as campaign_node_id_title,\n       c.entity_id as campaign_run_id,\n       n1.title as campaign_run_id_title,\n       fdfct.field_campaign_type_value as campaign_type,\n       c.language as campaign_language,\n       fdfrd.field_run_date_value as campaign_run_start_date,\n       fdfrd.field_run_date_value2 as campaign_run_end_date,\n       to_timestamp(n1.created) as campaign_created_date,\n       fdfrn.field_reportback_noun_value as campaign_noun,\n       fdfrv.field_reportback_verb_value as campaign_verb,\n       array_to_string(array_agg(distinct ttd2.name), ', ') as campaign_cause_type,\n       array_to_string(array_agg(distinct fdfcta.field_call_to_action_value), ', ') as campaign_cta,\n       array_to_string(array_agg(distinct ttd1.name), ', ') as campaign_action_type \nFROM dosomething.field_data_field_campaigns c \nLEFT JOIN dosomething.node n1 \n    ON n1.nid = c.entity_id \nLEFT JOIN dosomething.node n2 \n    ON n2.nid = c.field_campaigns_target_id \nLEFT JOIN dosomething.field_data_field_campaign_type fdfct \n    ON c.field_campaigns_target_id = fdfct.entity_id \nLEFT JOIN dosomething.field_data_field_run_date fdfrd \n    ON c.entity_id = fdfrd.entity_id and c.language = fdfrd.language \nLEFT JOIN dosomething.field_data_field_call_to_action fdfcta \n    ON c.field_campaigns_target_id = fdfcta.entity_id and c.language = fdfcta.language \nLEFT JOIN dosomething.field_data_field_reportback_noun fdfrn \n    ON c.field_campaigns_target_id = fdfrn.entity_id and c.language = fdfrn.language \nLEFT JOIN dosomething.field_data_field_reportback_verb fdfrv \n    ON c.field_campaigns_target_id = fdfrv.entity_id and c.language = fdfrv.language \nLEFT JOIN dosomething.field_data_field_action_type fdfat \n    ON fdfat.entity_id = c.field_campaigns_target_id \nLEFT JOIN dosomething.taxonomy_term_data ttd1 \n    ON fdfat.field_action_type_tid = ttd1.tid \nLEFT JOIN dosomething.field_data_field_cause fdfc \n    ON fdfc.entity_id = c.field_campaigns_target_id \nLEFT JOIN dosomething.taxonomy_term_data ttd2 \n    ON fdfc.field_cause_tid = ttd2.tid \nWHERE c.bundle = 'campaign_run' \nGROUP BY 1,2,3,4,5,6,7,8,9,10,11 \nORDER BY c.field_campaigns_target_id, fdfrd.field_run_date_value", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "SELECT c.field_campaigns_target_id as campaign_node_id,\n       n2.title as campaign_node_id_title,\n       c.entity_id as campaign_run_id,\n       n1.title as campaign_run_id_title,\n       fdfct.field_campaign_type_value as campaign_type,\n       c.language as campaign_language,\n       fdfrd.field_run_date_value as campaign_run_start_date,\n       fdfrd.field_run_date_value2 as campaign_run_end_date,\n       to_timestamp(n1.created) as campaign_created_date,\n       fdfrn.field_reportback_noun_value as campaign_noun,\n       fdfrv.field_reportback_verb_value as campaign_verb,\n       array_to_string(array_agg(distinct ttd2.name), ', ') as campaign_cause_type,\n       array_to_string(array_agg(distinct fdfcta.field_call_to_action_value), ', ') as campaign_cta,\n       array_to_string(array_agg(distinct ttd1.name), ', ') as campaign_action_type \nFROM dosomething.field_data_field_campaigns c \nLEFT JOIN dosomething.node n1 \n    ON n1.nid = c.entity_id \nLEFT JOIN dosomething.node n2 \n    ON n2.nid = c.field_campaigns_target_id \nLEFT JOIN dosomething.field_data_field_campaign_type fdfct \n    ON c.field_campaigns_target_id = fdfct.entity_id \nLEFT JOIN dosomething.field_data_field_run_date fdfrd \n    ON c.entity_id = fdfrd.entity_id and c.language = fdfrd.language \nLEFT JOIN dosomething.field_data_field_call_to_action fdfcta \n    ON c.field_campaigns_target_id = fdfcta.entity_id and c.language = fdfcta.language \nLEFT JOIN dosomething.field_data_field_reportback_noun fdfrn \n    ON c.field_campaigns_target_id = fdfrn.entity_id and c.language = fdfrn.language \nLEFT JOIN dosomething.field_data_field_reportback_verb fdfrv \n    ON c.field_campaigns_target_id = fdfrv.entity_id and c.language = fdfrv.language \nLEFT JOIN dosomething.field_data_field_action_type fdfat \n    ON fdfat.entity_id = c.field_campaigns_target_id \nLEFT JOIN dosomething.taxonomy_term_data ttd1 \n    ON fdfat.field_action_type_tid = ttd1.tid \nLEFT JOIN dosomething.field_data_field_cause fdfc \n    ON fdfc.entity_id = c.field_campaigns_target_id \nLEFT JOIN dosomething.taxonomy_term_data ttd2 \n    ON fdfc.field_cause_tid = ttd2.tid \nWHERE c.bundle = 'campaign_run' \nGROUP BY 1,2,3,4,5,6,7,8,9,10,11 \nORDER BY c.field_campaigns_target_id, fdfrd.field_run_date_value", "wrapped_sql": "None", "build_path": "../../docs/compiled/ds_dbt/campaign_info/campaign_info_all.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 2.2413079738616943, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:35.180890Z", "completed_at": "2019-11-19T20:10:35.207432Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:35.207683Z", "completed_at": "2019-11-19T20:10:35.210176Z"}]}, {"node": {"name": "snowplow_base_event", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "resource_type": "model", "path": "phoenix_events/snowplow_base_event.sql", "original_file_path": "models/phoenix_events/snowplow_base_event.sql", "package_name": "ds_dbt", "raw_sql": "SELECT \n    event_id AS event_id,\n    app_id AS event_source,\n    collector_tstamp AS event_datetime,\n    se_property AS event_name,\n    \"event\" AS event_type,\n    page_urlhost AS host,\n    page_urlpath AS \"path\",\n    page_urlquery AS query_parameters,\n    se_category,\n    se_action,\n    se_label,\n    domain_sessionid AS session_id,\n    domain_sessionidx AS session_counter,\n    dvce_type AS browser_size,\n    user_id AS northstar_id,\n    domain_userid AS device_id,\n    refr_urlhost AS referrer_host,\n    refr_urlpath AS referrer_path,\n    refr_source AS referrer_source\n  FROM {{ env_var('FT_SNOWPLOW') }}.\"event\"\n  WHERE event_id NOT IN\n  (SELECT event_id\n   FROM {{ env_var('FT_SNOWPLOW') }}.ua_parser_context u\n   WHERE u.useragent_family SIMILAR TO\n   '%%(bot|crawl|slurp|spider|archiv|spinn|sniff|seo|audit|survey|pingdom|worm|capture|(browser|screen)shots|analyz|index|thumb|check|facebook|YandexBot|Twitterbot|a_archiver|facebookexternalhit|Bingbot|Googlebot|Baiduspider|360(Spider|User-agent)|Ghost)%%')", "refs": [], "sources": [], "depends_on": {"nodes": [], "macros": []}, "unique_id": "model.ds_dbt.snowplow_base_event", "empty": false, "fqn": ["ds_dbt", "phoenix_events", "snowplow_base_event"], "tags": [], "config": {"enabled": true, "materialized": "table", "pre-hook": [], "tags": [], "post-hook": [{"sql": "CREATE INDEX IF NOT EXISTS event_index ON {{ this }}(event_id)", "transaction": true, "index": 0}, {"sql": "GRANT SELECT ON {{ this }} TO dsanalyst", "transaction": true, "index": 1}], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}, "alias": "snowplow_base_event"}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "snowplow_base_event", "columns": {"event_id": {"name": "event_id", "description": "This is a unique identifier for each event"}, "event_source": {"name": "event_source", "description": "Application source for event (eg. Phoenix, Northstar)"}, "event_datetime": {"name": "event_datetime", "description": "When the event occurred in UTC (eg. 2018-01-01 12:00:00)"}, "event_name": {"name": "event_name", "description": "Name of the event (eg. northstar_submitted_register, https://docs.google.com/spreadsheets/d/1lm-fGrIm85nUTxSojqyCt_Ehmm1zEbViFhKpxcJiz1A/edit#gid=406441516)"}, "event_type": {"name": "event_type", "description": "Type of event (pv = 'Page View', se = 'Structured Event')"}, "host": {"name": "host", "description": "URL host where event occurred (eg. www.dosomething.org or identity.dosomething.org)"}, "path": {"name": "path", "description": "URL path event occurred at (eg. /login or /us/campaigns/huddle-for-heroes)"}, "query_parameters": {"name": "query_parameters", "description": "Optional query parameters for the request (eg. query=huddle)"}, "se_category": {"name": "se_category", "description": "Category of event (eg. focused_field, authentication) - Custom structured event"}, "se_action": {"name": "se_action", "description": "Action performed / event name (eg. form_submitted, action_failed) - Custom structured event"}, "se_label": {"name": "se_label", "description": "The object of the action (eg. first_name, register, voter_reg_status) - Custom structured event"}, "session_id": {"name": "session_id", "description": "Unique identifier of the user's session"}, "session_counter": {"name": "session_counter", "description": "How many sessions a user has started"}, "browser_size": {"name": "browser_size", "description": "Which type of browser a user is using (eg. Mobile, Desktop)"}, "northstar_id": {"name": "northstar_id", "description": "The Northstar ID of the user who generated the event"}, "device_id": {"name": "device_id", "description": "ID of the device used"}, "referrer_host": {"name": "referrer_host", "description": "URL host of the referring site (eg. google.com)"}, "referrer_path": {"name": "referrer_path", "description": "URL path from referring site (eg. /10-stats-on-teen-drug-and-alcohol-use/)"}, "referrer_source": {"name": "referrer_source", "description": "Referrer source name (eg. Google, Facebook)"}}, "description": "Table that extracts and cleans up relevant columns from raw DS web clickstream data.", "patch_path": "models/phoenix_events/schema.yml", "docrefs": [{"documentation_package": "", "documentation_name": "event_id", "column_name": "event_id"}, {"documentation_package": "", "documentation_name": "event_source", "column_name": "event_source"}, {"documentation_package": "", "documentation_name": "event_datetime", "column_name": "event_datetime"}, {"documentation_package": "", "documentation_name": "event_name", "column_name": "event_name"}, {"documentation_package": "", "documentation_name": "event_type", "column_name": "event_type"}, {"documentation_package": "", "documentation_name": "host", "column_name": "host"}, {"documentation_package": "", "documentation_name": "path", "column_name": "path"}, {"documentation_package": "", "documentation_name": "query_parameters", "column_name": "query_parameters"}, {"documentation_package": "", "documentation_name": "se_category", "column_name": "se_category"}, {"documentation_package": "", "documentation_name": "se_action", "column_name": "se_action"}, {"documentation_package": "", "documentation_name": "se_label", "column_name": "se_label"}, {"documentation_package": "", "documentation_name": "session_id", "column_name": "session_id"}, {"documentation_package": "", "documentation_name": "session_counter", "column_name": "session_counter"}, {"documentation_package": "", "documentation_name": "browser_size", "column_name": "browser_size"}, {"documentation_package": "", "documentation_name": "northstar_id", "column_name": "northstar_id"}, {"documentation_package": "", "documentation_name": "device_id", "column_name": "device_id"}, {"documentation_package": "", "documentation_name": "referrer_host", "column_name": "referrer_host"}, {"documentation_package": "", "documentation_name": "referrer_path", "column_name": "referrer_path"}, {"documentation_package": "", "documentation_name": "referrer_source", "column_name": "referrer_source"}], "compiled": true, "compiled_sql": "SELECT \n    event_id AS event_id,\n    app_id AS event_source,\n    collector_tstamp AS event_datetime,\n    se_property AS event_name,\n    \"event\" AS event_type,\n    page_urlhost AS host,\n    page_urlpath AS \"path\",\n    page_urlquery AS query_parameters,\n    se_category,\n    se_action,\n    se_label,\n    domain_sessionid AS session_id,\n    domain_sessionidx AS session_counter,\n    dvce_type AS browser_size,\n    user_id AS northstar_id,\n    domain_userid AS device_id,\n    refr_urlhost AS referrer_host,\n    refr_urlpath AS referrer_path,\n    refr_source AS referrer_source\n  FROM ft_snowplow.\"event\"\n  WHERE event_id NOT IN\n  (SELECT event_id\n   FROM ft_snowplow.ua_parser_context u\n   WHERE u.useragent_family SIMILAR TO\n   '%%(bot|crawl|slurp|spider|archiv|spinn|sniff|seo|audit|survey|pingdom|worm|capture|(browser|screen)shots|analyz|index|thumb|check|facebook|YandexBot|Twitterbot|a_archiver|facebookexternalhit|Bingbot|Googlebot|Baiduspider|360(Spider|User-agent)|Ghost)%%')", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "SELECT \n    event_id AS event_id,\n    app_id AS event_source,\n    collector_tstamp AS event_datetime,\n    se_property AS event_name,\n    \"event\" AS event_type,\n    page_urlhost AS host,\n    page_urlpath AS \"path\",\n    page_urlquery AS query_parameters,\n    se_category,\n    se_action,\n    se_label,\n    domain_sessionid AS session_id,\n    domain_sessionidx AS session_counter,\n    dvce_type AS browser_size,\n    user_id AS northstar_id,\n    domain_userid AS device_id,\n    refr_urlhost AS referrer_host,\n    refr_urlpath AS referrer_path,\n    refr_source AS referrer_source\n  FROM ft_snowplow.\"event\"\n  WHERE event_id NOT IN\n  (SELECT event_id\n   FROM ft_snowplow.ua_parser_context u\n   WHERE u.useragent_family SIMILAR TO\n   '%%(bot|crawl|slurp|spider|archiv|spinn|sniff|seo|audit|survey|pingdom|worm|capture|(browser|screen)shots|analyz|index|thumb|check|facebook|YandexBot|Twitterbot|a_archiver|facebookexternalhit|Bingbot|Googlebot|Baiduspider|360(Spider|User-agent)|Ghost)%%')", "wrapped_sql": "None", "build_path": "../../docs/compiled/ds_dbt/phoenix_events/snowplow_base_event.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.013653039932250977, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:35.216482Z", "completed_at": "2019-11-19T20:10:35.223287Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:35.223444Z", "completed_at": "2019-11-19T20:10:35.226479Z"}]}, {"node": {"name": "snowplow_payload_event", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "resource_type": "model", "path": "phoenix_events/snowplow_payload_event.sql", "original_file_path": "models/phoenix_events/snowplow_payload_event.sql", "package_name": "ds_dbt", "raw_sql": "SELECT\n    event_id,\n    payload::jsonb #>> '{utmSource}' AS utm_source,\n    payload::jsonb #>> '{utmMedium}' AS utm_medium,\n    payload::jsonb #>> '{utmCampaign}' AS utm_campaign,\n    payload::jsonb #>> '{url}' AS url,\n    payload::jsonb #>> '{campaignId}' AS campaign_id,\n    payload::jsonb #>> '{modalType}' AS modal_type,\n    payload::jsonb #>> '{searchQuery}' AS search_query,\n    _fivetran_synced AS ft_timestamp\n  FROM {{ env_var('FT_SNOWPLOW') }}.snowplow_event", "refs": [], "sources": [], "depends_on": {"nodes": [], "macros": []}, "unique_id": "model.ds_dbt.snowplow_payload_event", "empty": false, "fqn": ["ds_dbt", "phoenix_events", "snowplow_payload_event"], "tags": [], "config": {"enabled": true, "materialized": "table", "pre-hook": [], "tags": [], "post-hook": [{"sql": "CREATE INDEX IF NOT EXISTS payload_event_id ON {{ this }}(event_id)", "transaction": true, "index": 0}, {"sql": "GRANT SELECT ON {{ this }} TO dsanalyst", "transaction": true, "index": 1}], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}, "alias": "snowplow_payload_event"}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "snowplow_payload_event", "columns": {"event_id": {"name": "event_id", "description": "This is a unique identifier for each event"}, "utm_source": {"name": "utm_source", "description": "Tracks where the traffic is coming from. (eg. scholarship_listing, Facebook)"}, "utm_medium": {"name": "utm_medium", "description": "How the traffic got to the platform (eg. referral, CPC)"}, "utm_campaign": {"name": "utm_campaign", "description": "Tracks which campaign the traffic was generated by. Shows up in Google Analytics as Campaign Name (eg. editorial_newsletter)"}, "url": {"name": "url", "description": "URL of campaign (eg. https://dosome.click/nyn5m7)"}, "campaign_id": {"name": "campaign_id", "description": "Internal campaign id from contentful"}, "modal_type": {"name": "modal_type", "description": "NULL or SURVEY_MODAL"}, "ft_timestamp": {"name": "ft_timestamp", "description": "When the event occurred in UTC (eg. 2018-01-01 12:00:00)"}}, "description": "Table containing extra data from events in snowplow_base_event table", "patch_path": "models/phoenix_events/schema.yml", "docrefs": [{"documentation_package": "", "documentation_name": "event_id", "column_name": "event_id"}, {"documentation_package": "", "documentation_name": "utm_source", "column_name": "utm_source"}, {"documentation_package": "", "documentation_name": "utm_medium", "column_name": "utm_medium"}, {"documentation_package": "", "documentation_name": "utm_campaign", "column_name": "utm_campaign"}, {"documentation_package": "", "documentation_name": "url", "column_name": "url"}, {"documentation_package": "", "documentation_name": "modal_type", "column_name": "modal_type"}, {"documentation_package": "", "documentation_name": "event_datetime", "column_name": "ft_timestamp"}], "compiled": true, "compiled_sql": "SELECT\n    event_id,\n    payload::jsonb #>> '{utmSource}' AS utm_source,\n    payload::jsonb #>> '{utmMedium}' AS utm_medium,\n    payload::jsonb #>> '{utmCampaign}' AS utm_campaign,\n    payload::jsonb #>> '{url}' AS url,\n    payload::jsonb #>> '{campaignId}' AS campaign_id,\n    payload::jsonb #>> '{modalType}' AS modal_type,\n    payload::jsonb #>> '{searchQuery}' AS search_query,\n    _fivetran_synced AS ft_timestamp\n  FROM ft_snowplow.snowplow_event", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "SELECT\n    event_id,\n    payload::jsonb #>> '{utmSource}' AS utm_source,\n    payload::jsonb #>> '{utmMedium}' AS utm_medium,\n    payload::jsonb #>> '{utmCampaign}' AS utm_campaign,\n    payload::jsonb #>> '{url}' AS url,\n    payload::jsonb #>> '{campaignId}' AS campaign_id,\n    payload::jsonb #>> '{modalType}' AS modal_type,\n    payload::jsonb #>> '{searchQuery}' AS search_query,\n    _fivetran_synced AS ft_timestamp\n  FROM ft_snowplow.snowplow_event", "wrapped_sql": "None", "build_path": "../../docs/compiled/ds_dbt/phoenix_events/snowplow_payload_event.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.010842084884643555, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:35.233056Z", "completed_at": "2019-11-19T20:10:35.238309Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:35.238455Z", "completed_at": "2019-11-19T20:10:35.240172Z"}]}, {"node": {"name": "messages_flattened", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "resource_type": "model", "path": "gambit_messages/messages_flattened.sql", "original_file_path": "models/gambit_messages/messages_flattened.sql", "package_name": "ds_dbt", "raw_sql": "SELECT\n    agent_id AS agent_id,\n    attachments->0->>'contentType' AS attachment_content_type,\n    attachments->0->>'url' AS attachment_url,\n    broadcast_id AS broadcast_id,\n    campaign_id AS campaign_id,\n    conversation_id AS conversation_id,\n    created_at as created_at,\n    direction AS direction,\n    _id AS message_id,\n    macro AS macro,\n    match AS match,\n    metadata #>> '{delivery,deliveredAt}' AS carrier_delivered_at,\n    metadata #>> '{delivery,failureData,code}' as carrier_failure_code,\n    (metadata #> '{delivery}' ->> 'totalSegments')::INT AS total_segments,\n    platform_message_id as platform_message_id,\n    template AS template,\n    text AS text,\n    topic AS topic,\n    user_id AS user_id\n  FROM {{ env_var('FT_GAMBIT') }}.messages", "refs": [], "sources": [], "depends_on": {"nodes": [], "macros": []}, "unique_id": "model.ds_dbt.messages_flattened", "empty": false, "fqn": ["ds_dbt", "gambit_messages", "messages_flattened"], "tags": [], "config": {"enabled": true, "materialized": "table", "pre-hook": [], "tags": [], "post-hook": [{"sql": "CREATE INDEX IF NOT EXISTS messages_user_id ON {{ this }}(user_id)", "transaction": true, "index": 0}, {"sql": "CREATE INDEX IF NOT EXISTS platform_message_id ON {{ this }}(platform_message_id)", "transaction": true, "index": 1}, {"sql": "GRANT SELECT ON {{ this }} TO dsanalyst", "transaction": true, "index": 2}, {"sql": "GRANT SELECT ON {{ this }} TO looker", "transaction": true, "index": 3}], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}, "alias": "messages_flattened"}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "messages_flattened", "columns": {"agent_id": {"name": "agent_id", "description": "If set, the content type of the picture the member is sending us. Exp. image/png."}, "attachment_content_type": {"name": "attachment_content_type", "description": "If set, the handle of the Front agent this outbound support message is from."}, "attachment_url": {"name": "attachment_url", "description": "If set, link to the picture sent by the member."}, "broadcast_id": {"name": "broadcast_id", "description": "If set, this message was an outbound broadcast (when direction == 'outbound-api-send'), or the User's reply to an outbound broadcast (when direction == 'inbound')"}, "campaign_id": {"name": "campaign_id", "description": "If set, holds a reference to the **last** campaign topic the member's conversation was in. This is useful to allow members to talk to Gambit and get quick responses (through Rivescript), without Gambit completely forgetting what state the member's interaction with a campaign topic was in. 'This is a unique identifier for the campaign'"}, "conversation_id": {"name": "conversation_id", "description": "Conversation the Message belongs to."}, "created_at": {"name": "created_at", "description": "Message's created date."}, "direction": {"name": "direction", "description": "Describes if the message is being received (inbound) or being sent (outbound-*)."}, "message_id": {"name": "message_id", "description": "Unique identifier for a Message (MongoDB id)."}, "macro": {"name": "macro", "description": "If set, this message is part of this macro's workflow. Example: subscription status updates, voting plan submission, aswering a multichoice broadcast, etc."}, "match": {"name": "match", "description": "Rivescript trigger matched by inbound text."}, "carrier_delivered_at": {"name": "carrier_delivered_at", "description": "Date when we received a delivery confirmation from the carrier."}, "carrier_failure_code": {"name": "carrier_failure_code", "description": "Error code reported by the carrier (Only for outbound messages)."}, "total_segments": {"name": "total_segments", "description": "Number of chunks the message is broken into by the SMS API."}, "platform_message_id": {"name": "platform_message_id", "description": "The Message identifier per platform."}, "template": {"name": "template", "description": "If set, template of outbound message sent (e.g. askQuantity, completedMenu)."}, "text": {"name": "text", "description": "Body of the message."}, "topic": {"name": "topic", "description": "Holds a reference to the **last** campaign topic the member's conversation was in. This is useful to allow members to talk to Gambit and get quick responses (through Rivescript), without Gambit completely forgetting what state the member's interaction with a campaign topic was in."}, "user_id": {"name": "user_id", "description": "The Northstar id of the member."}}, "description": "Messages which nested values have been flattened for easier querying.", "patch_path": "models/gambit_messages/schema.yml", "docrefs": [{"documentation_package": "", "documentation_name": "agent_id", "column_name": "agent_id"}, {"documentation_package": "", "documentation_name": "attachment_content_type", "column_name": "attachment_content_type"}, {"documentation_package": "", "documentation_name": "campaign_id", "column_name": "campaign_id"}, {"documentation_package": "", "documentation_name": "topic", "column_name": "topic"}], "compiled": true, "compiled_sql": "SELECT\n    agent_id AS agent_id,\n    attachments->0->>'contentType' AS attachment_content_type,\n    attachments->0->>'url' AS attachment_url,\n    broadcast_id AS broadcast_id,\n    campaign_id AS campaign_id,\n    conversation_id AS conversation_id,\n    created_at as created_at,\n    direction AS direction,\n    _id AS message_id,\n    macro AS macro,\n    match AS match,\n    metadata #>> '{delivery,deliveredAt}' AS carrier_delivered_at,\n    metadata #>> '{delivery,failureData,code}' as carrier_failure_code,\n    (metadata #> '{delivery}' ->> 'totalSegments')::INT AS total_segments,\n    platform_message_id as platform_message_id,\n    template AS template,\n    text AS text,\n    topic AS topic,\n    user_id AS user_id\n  FROM ft_gambit_conversations_api.messages", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "SELECT\n    agent_id AS agent_id,\n    attachments->0->>'contentType' AS attachment_content_type,\n    attachments->0->>'url' AS attachment_url,\n    broadcast_id AS broadcast_id,\n    campaign_id AS campaign_id,\n    conversation_id AS conversation_id,\n    created_at as created_at,\n    direction AS direction,\n    _id AS message_id,\n    macro AS macro,\n    match AS match,\n    metadata #>> '{delivery,deliveredAt}' AS carrier_delivered_at,\n    metadata #>> '{delivery,failureData,code}' as carrier_failure_code,\n    (metadata #> '{delivery}' ->> 'totalSegments')::INT AS total_segments,\n    platform_message_id as platform_message_id,\n    template AS template,\n    text AS text,\n    topic AS topic,\n    user_id AS user_id\n  FROM ft_gambit_conversations_api.messages", "wrapped_sql": "None", "build_path": "../../docs/compiled/ds_dbt/gambit_messages/messages_flattened.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.010625123977661133, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:35.242550Z", "completed_at": "2019-11-19T20:10:35.250497Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:35.250673Z", "completed_at": "2019-11-19T20:10:35.252687Z"}]}, {"node": {"name": "rock_the_vote", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "resource_type": "model", "path": "campaign_activity/rock_the_vote.sql", "original_file_path": "models/campaign_activity/rock_the_vote.sql", "package_name": "ds_dbt", "raw_sql": "SELECT id AS post_id, \n   details::jsonb->>'Tracking Source' AS tracking_source,\n   (details::jsonb->>'Started registration')::timestamp AS started_registration,\n   details::jsonb->>'Finish with State' AS finish_with_state,\n   details::jsonb->>'Status' AS status,\n   COALESCE(details::jsonb->>'Email address',details::jsonb->>'email') AS email,\n   details::jsonb->>'Home zip code' AS zip\n FROM {{ env_var('FT_ROGUE') }}.posts\n WHERE source = 'rock-the-vote'", "refs": [], "sources": [], "depends_on": {"nodes": [], "macros": []}, "unique_id": "model.ds_dbt.rock_the_vote", "empty": false, "fqn": ["ds_dbt", "campaign_activity", "rock_the_vote"], "tags": [], "config": {"enabled": true, "materialized": "table", "pre-hook": [], "tags": [], "post-hook": [{"sql": "CREATE UNIQUE INDEX IF NOT EXISTS rtv_unique ON {{ this }}(post_id, started_registration)", "transaction": true, "index": 0}, {"sql": "GRANT SELECT ON {{ this }} TO dsanalyst", "transaction": true, "index": 1}, {"sql": "GRANT SELECT ON {{ this }} TO looker", "transaction": true, "index": 2}], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}, "alias": "rock_the_vote"}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "rock_the_vote", "columns": {}, "description": "", "compiled": true, "compiled_sql": "SELECT id AS post_id, \n   details::jsonb->>'Tracking Source' AS tracking_source,\n   (details::jsonb->>'Started registration')::timestamp AS started_registration,\n   details::jsonb->>'Finish with State' AS finish_with_state,\n   details::jsonb->>'Status' AS status,\n   COALESCE(details::jsonb->>'Email address',details::jsonb->>'email') AS email,\n   details::jsonb->>'Home zip code' AS zip\n FROM ft_dosomething_rogue.posts\n WHERE source = 'rock-the-vote'", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "SELECT id AS post_id, \n   details::jsonb->>'Tracking Source' AS tracking_source,\n   (details::jsonb->>'Started registration')::timestamp AS started_registration,\n   details::jsonb->>'Finish with State' AS finish_with_state,\n   details::jsonb->>'Status' AS status,\n   COALESCE(details::jsonb->>'Email address',details::jsonb->>'email') AS email,\n   details::jsonb->>'Home zip code' AS zip\n FROM ft_dosomething_rogue.posts\n WHERE source = 'rock-the-vote'", "wrapped_sql": "None", "build_path": "../../docs/compiled/ds_dbt/campaign_activity/rock_the_vote.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.009857892990112305, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:35.257311Z", "completed_at": "2019-11-19T20:10:35.262999Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:35.263204Z", "completed_at": "2019-11-19T20:10:35.264507Z"}]}, {"node": {"name": "signups", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "resource_type": "model", "path": "campaign_activity/signups.sql", "original_file_path": "models/campaign_activity/signups.sql", "package_name": "ds_dbt", "raw_sql": "SELECT\n    sd.northstar_id AS northstar_id,\n    sd.id AS id,\n    sd.campaign_id AS campaign_id,\n    sd.campaign_run_id AS campaign_run_id,\n    sd.why_participated AS why_participated,\n    sd.\"source\" AS \"source\",\n    sd.details,\n\tCASE WHEN sd.\"source\" = 'niche' THEN 'niche'\n\t     WHEN sd.\"source\" ilike '%%sms%%' THEN 'sms'\n\t     WHEN sd.\"source\" in ('rock-the-vote', 'turbovote') THEN 'voter-reg'\n\t     ELSE 'web' END AS source_bucket,\n    sd.created_at AS created_at,\n    sd.source_details,\n    CASE \n\t\tWHEN source_details ILIKE '%%\\}'\n\t\tTHEN (CAST(source_details as json) ->> 'utm_medium') \n\t\tELSE NULL END AS utm_medium,\n\tCASE \n\t\tWHEN source_details ILIKE '%%\\}'\n\t\tTHEN (CAST(source_details as json) ->> 'utm_source') \n\t\tELSE NULL END AS utm_source,\n\tCASE \n\t\tWHEN source_details ILIKE '%%\\}'\n\t\tTHEN (CAST(source_details as json) ->> 'utm_campaign') \n\t\tELSE NULL END AS utm_campaign\nFROM {{ env_var('FT_ROGUE') }}.signups sd\nWHERE sd._fivetran_deleted = 'false'\nAND sd.deleted_at IS NULL\nAND sd.\"source\" IS DISTINCT FROM 'rogue-oauth'\nAND sd.why_participated IS DISTINCT FROM 'Testing from Ghost Inspector!'", "refs": [], "sources": [], "depends_on": {"nodes": [], "macros": []}, "unique_id": "model.ds_dbt.signups", "empty": false, "fqn": ["ds_dbt", "campaign_activity", "signups"], "tags": [], "config": {"enabled": true, "materialized": "table", "pre-hook": [], "tags": [], "post-hook": [{"sql": "CREATE UNIQUE INDEX IF NOT EXISTS signups_unique ON {{ this }}(created_at, id)", "transaction": true, "index": 0}, {"sql": "GRANT SELECT ON {{ this }} TO dsanalyst", "transaction": true, "index": 1}, {"sql": "GRANT SELECT ON {{ this }} TO looker", "transaction": true, "index": 2}], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}, "alias": "signups"}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "signups", "columns": {}, "description": "", "compiled": true, "compiled_sql": "SELECT\n    sd.northstar_id AS northstar_id,\n    sd.id AS id,\n    sd.campaign_id AS campaign_id,\n    sd.campaign_run_id AS campaign_run_id,\n    sd.why_participated AS why_participated,\n    sd.\"source\" AS \"source\",\n    sd.details,\n\tCASE WHEN sd.\"source\" = 'niche' THEN 'niche'\n\t     WHEN sd.\"source\" ilike '%%sms%%' THEN 'sms'\n\t     WHEN sd.\"source\" in ('rock-the-vote', 'turbovote') THEN 'voter-reg'\n\t     ELSE 'web' END AS source_bucket,\n    sd.created_at AS created_at,\n    sd.source_details,\n    CASE \n\t\tWHEN source_details ILIKE '%%\\}'\n\t\tTHEN (CAST(source_details as json) ->> 'utm_medium') \n\t\tELSE NULL END AS utm_medium,\n\tCASE \n\t\tWHEN source_details ILIKE '%%\\}'\n\t\tTHEN (CAST(source_details as json) ->> 'utm_source') \n\t\tELSE NULL END AS utm_source,\n\tCASE \n\t\tWHEN source_details ILIKE '%%\\}'\n\t\tTHEN (CAST(source_details as json) ->> 'utm_campaign') \n\t\tELSE NULL END AS utm_campaign\nFROM ft_dosomething_rogue.signups sd\nWHERE sd._fivetran_deleted = 'false'\nAND sd.deleted_at IS NULL\nAND sd.\"source\" IS DISTINCT FROM 'rogue-oauth'\nAND sd.why_participated IS DISTINCT FROM 'Testing from Ghost Inspector!'", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "SELECT\n    sd.northstar_id AS northstar_id,\n    sd.id AS id,\n    sd.campaign_id AS campaign_id,\n    sd.campaign_run_id AS campaign_run_id,\n    sd.why_participated AS why_participated,\n    sd.\"source\" AS \"source\",\n    sd.details,\n\tCASE WHEN sd.\"source\" = 'niche' THEN 'niche'\n\t     WHEN sd.\"source\" ilike '%%sms%%' THEN 'sms'\n\t     WHEN sd.\"source\" in ('rock-the-vote', 'turbovote') THEN 'voter-reg'\n\t     ELSE 'web' END AS source_bucket,\n    sd.created_at AS created_at,\n    sd.source_details,\n    CASE \n\t\tWHEN source_details ILIKE '%%\\}'\n\t\tTHEN (CAST(source_details as json) ->> 'utm_medium') \n\t\tELSE NULL END AS utm_medium,\n\tCASE \n\t\tWHEN source_details ILIKE '%%\\}'\n\t\tTHEN (CAST(source_details as json) ->> 'utm_source') \n\t\tELSE NULL END AS utm_source,\n\tCASE \n\t\tWHEN source_details ILIKE '%%\\}'\n\t\tTHEN (CAST(source_details as json) ->> 'utm_campaign') \n\t\tELSE NULL END AS utm_campaign\nFROM ft_dosomething_rogue.signups sd\nWHERE sd._fivetran_deleted = 'false'\nAND sd.deleted_at IS NULL\nAND sd.\"source\" IS DISTINCT FROM 'rogue-oauth'\nAND sd.why_participated IS DISTINCT FROM 'Testing from Ghost Inspector!'", "wrapped_sql": "None", "build_path": "../../docs/compiled/ds_dbt/campaign_activity/signups.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.007688283920288086, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:35.267661Z", "completed_at": "2019-11-19T20:10:35.272158Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:35.272297Z", "completed_at": "2019-11-19T20:10:35.273541Z"}]}, {"node": {"name": "turbovote", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "resource_type": "model", "path": "campaign_activity/turbovote.sql", "original_file_path": "models/campaign_activity/turbovote.sql", "package_name": "ds_dbt", "raw_sql": "SELECT id AS post_id, \n\tdetails::jsonb->>'hostname' AS hostname,\n\tdetails::jsonb->>'referral_code' AS referral_code,\n\tdetails::jsonb->>'partner_comms_opt_in' AS partner_comms_opt_in,\n\t(details::jsonb->>'created-at')::timestamp AS created_at,\n\t(details::jsonb->>'updated-at')::timestamp AS updated_at,\n\tsource_details,\n\tdetails::jsonb->>'voter_registration_status' AS voter_registration_status,\n\tdetails::jsonb->>'voter_registration_source' AS voter_registration_source,\n\tdetails::jsonb->>'voter_registration_method' AS voter_registration_method,\n\tdetails::jsonb->>'voter_registration_preference' AS voter_registration_preference,\n\tdetails::jsonb->>'email_subscribed' AS email_subscribed,\n\tdetails::jsonb->>'sms_subscribed' AS sms_subscribed\nFROM {{ env_var('FT_ROGUE') }}.posts\nWHERE source = 'turbovote'", "refs": [], "sources": [], "depends_on": {"nodes": [], "macros": []}, "unique_id": "model.ds_dbt.turbovote", "empty": false, "fqn": ["ds_dbt", "campaign_activity", "turbovote"], "tags": [], "config": {"enabled": true, "materialized": "table", "pre-hook": [], "tags": [], "post-hook": [{"sql": "CREATE UNIQUE INDEX IF NOT EXISTS turbovote_unique ON {{ this }}(post_id, created_at, updated_at)", "transaction": true, "index": 0}, {"sql": "GRANT SELECT ON {{ this }} TO dsanalyst", "transaction": true, "index": 1}, {"sql": "GRANT SELECT ON {{ this }} TO looker", "transaction": true, "index": 2}], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}, "alias": "turbovote"}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "turbovote", "columns": {}, "description": "", "compiled": true, "compiled_sql": "SELECT id AS post_id, \n\tdetails::jsonb->>'hostname' AS hostname,\n\tdetails::jsonb->>'referral_code' AS referral_code,\n\tdetails::jsonb->>'partner_comms_opt_in' AS partner_comms_opt_in,\n\t(details::jsonb->>'created-at')::timestamp AS created_at,\n\t(details::jsonb->>'updated-at')::timestamp AS updated_at,\n\tsource_details,\n\tdetails::jsonb->>'voter_registration_status' AS voter_registration_status,\n\tdetails::jsonb->>'voter_registration_source' AS voter_registration_source,\n\tdetails::jsonb->>'voter_registration_method' AS voter_registration_method,\n\tdetails::jsonb->>'voter_registration_preference' AS voter_registration_preference,\n\tdetails::jsonb->>'email_subscribed' AS email_subscribed,\n\tdetails::jsonb->>'sms_subscribed' AS sms_subscribed\nFROM ft_dosomething_rogue.posts\nWHERE source = 'turbovote'", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "SELECT id AS post_id, \n\tdetails::jsonb->>'hostname' AS hostname,\n\tdetails::jsonb->>'referral_code' AS referral_code,\n\tdetails::jsonb->>'partner_comms_opt_in' AS partner_comms_opt_in,\n\t(details::jsonb->>'created-at')::timestamp AS created_at,\n\t(details::jsonb->>'updated-at')::timestamp AS updated_at,\n\tsource_details,\n\tdetails::jsonb->>'voter_registration_status' AS voter_registration_status,\n\tdetails::jsonb->>'voter_registration_source' AS voter_registration_source,\n\tdetails::jsonb->>'voter_registration_method' AS voter_registration_method,\n\tdetails::jsonb->>'voter_registration_preference' AS voter_registration_preference,\n\tdetails::jsonb->>'email_subscribed' AS email_subscribed,\n\tdetails::jsonb->>'sms_subscribed' AS sms_subscribed\nFROM ft_dosomething_rogue.posts\nWHERE source = 'turbovote'", "wrapped_sql": "None", "build_path": "../../docs/compiled/ds_dbt/campaign_activity/turbovote.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.007404804229736328, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:35.277475Z", "completed_at": "2019-11-19T20:10:35.281663Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:35.281795Z", "completed_at": "2019-11-19T20:10:35.283047Z"}]}, {"node": {"name": "cio_latest_status", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "resource_type": "model", "path": "users_table/cio_latest_status.sql", "original_file_path": "models/users_table/cio_latest_status.sql", "package_name": "ds_dbt", "raw_sql": "SELECT \n\tcio.customer_id,\n\tmax(CASE WHEN \n\t\t\tcio.event_type = 'customer_unsubscribed' \n\t\t\tTHEN 'customer_unsubscribed' \n\t\t\tELSE 'customer_subscribed' END) AS event_type,\n\tmax(cio.\"timestamp\") AS \"timestamp\"\nFROM cio.customer_event cio\nINNER JOIN \n\t(SELECT \n\t\tctemp.customer_id,\n\t\tmax(ctemp.\"timestamp\") AS max_update\n\tFROM cio.customer_event ctemp\n\tGROUP BY ctemp.customer_id) cio_max \n\t\tON cio_max.customer_id = cio.customer_id \n\t\tAND cio_max.max_update = cio.\"timestamp\"\nGROUP BY cio.customer_id", "refs": [], "sources": [], "depends_on": {"nodes": [], "macros": []}, "unique_id": "model.ds_dbt.cio_latest_status", "empty": false, "fqn": ["ds_dbt", "users_table", "cio_latest_status"], "tags": [], "config": {"enabled": true, "materialized": "table", "pre-hook": [], "tags": [], "post-hook": [{"sql": "CREATE INDEX IF NOT EXISTS cio_indices ON {{ this }}(customer_id)", "transaction": true, "index": 0}, {"sql": "GRANT SELECT ON {{ this }} TO dsanalyst", "transaction": true, "index": 1}, {"sql": "GRANT SELECT ON {{ this }} TO looker", "transaction": true, "index": 2}], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}, "alias": "cio_latest_status"}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "cio_latest_status", "columns": {}, "description": "", "compiled": true, "compiled_sql": "SELECT \n\tcio.customer_id,\n\tmax(CASE WHEN \n\t\t\tcio.event_type = 'customer_unsubscribed' \n\t\t\tTHEN 'customer_unsubscribed' \n\t\t\tELSE 'customer_subscribed' END) AS event_type,\n\tmax(cio.\"timestamp\") AS \"timestamp\"\nFROM cio.customer_event cio\nINNER JOIN \n\t(SELECT \n\t\tctemp.customer_id,\n\t\tmax(ctemp.\"timestamp\") AS max_update\n\tFROM cio.customer_event ctemp\n\tGROUP BY ctemp.customer_id) cio_max \n\t\tON cio_max.customer_id = cio.customer_id \n\t\tAND cio_max.max_update = cio.\"timestamp\"\nGROUP BY cio.customer_id", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "SELECT \n\tcio.customer_id,\n\tmax(CASE WHEN \n\t\t\tcio.event_type = 'customer_unsubscribed' \n\t\t\tTHEN 'customer_unsubscribed' \n\t\t\tELSE 'customer_subscribed' END) AS event_type,\n\tmax(cio.\"timestamp\") AS \"timestamp\"\nFROM cio.customer_event cio\nINNER JOIN \n\t(SELECT \n\t\tctemp.customer_id,\n\t\tmax(ctemp.\"timestamp\") AS max_update\n\tFROM cio.customer_event ctemp\n\tGROUP BY ctemp.customer_id) cio_max \n\t\tON cio_max.customer_id = cio.customer_id \n\t\tAND cio_max.max_update = cio.\"timestamp\"\nGROUP BY cio.customer_id", "wrapped_sql": "None", "build_path": "../../docs/compiled/ds_dbt/users_table/cio_latest_status.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.007417917251586914, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:35.284832Z", "completed_at": "2019-11-19T20:10:35.290345Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:35.290521Z", "completed_at": "2019-11-19T20:10:35.291778Z"}]}, {"node": {"name": "bertly_clicks", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "resource_type": "model", "path": "bertly/bertly_clicks.sql", "original_file_path": "models/bertly/bertly_clicks.sql", "package_name": "ds_dbt", "raw_sql": "SELECT\n    *,\n    (regexp_split_to_array(\n        (regexp_split_to_array(\n            (regexp_split_to_array(\n                c.target_url, 'user')\n            )[2], E'[=:]+')\n        )[2],\n        E'[^a-zA-Z0-9]')\n    )[1] AS northstar_id,\n    COALESCE(\n        (regexp_split_to_array(c.target_url, 'broadcastid=', 'i'))[2],\n        (regexp_split_to_array(c.target_url, 'broadcastid_', 'i'))[2],\n        (regexp_split_to_array(c.target_url, 'broadcast_id=', 'i'))[2],\n        (regexp_split_to_array(c.target_url, 'broadcast_id_', 'i'))[2],\n        (regexp_split_to_array(c.target_url, 'broadcast_', 'i'))[2]\n            ) AS broadcast_id,\n    (CASE WHEN target_url ilike '%%source=web%%' THEN 'web'\n        WHEN target_url ilike '%%source=email%%' THEN 'email'\n        ELSE 'sms'\n        END) AS SOURCE,\n    CASE\n        WHEN c.user_agent IS NULL THEN 'uncertain'\n        WHEN c.user_agent ILIKE '%%facebot twitterbot%%'\n                OR c.user_agent ILIKE '%%X11; Ubuntu; Linux i686%%' THEN 'preview'\n        ELSE 'click' END AS interaction_type\nFROM {{ env_var('BERTLY') }}.clicks c", "refs": [], "sources": [], "depends_on": {"nodes": [], "macros": []}, "unique_id": "model.ds_dbt.bertly_clicks", "empty": false, "fqn": ["ds_dbt", "bertly", "bertly_clicks"], "tags": [], "config": {"enabled": true, "materialized": "table", "pre-hook": [], "tags": [], "post-hook": [{"sql": "CREATE UNIQUE INDEX IF NOT EXISTS clicks_unique ON {{ this }}(click_id)", "transaction": true, "index": 0}, {"sql": "GRANT SELECT ON {{ this }} TO dsanalyst", "transaction": true, "index": 1}, {"sql": "GRANT SELECT ON {{ this }} TO looker", "transaction": true, "index": 2}], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}, "alias": "bertly_clicks"}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "bertly_clicks", "columns": {}, "description": "", "compiled": true, "compiled_sql": "SELECT\n    *,\n    (regexp_split_to_array(\n        (regexp_split_to_array(\n            (regexp_split_to_array(\n                c.target_url, 'user')\n            )[2], E'[=:]+')\n        )[2],\n        E'[^a-zA-Z0-9]')\n    )[1] AS northstar_id,\n    COALESCE(\n        (regexp_split_to_array(c.target_url, 'broadcastid=', 'i'))[2],\n        (regexp_split_to_array(c.target_url, 'broadcastid_', 'i'))[2],\n        (regexp_split_to_array(c.target_url, 'broadcast_id=', 'i'))[2],\n        (regexp_split_to_array(c.target_url, 'broadcast_id_', 'i'))[2],\n        (regexp_split_to_array(c.target_url, 'broadcast_', 'i'))[2]\n            ) AS broadcast_id,\n    (CASE WHEN target_url ilike '%%source=web%%' THEN 'web'\n        WHEN target_url ilike '%%source=email%%' THEN 'email'\n        ELSE 'sms'\n        END) AS SOURCE,\n    CASE\n        WHEN c.user_agent IS NULL THEN 'uncertain'\n        WHEN c.user_agent ILIKE '%%facebot twitterbot%%'\n                OR c.user_agent ILIKE '%%X11; Ubuntu; Linux i686%%' THEN 'preview'\n        ELSE 'click' END AS interaction_type\nFROM bertly.clicks c", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "SELECT\n    *,\n    (regexp_split_to_array(\n        (regexp_split_to_array(\n            (regexp_split_to_array(\n                c.target_url, 'user')\n            )[2], E'[=:]+')\n        )[2],\n        E'[^a-zA-Z0-9]')\n    )[1] AS northstar_id,\n    COALESCE(\n        (regexp_split_to_array(c.target_url, 'broadcastid=', 'i'))[2],\n        (regexp_split_to_array(c.target_url, 'broadcastid_', 'i'))[2],\n        (regexp_split_to_array(c.target_url, 'broadcast_id=', 'i'))[2],\n        (regexp_split_to_array(c.target_url, 'broadcast_id_', 'i'))[2],\n        (regexp_split_to_array(c.target_url, 'broadcast_', 'i'))[2]\n            ) AS broadcast_id,\n    (CASE WHEN target_url ilike '%%source=web%%' THEN 'web'\n        WHEN target_url ilike '%%source=email%%' THEN 'email'\n        ELSE 'sms'\n        END) AS SOURCE,\n    CASE\n        WHEN c.user_agent IS NULL THEN 'uncertain'\n        WHEN c.user_agent ILIKE '%%facebot twitterbot%%'\n                OR c.user_agent ILIKE '%%X11; Ubuntu; Linux i686%%' THEN 'preview'\n        ELSE 'click' END AS interaction_type\nFROM bertly.clicks c", "wrapped_sql": "None", "build_path": "../../docs/compiled/ds_dbt/bertly/bertly_clicks.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.008026123046875, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:35.295287Z", "completed_at": "2019-11-19T20:10:35.299776Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:35.299993Z", "completed_at": "2019-11-19T20:10:35.301392Z"}]}, {"node": {"name": "email_subscription_topics_raw", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "resource_type": "model", "path": "news_subscription/email_subscription_topics_raw.sql", "original_file_path": "models/news_subscription/email_subscription_topics_raw.sql", "package_name": "ds_dbt", "raw_sql": "SELECT DISTINCT\n\t_id as northstar_id,\n\t(audit #>> '{email_subscription_topics,updated_at,date}')::timestamp AS newsletter_updated_at,\n\tjson_array_elements(u.email_subscription_topics)::TEXT AS newsletter_topic\nFROM {{ env_var(\"NORTHSTAR_FT_SCHEMA\") }}.northstar_users_snapshot u\nWHERE audit #>> '{email_subscription_topics,updated_at,date}' IS NOT NULL", "refs": [], "sources": [], "depends_on": {"nodes": [], "macros": []}, "unique_id": "model.ds_dbt.email_subscription_topics_raw", "empty": false, "fqn": ["ds_dbt", "news_subscription", "email_subscription_topics_raw"], "tags": [], "config": {"enabled": true, "materialized": "table", "pre-hook": [], "tags": [], "post-hook": [{"sql": "GRANT SELECT ON {{ this }} TO dsanalyst", "transaction": true, "index": 0}, {"sql": "GRANT SELECT ON {{ this }} TO looker", "transaction": true, "index": 1}], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}, "alias": "email_subscription_topics_raw"}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "email_subscription_topics_raw", "columns": {}, "description": "", "compiled": true, "compiled_sql": "SELECT DISTINCT\n\t_id as northstar_id,\n\t(audit #>> '{email_subscription_topics,updated_at,date}')::timestamp AS newsletter_updated_at,\n\tjson_array_elements(u.email_subscription_topics)::TEXT AS newsletter_topic\nFROM northstar_ft_userapi.northstar_users_snapshot u\nWHERE audit #>> '{email_subscription_topics,updated_at,date}' IS NOT NULL", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "SELECT DISTINCT\n\t_id as northstar_id,\n\t(audit #>> '{email_subscription_topics,updated_at,date}')::timestamp AS newsletter_updated_at,\n\tjson_array_elements(u.email_subscription_topics)::TEXT AS newsletter_topic\nFROM northstar_ft_userapi.northstar_users_snapshot u\nWHERE audit #>> '{email_subscription_topics,updated_at,date}' IS NOT NULL", "wrapped_sql": "None", "build_path": "../../docs/compiled/ds_dbt/news_subscription/email_subscription_topics_raw.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.007117033004760742, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:35.304537Z", "completed_at": "2019-11-19T20:10:35.308514Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:35.308651Z", "completed_at": "2019-11-19T20:10:35.309852Z"}]}, {"node": {"name": "post_actions", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "resource_type": "model", "path": "post_actions/post_actions.sql", "original_file_path": "models/post_actions/post_actions.sql", "package_name": "ds_dbt", "raw_sql": "SELECT *\nFROM {{ env_var('FT_ROGUE') }}.actions", "refs": [], "sources": [], "depends_on": {"nodes": [], "macros": []}, "unique_id": "model.ds_dbt.post_actions", "empty": false, "fqn": ["ds_dbt", "post_actions", "post_actions"], "tags": [], "config": {"enabled": true, "materialized": "table", "pre-hook": [], "tags": [], "post-hook": [{"sql": "CREATE UNIQUE INDEX IF NOT EXISTS post_actions_unique ON {{ this }}(created_at, id)", "transaction": true, "index": 0}, {"sql": "GRANT SELECT ON {{ this }} TO dsanalyst", "transaction": true, "index": 1}, {"sql": "GRANT SELECT ON {{ this }} TO looker", "transaction": true, "index": 2}], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}, "alias": "post_actions"}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "post_actions", "columns": {}, "description": "", "compiled": true, "compiled_sql": "SELECT *\nFROM ft_dosomething_rogue.actions", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "SELECT *\nFROM ft_dosomething_rogue.actions", "wrapped_sql": "None", "build_path": "../../docs/compiled/ds_dbt/post_actions/post_actions.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.008370161056518555, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:35.311784Z", "completed_at": "2019-11-19T20:10:35.317627Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:35.317867Z", "completed_at": "2019-11-19T20:10:35.319630Z"}]}, {"node": {"name": "northstar_users_snapshot", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "resource_type": "snapshot", "path": "northstar.sql", "original_file_path": "snapshots/northstar.sql", "package_name": "ds_dbt", "raw_sql": "\n\n    {{\n        config(\n          target_database=env_var(\"NORTHSTAR_TARGET_DB\"),\n          target_schema=env_var(\"NORTHSTAR_FT_SCHEMA\"),\n          unique_key='_id',\n          strategy='timestamp',\n          updated_at='updated_at',\n        )\n    }}\n    \n    select * from {{ env_var('NORTHSTAR_FT_SCHEMA') }}.users\n    \n", "refs": [], "sources": [], "depends_on": {"nodes": [], "macros": []}, "unique_id": "snapshot.ds_dbt.northstar_users_snapshot", "empty": false, "fqn": ["ds_dbt", "northstar_users_snapshot"], "tags": [], "config": {"enabled": true, "materialized": "snapshot", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}, "target_database": "quasar_prod_warehouse", "target_schema": "northstar_ft_userapi", "unique_key": "_id", "strategy": "timestamp", "updated_at": "updated_at"}, "schema": "northstar_ft_userapi", "database": "quasar_prod_warehouse", "alias": "northstar_users_snapshot", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n    \n    \n    select * from northstar_ft_userapi.users\n    ", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n    \n    \n    select * from northstar_ft_userapi.users\n    ", "wrapped_sql": "None"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.007587909698486328, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:35.322947Z", "completed_at": "2019-11-19T20:10:35.327472Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:35.327585Z", "completed_at": "2019-11-19T20:10:35.328636Z"}]}, {"node": {"name": "campaign_info", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "resource_type": "model", "path": "campaign_info/campaign_info.sql", "original_file_path": "models/campaign_info/campaign_info.sql", "package_name": "ds_dbt", "raw_sql": "SELECT \n\tc.id AS campaign_id,\n\tc.campaign_run_id,\n\tc.internal_title AS campaign_name,\n\tc.cause AS campaign_cause,\n\tc.start_date AS campaign_run_start_date,\n\tc.end_date AS campaign_run_end_date,\n\tc.created_at AS campaign_created_date,\n\tCOALESCE(i.campaign_node_id, c.id) AS campaign_node_id,\n\ti.campaign_node_id_title,\n\ti.campaign_run_id_title,\n\ti.campaign_action_type,\n\tCOALESCE(c.cause, i.campaign_cause_type) AS campaign_cause_type,\n\ti.campaign_noun,\n\ti.campaign_verb,\n\ti.campaign_cta\nFROM {{ env_var('FT_ROGUE') }}.campaigns c\nLEFT JOIN {{ ref('campaign_info_all') }} i ON i.campaign_run_id = c.campaign_run_id\nWHERE i.campaign_language = 'en' OR i.campaign_language IS NULL", "refs": [["campaign_info_all"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.campaign_info_all"], "macros": []}, "unique_id": "model.ds_dbt.campaign_info", "empty": false, "fqn": ["ds_dbt", "campaign_info", "campaign_info"], "tags": [], "config": {"enabled": true, "materialized": "table", "pre-hook": [], "tags": [], "post-hook": [{"sql": "CREATE UNIQUE INDEX IF NOT EXISTS campaign_info_i ON {{ this }} (campaign_run_id, campaign_id)", "transaction": true, "index": 0}, {"sql": "GRANT SELECT ON {{ this }} TO dsanalyst", "transaction": true, "index": 1}, {"sql": "GRANT SELECT ON {{ this }} TO looker", "transaction": true, "index": 2}], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}, "alias": "campaign_info"}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "campaign_info", "columns": {"campaign_id": {"name": "campaign_id", "description": "This is a unique identifier for the campaign"}, "campaign_run_id": {"name": "campaign_run_id", "description": "Unique identifier for the campaign run"}, "campaign_name": {"name": "campaign_name", "description": "Name of the campaign"}, "campaign_cause": {"name": "campaign_cause", "description": "Campaign cause (eg. Mental Health, Education)"}, "campaign_run_start_date": {"name": "campaign_run_start_date", "description": "Start date of the campaign run"}, "campaign_run_end_date": {"name": "campaign_run_end_date", "description": "End date of the campaign run"}, "campaign_created_date": {"name": "campaign_created_date", "description": "When the campaign was created in UTC (eg. 2018-01-01 12:00:00)"}, "campaign_node_id": {"name": "campaign_node_id", "description": "This is a unique identifier for the campaign"}, "campaign_node_id_title": {"name": "campaign_node_id_title", "description": "Campaign title"}, "campaign_run_id_title": {"name": "campaign_run_id_title", "description": "Title of the campaign run"}, "campaign_action_type": {"name": "campaign_action_type", "description": "Campaign action type (eg. Make Something, Share Something)"}, "campaign_cause_type": {"name": "campaign_cause_type", "description": "Campaign cause type (eg. Mental Health, Education)"}, "campaign_noun": {"name": "campaign_noun", "description": "Noun applicable to the user's action"}, "campaign_verb": {"name": "campaign_verb", "description": "Verb describing the action the user should take"}, "campaign_cta": {"name": "campaign_cta", "description": "Campaign's call to action"}}, "description": "A table containing information about campaigns", "patch_path": "models/campaign_info/schema.yml", "docrefs": [{"documentation_package": "", "documentation_name": "campaign_id", "column_name": "campaign_id"}, {"documentation_package": "", "documentation_name": "campaign_run_id", "column_name": "campaign_run_id"}, {"documentation_package": "", "documentation_name": "campaign_name", "column_name": "campaign_name"}, {"documentation_package": "", "documentation_name": "campaign_cause", "column_name": "campaign_cause"}, {"documentation_package": "", "documentation_name": "campaign_run_start_date", "column_name": "campaign_run_start_date"}, {"documentation_package": "", "documentation_name": "campaign_run_end_date", "column_name": "campaign_run_end_date"}, {"documentation_package": "", "documentation_name": "campaign_created_date", "column_name": "campaign_created_date"}, {"documentation_package": "", "documentation_name": "campaign_id", "column_name": "campaign_node_id"}, {"documentation_package": "", "documentation_name": "campaign_node_id_title", "column_name": "campaign_node_id_title"}, {"documentation_package": "", "documentation_name": "campaign_run_id_title", "column_name": "campaign_run_id_title"}, {"documentation_package": "", "documentation_name": "campaign_action_type", "column_name": "campaign_action_type"}, {"documentation_package": "", "documentation_name": "campaign_cause_type", "column_name": "campaign_cause_type"}, {"documentation_package": "", "documentation_name": "campaign_noun", "column_name": "campaign_noun"}, {"documentation_package": "", "documentation_name": "campaign_verb", "column_name": "campaign_verb"}, {"documentation_package": "", "documentation_name": "campaign_cta", "column_name": "campaign_cta"}], "compiled": true, "compiled_sql": "SELECT \n\tc.id AS campaign_id,\n\tc.campaign_run_id,\n\tc.internal_title AS campaign_name,\n\tc.cause AS campaign_cause,\n\tc.start_date AS campaign_run_start_date,\n\tc.end_date AS campaign_run_end_date,\n\tc.created_at AS campaign_created_date,\n\tCOALESCE(i.campaign_node_id, c.id) AS campaign_node_id,\n\ti.campaign_node_id_title,\n\ti.campaign_run_id_title,\n\ti.campaign_action_type,\n\tCOALESCE(c.cause, i.campaign_cause_type) AS campaign_cause_type,\n\ti.campaign_noun,\n\ti.campaign_verb,\n\ti.campaign_cta\nFROM ft_dosomething_rogue.campaigns c\nLEFT JOIN \"quasar_prod_warehouse\".\"public\".\"campaign_info_all\" i ON i.campaign_run_id = c.campaign_run_id\nWHERE i.campaign_language = 'en' OR i.campaign_language IS NULL", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "SELECT \n\tc.id AS campaign_id,\n\tc.campaign_run_id,\n\tc.internal_title AS campaign_name,\n\tc.cause AS campaign_cause,\n\tc.start_date AS campaign_run_start_date,\n\tc.end_date AS campaign_run_end_date,\n\tc.created_at AS campaign_created_date,\n\tCOALESCE(i.campaign_node_id, c.id) AS campaign_node_id,\n\ti.campaign_node_id_title,\n\ti.campaign_run_id_title,\n\ti.campaign_action_type,\n\tCOALESCE(c.cause, i.campaign_cause_type) AS campaign_cause_type,\n\ti.campaign_noun,\n\ti.campaign_verb,\n\ti.campaign_cta\nFROM ft_dosomething_rogue.campaigns c\nLEFT JOIN \"quasar_prod_warehouse\".\"public\".\"campaign_info_all\" i ON i.campaign_run_id = c.campaign_run_id\nWHERE i.campaign_language = 'en' OR i.campaign_language IS NULL", "wrapped_sql": "None", "build_path": "../../docs/compiled/ds_dbt/campaign_info/campaign_info.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.010737895965576172, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:35.331447Z", "completed_at": "2019-11-19T20:10:35.337941Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:35.338058Z", "completed_at": "2019-11-19T20:10:35.340490Z"}]}, {"node": {"name": "campaign_info_international", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "resource_type": "model", "path": "campaign_info/campaign_info_international.sql", "original_file_path": "models/campaign_info/campaign_info_international.sql", "package_name": "ds_dbt", "raw_sql": "SELECT \n\tc.id AS campaign_id,\n\tc.internal_title AS campaign_name,\n\ti.*\nFROM {{ ref('campaign_info_all') }} i\nLEFT JOIN {{ env_var('FT_ROGUE') }}.campaigns c ON i.campaign_run_id = c.campaign_run_id\nWHERE campaign_language IS DISTINCT FROM 'en'", "refs": [["campaign_info_all"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.campaign_info_all"], "macros": []}, "unique_id": "model.ds_dbt.campaign_info_international", "empty": false, "fqn": ["ds_dbt", "campaign_info", "campaign_info_international"], "tags": [], "config": {"enabled": true, "materialized": "table", "pre-hook": [], "tags": [], "post-hook": [{"sql": "GRANT SELECT ON {{ this }} TO dsanalyst", "transaction": true, "index": 0}, {"sql": "GRANT SELECT ON {{ this }} TO looker", "transaction": true, "index": 1}], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "campaign_info_international", "columns": {"campaign_id": {"name": "campaign_id", "description": "This is a unique identifier for the campaign"}, "campaign_name": {"name": "campaign_name", "description": "Name of the campaign"}, "campaign_node_id": {"name": "campaign_node_id", "description": "This is a unique identifier for the campaign"}, "campaign_node_id_title": {"name": "campaign_node_id_title", "description": "Campaign title"}, "campaign_run_id": {"name": "campaign_run_id", "description": "Unique identifier for the campaign run"}, "campaign_run_id_title": {"name": "campaign_run_id_title", "description": "Title of the campaign run"}, "campaign_type": {"name": "campaign_type", "description": "Campaign cause type (eg. Mental Health, Education)"}, "campaign_language": {"name": "campaign_language", "description": "\"Language in which the campaign is available\""}, "campaign_run_start_date": {"name": "campaign_run_start_date", "description": "Start date of the campaign run"}, "campaign_run_end_date": {"name": "campaign_run_end_date", "description": "End date of the campaign run"}, "campaign_created_date": {"name": "campaign_created_date", "description": "When the campaign was created in UTC (eg. 2018-01-01 12:00:00)"}, "campaign_noun": {"name": "campaign_noun", "description": "Noun applicable to the user's action"}, "campaign_verb": {"name": "campaign_verb", "description": "Verb describing the action the user should take"}, "campaign_cause_type": {"name": "campaign_cause_type", "description": "Campaign cause type (eg. Mental Health, Education)"}, "campaign_cta": {"name": "campaign_cta", "description": "Campaign's call to action"}, "campaign_action_type": {"name": "campaign_action_type", "description": "Campaign action type (eg. Make Something, Share Something)"}}, "description": "A table containing information about international campaigns", "patch_path": "models/campaign_info/schema.yml", "docrefs": [{"documentation_package": "", "documentation_name": "campaign_id", "column_name": "campaign_id"}, {"documentation_package": "", "documentation_name": "campaign_name", "column_name": "campaign_name"}, {"documentation_package": "", "documentation_name": "campaign_id", "column_name": "campaign_node_id"}, {"documentation_package": "", "documentation_name": "campaign_node_id_title", "column_name": "campaign_node_id_title"}, {"documentation_package": "", "documentation_name": "campaign_run_id", "column_name": "campaign_run_id"}, {"documentation_package": "", "documentation_name": "campaign_run_id_title", "column_name": "campaign_run_id_title"}, {"documentation_package": "", "documentation_name": "campaign_cause_type", "column_name": "campaign_type"}, {"documentation_package": "", "documentation_name": "campaign_language", "column_name": "campaign_language"}, {"documentation_package": "", "documentation_name": "campaign_run_start_date", "column_name": "campaign_run_start_date"}, {"documentation_package": "", "documentation_name": "campaign_run_end_date", "column_name": "campaign_run_end_date"}, {"documentation_package": "", "documentation_name": "campaign_created_date", "column_name": "campaign_created_date"}, {"documentation_package": "", "documentation_name": "campaign_noun", "column_name": "campaign_noun"}, {"documentation_package": "", "documentation_name": "campaign_verb", "column_name": "campaign_verb"}, {"documentation_package": "", "documentation_name": "campaign_cause_type", "column_name": "campaign_cause_type"}, {"documentation_package": "", "documentation_name": "campaign_cta", "column_name": "campaign_cta"}, {"documentation_package": "", "documentation_name": "campaign_action_type", "column_name": "campaign_action_type"}], "compiled": true, "compiled_sql": "SELECT \n\tc.id AS campaign_id,\n\tc.internal_title AS campaign_name,\n\ti.*\nFROM \"quasar_prod_warehouse\".\"public\".\"campaign_info_all\" i\nLEFT JOIN ft_dosomething_rogue.campaigns c ON i.campaign_run_id = c.campaign_run_id\nWHERE campaign_language IS DISTINCT FROM 'en'", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "SELECT \n\tc.id AS campaign_id,\n\tc.internal_title AS campaign_name,\n\ti.*\nFROM \"quasar_prod_warehouse\".\"public\".\"campaign_info_all\" i\nLEFT JOIN ft_dosomething_rogue.campaigns c ON i.campaign_run_id = c.campaign_run_id\nWHERE campaign_language IS DISTINCT FROM 'en'", "wrapped_sql": "None", "build_path": "../../docs/compiled/ds_dbt/campaign_info/campaign_info_international.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.014410972595214844, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:35.346425Z", "completed_at": "2019-11-19T20:10:35.354486Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:35.354731Z", "completed_at": "2019-11-19T20:10:35.357622Z"}]}, {"node": {"name": "not_null_campaign_info_all_campaign_action_type", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_campaign_info_all_campaign_action_type.sql", "original_file_path": "models/campaign_info/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('campaign_info_all'), column_name='campaign_action_type') }}", "refs": [["campaign_info_all"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.campaign_info_all"], "macros": []}, "unique_id": "test.ds_dbt.not_null_campaign_info_all_campaign_action_type", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_campaign_info_all_campaign_action_type"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_campaign_info_all_campaign_action_type", "column_name": "campaign_action_type", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info_all\"\nwhere campaign_action_type is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info_all\"\nwhere campaign_action_type is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info_all\"\nwhere campaign_action_type is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_campaign_info_all_campaign_action_type.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.010560989379882812, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:35.364005Z", "completed_at": "2019-11-19T20:10:35.369596Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:35.369768Z", "completed_at": "2019-11-19T20:10:35.370930Z"}]}, {"node": {"name": "not_null_campaign_info_all_campaign_cause_type", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_campaign_info_all_campaign_cause_type.sql", "original_file_path": "models/campaign_info/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('campaign_info_all'), column_name='campaign_cause_type') }}", "refs": [["campaign_info_all"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.campaign_info_all"], "macros": []}, "unique_id": "test.ds_dbt.not_null_campaign_info_all_campaign_cause_type", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_campaign_info_all_campaign_cause_type"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_campaign_info_all_campaign_cause_type", "column_name": "campaign_cause_type", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info_all\"\nwhere campaign_cause_type is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info_all\"\nwhere campaign_cause_type is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info_all\"\nwhere campaign_cause_type is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_campaign_info_all_campaign_cause_type.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.007818937301635742, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:35.374982Z", "completed_at": "2019-11-19T20:10:35.379641Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:35.379789Z", "completed_at": "2019-11-19T20:10:35.381056Z"}]}, {"node": {"name": "not_null_campaign_info_all_campaign_created_date", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_campaign_info_all_campaign_created_date.sql", "original_file_path": "models/campaign_info/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('campaign_info_all'), column_name='campaign_created_date') }}", "refs": [["campaign_info_all"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.campaign_info_all"], "macros": []}, "unique_id": "test.ds_dbt.not_null_campaign_info_all_campaign_created_date", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_campaign_info_all_campaign_created_date"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_campaign_info_all_campaign_created_date", "column_name": "campaign_created_date", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info_all\"\nwhere campaign_created_date is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info_all\"\nwhere campaign_created_date is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info_all\"\nwhere campaign_created_date is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_campaign_info_all_campaign_created_date.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.0077822208404541016, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:35.384932Z", "completed_at": "2019-11-19T20:10:35.389603Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:35.389736Z", "completed_at": "2019-11-19T20:10:35.390862Z"}]}, {"node": {"name": "not_null_campaign_info_all_campaign_cta", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_campaign_info_all_campaign_cta.sql", "original_file_path": "models/campaign_info/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('campaign_info_all'), column_name='campaign_cta') }}", "refs": [["campaign_info_all"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.campaign_info_all"], "macros": []}, "unique_id": "test.ds_dbt.not_null_campaign_info_all_campaign_cta", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_campaign_info_all_campaign_cta"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_campaign_info_all_campaign_cta", "column_name": "campaign_cta", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info_all\"\nwhere campaign_cta is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info_all\"\nwhere campaign_cta is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info_all\"\nwhere campaign_cta is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_campaign_info_all_campaign_cta.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.007356882095336914, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:35.394003Z", "completed_at": "2019-11-19T20:10:35.398529Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:35.398659Z", "completed_at": "2019-11-19T20:10:35.399753Z"}]}, {"node": {"name": "not_null_campaign_info_all_campaign_node_id", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_campaign_info_all_campaign_node_id.sql", "original_file_path": "models/campaign_info/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('campaign_info_all'), column_name='campaign_node_id') }}", "refs": [["campaign_info_all"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.campaign_info_all"], "macros": []}, "unique_id": "test.ds_dbt.not_null_campaign_info_all_campaign_node_id", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_campaign_info_all_campaign_node_id"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_campaign_info_all_campaign_node_id", "column_name": "campaign_node_id", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info_all\"\nwhere campaign_node_id is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info_all\"\nwhere campaign_node_id is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info_all\"\nwhere campaign_node_id is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_campaign_info_all_campaign_node_id.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.010326147079467773, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:35.401929Z", "completed_at": "2019-11-19T20:10:35.409293Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:35.409590Z", "completed_at": "2019-11-19T20:10:35.411601Z"}]}, {"node": {"name": "not_null_campaign_info_all_campaign_node_id_title", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_campaign_info_all_campaign_node_id_title.sql", "original_file_path": "models/campaign_info/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('campaign_info_all'), column_name='campaign_node_id_title') }}", "refs": [["campaign_info_all"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.campaign_info_all"], "macros": []}, "unique_id": "test.ds_dbt.not_null_campaign_info_all_campaign_node_id_title", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_campaign_info_all_campaign_node_id_title"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_campaign_info_all_campaign_node_id_title", "column_name": "campaign_node_id_title", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info_all\"\nwhere campaign_node_id_title is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info_all\"\nwhere campaign_node_id_title is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info_all\"\nwhere campaign_node_id_title is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_campaign_info_all_campaign_node_id_title.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.01176595687866211, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:35.416487Z", "completed_at": "2019-11-19T20:10:35.423872Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:35.424061Z", "completed_at": "2019-11-19T20:10:35.425375Z"}]}, {"node": {"name": "not_null_campaign_info_all_campaign_noun", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_campaign_info_all_campaign_noun.sql", "original_file_path": "models/campaign_info/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('campaign_info_all'), column_name='campaign_noun') }}", "refs": [["campaign_info_all"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.campaign_info_all"], "macros": []}, "unique_id": "test.ds_dbt.not_null_campaign_info_all_campaign_noun", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_campaign_info_all_campaign_noun"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_campaign_info_all_campaign_noun", "column_name": "campaign_noun", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info_all\"\nwhere campaign_noun is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info_all\"\nwhere campaign_noun is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info_all\"\nwhere campaign_noun is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_campaign_info_all_campaign_noun.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.009281158447265625, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:35.428809Z", "completed_at": "2019-11-19T20:10:35.433995Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:35.434179Z", "completed_at": "2019-11-19T20:10:35.436201Z"}]}, {"node": {"name": "not_null_campaign_info_all_campaign_run_end_date", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_campaign_info_all_campaign_run_end_date.sql", "original_file_path": "models/campaign_info/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('campaign_info_all'), column_name='campaign_run_end_date') }}", "refs": [["campaign_info_all"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.campaign_info_all"], "macros": []}, "unique_id": "test.ds_dbt.not_null_campaign_info_all_campaign_run_end_date", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_campaign_info_all_campaign_run_end_date"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_campaign_info_all_campaign_run_end_date", "column_name": "campaign_run_end_date", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info_all\"\nwhere campaign_run_end_date is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info_all\"\nwhere campaign_run_end_date is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info_all\"\nwhere campaign_run_end_date is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_campaign_info_all_campaign_run_end_date.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.013817787170410156, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:35.441303Z", "completed_at": "2019-11-19T20:10:35.450519Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:35.450746Z", "completed_at": "2019-11-19T20:10:35.452073Z"}]}, {"node": {"name": "not_null_campaign_info_all_campaign_run_id", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_campaign_info_all_campaign_run_id.sql", "original_file_path": "models/campaign_info/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('campaign_info_all'), column_name='campaign_run_id') }}", "refs": [["campaign_info_all"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.campaign_info_all"], "macros": []}, "unique_id": "test.ds_dbt.not_null_campaign_info_all_campaign_run_id", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_campaign_info_all_campaign_run_id"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_campaign_info_all_campaign_run_id", "column_name": "campaign_run_id", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info_all\"\nwhere campaign_run_id is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info_all\"\nwhere campaign_run_id is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info_all\"\nwhere campaign_run_id is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_campaign_info_all_campaign_run_id.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.008957862854003906, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:35.454101Z", "completed_at": "2019-11-19T20:10:35.460541Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:35.460728Z", "completed_at": "2019-11-19T20:10:35.462542Z"}]}, {"node": {"name": "not_null_campaign_info_all_campaign_run_id_title", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_campaign_info_all_campaign_run_id_title.sql", "original_file_path": "models/campaign_info/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('campaign_info_all'), column_name='campaign_run_id_title') }}", "refs": [["campaign_info_all"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.campaign_info_all"], "macros": []}, "unique_id": "test.ds_dbt.not_null_campaign_info_all_campaign_run_id_title", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_campaign_info_all_campaign_run_id_title"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_campaign_info_all_campaign_run_id_title", "column_name": "campaign_run_id_title", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info_all\"\nwhere campaign_run_id_title is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info_all\"\nwhere campaign_run_id_title is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info_all\"\nwhere campaign_run_id_title is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_campaign_info_all_campaign_run_id_title.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.011693000793457031, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:35.467223Z", "completed_at": "2019-11-19T20:10:35.474553Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:35.474756Z", "completed_at": "2019-11-19T20:10:35.475895Z"}]}, {"node": {"name": "not_null_campaign_info_all_campaign_run_start_date", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_campaign_info_all_campaign_run_start_date.sql", "original_file_path": "models/campaign_info/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('campaign_info_all'), column_name='campaign_run_start_date') }}", "refs": [["campaign_info_all"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.campaign_info_all"], "macros": []}, "unique_id": "test.ds_dbt.not_null_campaign_info_all_campaign_run_start_date", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_campaign_info_all_campaign_run_start_date"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_campaign_info_all_campaign_run_start_date", "column_name": "campaign_run_start_date", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info_all\"\nwhere campaign_run_start_date is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info_all\"\nwhere campaign_run_start_date is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info_all\"\nwhere campaign_run_start_date is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_campaign_info_all_campaign_run_start_date.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.007801055908203125, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:35.478886Z", "completed_at": "2019-11-19T20:10:35.483701Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:35.483832Z", "completed_at": "2019-11-19T20:10:35.485065Z"}]}, {"node": {"name": "not_null_campaign_info_all_campaign_type", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_campaign_info_all_campaign_type.sql", "original_file_path": "models/campaign_info/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('campaign_info_all'), column_name='campaign_type') }}", "refs": [["campaign_info_all"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.campaign_info_all"], "macros": []}, "unique_id": "test.ds_dbt.not_null_campaign_info_all_campaign_type", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_campaign_info_all_campaign_type"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_campaign_info_all_campaign_type", "column_name": "campaign_type", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info_all\"\nwhere campaign_type is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info_all\"\nwhere campaign_type is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info_all\"\nwhere campaign_type is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_campaign_info_all_campaign_type.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.011406183242797852, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:35.490011Z", "completed_at": "2019-11-19T20:10:35.497176Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:35.497349Z", "completed_at": "2019-11-19T20:10:35.498443Z"}]}, {"node": {"name": "not_null_campaign_info_all_campaign_verb", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_campaign_info_all_campaign_verb.sql", "original_file_path": "models/campaign_info/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('campaign_info_all'), column_name='campaign_verb') }}", "refs": [["campaign_info_all"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.campaign_info_all"], "macros": []}, "unique_id": "test.ds_dbt.not_null_campaign_info_all_campaign_verb", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_campaign_info_all_campaign_verb"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_campaign_info_all_campaign_verb", "column_name": "campaign_verb", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info_all\"\nwhere campaign_verb is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info_all\"\nwhere campaign_verb is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info_all\"\nwhere campaign_verb is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_campaign_info_all_campaign_verb.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.0077860355377197266, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:35.500329Z", "completed_at": "2019-11-19T20:10:35.506388Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:35.506517Z", "completed_at": "2019-11-19T20:10:35.507589Z"}]}, {"node": {"name": "unique_campaign_info_all_campaign_node_id", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/unique_campaign_info_all_campaign_node_id.sql", "original_file_path": "models/campaign_info/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_unique(model=ref('campaign_info_all'), column_name='campaign_node_id') }}", "refs": [["campaign_info_all"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.campaign_info_all"], "macros": []}, "unique_id": "test.ds_dbt.unique_campaign_info_all_campaign_node_id", "empty": false, "fqn": ["ds_dbt", "schema_test", "unique_campaign_info_all_campaign_node_id"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "unique_campaign_info_all_campaign_node_id", "column_name": "campaign_node_id", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        campaign_node_id\n\n    from \"quasar_prod_warehouse\".\"public\".\"campaign_info_all\"\n    where campaign_node_id is not null\n    group by campaign_node_id\n    having count(*) > 1\n\n) validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        campaign_node_id\n\n    from \"quasar_prod_warehouse\".\"public\".\"campaign_info_all\"\n    where campaign_node_id is not null\n    group by campaign_node_id\n    having count(*) > 1\n\n) validation_errors\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        campaign_node_id\n\n    from \"quasar_prod_warehouse\".\"public\".\"campaign_info_all\"\n    where campaign_node_id is not null\n    group by campaign_node_id\n    having count(*) > 1\n\n) validation_errors\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/unique_campaign_info_all_campaign_node_id.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.012840032577514648, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:35.514101Z", "completed_at": "2019-11-19T20:10:35.521475Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:35.521636Z", "completed_at": "2019-11-19T20:10:35.522730Z"}]}, {"node": {"name": "unique_campaign_info_all_campaign_noun", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/unique_campaign_info_all_campaign_noun.sql", "original_file_path": "models/campaign_info/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_unique(model=ref('campaign_info_all'), column_name='campaign_noun') }}", "refs": [["campaign_info_all"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.campaign_info_all"], "macros": []}, "unique_id": "test.ds_dbt.unique_campaign_info_all_campaign_noun", "empty": false, "fqn": ["ds_dbt", "schema_test", "unique_campaign_info_all_campaign_noun"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "unique_campaign_info_all_campaign_noun", "column_name": "campaign_noun", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        campaign_noun\n\n    from \"quasar_prod_warehouse\".\"public\".\"campaign_info_all\"\n    where campaign_noun is not null\n    group by campaign_noun\n    having count(*) > 1\n\n) validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        campaign_noun\n\n    from \"quasar_prod_warehouse\".\"public\".\"campaign_info_all\"\n    where campaign_noun is not null\n    group by campaign_noun\n    having count(*) > 1\n\n) validation_errors\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        campaign_noun\n\n    from \"quasar_prod_warehouse\".\"public\".\"campaign_info_all\"\n    where campaign_noun is not null\n    group by campaign_noun\n    having count(*) > 1\n\n) validation_errors\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/unique_campaign_info_all_campaign_noun.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.007753133773803711, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:35.525862Z", "completed_at": "2019-11-19T20:10:35.530500Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:35.530658Z", "completed_at": "2019-11-19T20:10:35.531821Z"}]}, {"node": {"name": "unique_campaign_info_all_campaign_run_id", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/unique_campaign_info_all_campaign_run_id.sql", "original_file_path": "models/campaign_info/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_unique(model=ref('campaign_info_all'), column_name='campaign_run_id') }}", "refs": [["campaign_info_all"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.campaign_info_all"], "macros": []}, "unique_id": "test.ds_dbt.unique_campaign_info_all_campaign_run_id", "empty": false, "fqn": ["ds_dbt", "schema_test", "unique_campaign_info_all_campaign_run_id"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "unique_campaign_info_all_campaign_run_id", "column_name": "campaign_run_id", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        campaign_run_id\n\n    from \"quasar_prod_warehouse\".\"public\".\"campaign_info_all\"\n    where campaign_run_id is not null\n    group by campaign_run_id\n    having count(*) > 1\n\n) validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        campaign_run_id\n\n    from \"quasar_prod_warehouse\".\"public\".\"campaign_info_all\"\n    where campaign_run_id is not null\n    group by campaign_run_id\n    having count(*) > 1\n\n) validation_errors\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        campaign_run_id\n\n    from \"quasar_prod_warehouse\".\"public\".\"campaign_info_all\"\n    where campaign_run_id is not null\n    group by campaign_run_id\n    having count(*) > 1\n\n) validation_errors\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/unique_campaign_info_all_campaign_run_id.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.014372825622558594, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:35.536757Z", "completed_at": "2019-11-19T20:10:35.546867Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:35.547052Z", "completed_at": "2019-11-19T20:10:35.548373Z"}]}, {"node": {"name": "unique_campaign_info_all_campaign_run_start_date", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/unique_campaign_info_all_campaign_run_start_date.sql", "original_file_path": "models/campaign_info/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_unique(model=ref('campaign_info_all'), column_name='campaign_run_start_date') }}", "refs": [["campaign_info_all"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.campaign_info_all"], "macros": []}, "unique_id": "test.ds_dbt.unique_campaign_info_all_campaign_run_start_date", "empty": false, "fqn": ["ds_dbt", "schema_test", "unique_campaign_info_all_campaign_run_start_date"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "unique_campaign_info_all_campaign_run_start_date", "column_name": "campaign_run_start_date", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        campaign_run_start_date\n\n    from \"quasar_prod_warehouse\".\"public\".\"campaign_info_all\"\n    where campaign_run_start_date is not null\n    group by campaign_run_start_date\n    having count(*) > 1\n\n) validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        campaign_run_start_date\n\n    from \"quasar_prod_warehouse\".\"public\".\"campaign_info_all\"\n    where campaign_run_start_date is not null\n    group by campaign_run_start_date\n    having count(*) > 1\n\n) validation_errors\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        campaign_run_start_date\n\n    from \"quasar_prod_warehouse\".\"public\".\"campaign_info_all\"\n    where campaign_run_start_date is not null\n    group by campaign_run_start_date\n    having count(*) > 1\n\n) validation_errors\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/unique_campaign_info_all_campaign_run_start_date.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.008966922760009766, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:35.550428Z", "completed_at": "2019-11-19T20:10:35.556873Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:35.557027Z", "completed_at": "2019-11-19T20:10:35.558866Z"}]}, {"node": {"name": "not_null_snowplow_base_event_browser_size", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_snowplow_base_event_browser_size.sql", "original_file_path": "models/phoenix_events/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('snowplow_base_event'), column_name='browser_size') }}", "refs": [["snowplow_base_event"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.snowplow_base_event"], "macros": []}, "unique_id": "test.ds_dbt.not_null_snowplow_base_event_browser_size", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_snowplow_base_event_browser_size"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_snowplow_base_event_browser_size", "column_name": "browser_size", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_base_event\"\nwhere browser_size is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_base_event\"\nwhere browser_size is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_base_event\"\nwhere browser_size is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_snowplow_base_event_browser_size.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.010659217834472656, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:35.563411Z", "completed_at": "2019-11-19T20:10:35.569930Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:35.570102Z", "completed_at": "2019-11-19T20:10:35.571391Z"}]}, {"node": {"name": "not_null_snowplow_base_event_device_id", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_snowplow_base_event_device_id.sql", "original_file_path": "models/phoenix_events/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('snowplow_base_event'), column_name='device_id') }}", "refs": [["snowplow_base_event"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.snowplow_base_event"], "macros": []}, "unique_id": "test.ds_dbt.not_null_snowplow_base_event_device_id", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_snowplow_base_event_device_id"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_snowplow_base_event_device_id", "column_name": "device_id", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_base_event\"\nwhere device_id is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_base_event\"\nwhere device_id is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_base_event\"\nwhere device_id is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_snowplow_base_event_device_id.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.00767207145690918, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:35.574555Z", "completed_at": "2019-11-19T20:10:35.579305Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:35.579434Z", "completed_at": "2019-11-19T20:10:35.580528Z"}]}, {"node": {"name": "not_null_snowplow_base_event_event_datetime", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_snowplow_base_event_event_datetime.sql", "original_file_path": "models/phoenix_events/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('snowplow_base_event'), column_name='event_datetime') }}", "refs": [["snowplow_base_event"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.snowplow_base_event"], "macros": []}, "unique_id": "test.ds_dbt.not_null_snowplow_base_event_event_datetime", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_snowplow_base_event_event_datetime"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_snowplow_base_event_event_datetime", "column_name": "event_datetime", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_base_event\"\nwhere event_datetime is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_base_event\"\nwhere event_datetime is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_base_event\"\nwhere event_datetime is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_snowplow_base_event_event_datetime.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.015409231185913086, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:35.585602Z", "completed_at": "2019-11-19T20:10:35.596397Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:35.596609Z", "completed_at": "2019-11-19T20:10:35.597938Z"}]}, {"node": {"name": "not_null_snowplow_base_event_event_id", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_snowplow_base_event_event_id.sql", "original_file_path": "models/phoenix_events/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('snowplow_base_event'), column_name='event_id') }}", "refs": [["snowplow_base_event"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.snowplow_base_event"], "macros": []}, "unique_id": "test.ds_dbt.not_null_snowplow_base_event_event_id", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_snowplow_base_event_event_id"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_snowplow_base_event_event_id", "column_name": "event_id", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_base_event\"\nwhere event_id is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_base_event\"\nwhere event_id is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_base_event\"\nwhere event_id is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_snowplow_base_event_event_id.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.01011800765991211, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:35.601416Z", "completed_at": "2019-11-19T20:10:35.606908Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:35.607255Z", "completed_at": "2019-11-19T20:10:35.609586Z"}]}, {"node": {"name": "not_null_snowplow_base_event_event_source", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_snowplow_base_event_event_source.sql", "original_file_path": "models/phoenix_events/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('snowplow_base_event'), column_name='event_source') }}", "refs": [["snowplow_base_event"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.snowplow_base_event"], "macros": []}, "unique_id": "test.ds_dbt.not_null_snowplow_base_event_event_source", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_snowplow_base_event_event_source"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_snowplow_base_event_event_source", "column_name": "event_source", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_base_event\"\nwhere event_source is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_base_event\"\nwhere event_source is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_base_event\"\nwhere event_source is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_snowplow_base_event_event_source.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.012378215789794922, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:35.612947Z", "completed_at": "2019-11-19T20:10:35.621528Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:35.621777Z", "completed_at": "2019-11-19T20:10:35.623467Z"}]}, {"node": {"name": "not_null_snowplow_base_event_event_type", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_snowplow_base_event_event_type.sql", "original_file_path": "models/phoenix_events/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('snowplow_base_event'), column_name='event_type') }}", "refs": [["snowplow_base_event"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.snowplow_base_event"], "macros": []}, "unique_id": "test.ds_dbt.not_null_snowplow_base_event_event_type", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_snowplow_base_event_event_type"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_snowplow_base_event_event_type", "column_name": "event_type", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_base_event\"\nwhere event_type is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_base_event\"\nwhere event_type is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_base_event\"\nwhere event_type is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_snowplow_base_event_event_type.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.011913299560546875, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:35.628500Z", "completed_at": "2019-11-19T20:10:35.635644Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:35.635844Z", "completed_at": "2019-11-19T20:10:35.637165Z"}]}, {"node": {"name": "not_null_snowplow_base_event_host", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_snowplow_base_event_host.sql", "original_file_path": "models/phoenix_events/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('snowplow_base_event'), column_name='host') }}", "refs": [["snowplow_base_event"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.snowplow_base_event"], "macros": []}, "unique_id": "test.ds_dbt.not_null_snowplow_base_event_host", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_snowplow_base_event_host"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_snowplow_base_event_host", "column_name": "host", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_base_event\"\nwhere host is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_base_event\"\nwhere host is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_base_event\"\nwhere host is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_snowplow_base_event_host.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.01192617416381836, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:35.641170Z", "completed_at": "2019-11-19T20:10:35.648617Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:35.648899Z", "completed_at": "2019-11-19T20:10:35.650717Z"}]}, {"node": {"name": "not_null_snowplow_base_event_path", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_snowplow_base_event_path.sql", "original_file_path": "models/phoenix_events/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('snowplow_base_event'), column_name='path') }}", "refs": [["snowplow_base_event"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.snowplow_base_event"], "macros": []}, "unique_id": "test.ds_dbt.not_null_snowplow_base_event_path", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_snowplow_base_event_path"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_snowplow_base_event_path", "column_name": "path", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_base_event\"\nwhere path is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_base_event\"\nwhere path is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_base_event\"\nwhere path is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_snowplow_base_event_path.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.013176918029785156, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:35.655145Z", "completed_at": "2019-11-19T20:10:35.663944Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:35.664155Z", "completed_at": "2019-11-19T20:10:35.665663Z"}]}, {"node": {"name": "not_null_snowplow_base_event_referrer_host", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_snowplow_base_event_referrer_host.sql", "original_file_path": "models/phoenix_events/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('snowplow_base_event'), column_name='referrer_host') }}", "refs": [["snowplow_base_event"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.snowplow_base_event"], "macros": []}, "unique_id": "test.ds_dbt.not_null_snowplow_base_event_referrer_host", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_snowplow_base_event_referrer_host"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_snowplow_base_event_referrer_host", "column_name": "referrer_host", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_base_event\"\nwhere referrer_host is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_base_event\"\nwhere referrer_host is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_base_event\"\nwhere referrer_host is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_snowplow_base_event_referrer_host.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.009259939193725586, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:35.669674Z", "completed_at": "2019-11-19T20:10:35.675314Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:35.675498Z", "completed_at": "2019-11-19T20:10:35.676718Z"}]}, {"node": {"name": "not_null_snowplow_base_event_referrer_path", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_snowplow_base_event_referrer_path.sql", "original_file_path": "models/phoenix_events/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('snowplow_base_event'), column_name='referrer_path') }}", "refs": [["snowplow_base_event"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.snowplow_base_event"], "macros": []}, "unique_id": "test.ds_dbt.not_null_snowplow_base_event_referrer_path", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_snowplow_base_event_referrer_path"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_snowplow_base_event_referrer_path", "column_name": "referrer_path", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_base_event\"\nwhere referrer_path is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_base_event\"\nwhere referrer_path is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_base_event\"\nwhere referrer_path is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_snowplow_base_event_referrer_path.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.011121988296508789, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:35.681165Z", "completed_at": "2019-11-19T20:10:35.687780Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:35.687993Z", "completed_at": "2019-11-19T20:10:35.689304Z"}]}, {"node": {"name": "not_null_snowplow_base_event_session_counter", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_snowplow_base_event_session_counter.sql", "original_file_path": "models/phoenix_events/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('snowplow_base_event'), column_name='session_counter') }}", "refs": [["snowplow_base_event"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.snowplow_base_event"], "macros": []}, "unique_id": "test.ds_dbt.not_null_snowplow_base_event_session_counter", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_snowplow_base_event_session_counter"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_snowplow_base_event_session_counter", "column_name": "session_counter", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_base_event\"\nwhere session_counter is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_base_event\"\nwhere session_counter is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_base_event\"\nwhere session_counter is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_snowplow_base_event_session_counter.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.009557962417602539, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:35.693223Z", "completed_at": "2019-11-19T20:10:35.699135Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:35.699395Z", "completed_at": "2019-11-19T20:10:35.700652Z"}]}, {"node": {"name": "not_null_snowplow_base_event_session_id", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_snowplow_base_event_session_id.sql", "original_file_path": "models/phoenix_events/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('snowplow_base_event'), column_name='session_id') }}", "refs": [["snowplow_base_event"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.snowplow_base_event"], "macros": []}, "unique_id": "test.ds_dbt.not_null_snowplow_base_event_session_id", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_snowplow_base_event_session_id"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_snowplow_base_event_session_id", "column_name": "session_id", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_base_event\"\nwhere session_id is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_base_event\"\nwhere session_id is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_base_event\"\nwhere session_id is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_snowplow_base_event_session_id.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.011217117309570312, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:35.704154Z", "completed_at": "2019-11-19T20:10:35.711618Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:35.711887Z", "completed_at": "2019-11-19T20:10:35.713526Z"}]}, {"node": {"name": "unique_snowplow_base_event_event_id", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/unique_snowplow_base_event_event_id.sql", "original_file_path": "models/phoenix_events/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_unique(model=ref('snowplow_base_event'), column_name='event_id') }}", "refs": [["snowplow_base_event"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.snowplow_base_event"], "macros": []}, "unique_id": "test.ds_dbt.unique_snowplow_base_event_event_id", "empty": false, "fqn": ["ds_dbt", "schema_test", "unique_snowplow_base_event_event_id"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "unique_snowplow_base_event_event_id", "column_name": "event_id", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        event_id\n\n    from \"quasar_prod_warehouse\".\"public\".\"snowplow_base_event\"\n    where event_id is not null\n    group by event_id\n    having count(*) > 1\n\n) validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        event_id\n\n    from \"quasar_prod_warehouse\".\"public\".\"snowplow_base_event\"\n    where event_id is not null\n    group by event_id\n    having count(*) > 1\n\n) validation_errors\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        event_id\n\n    from \"quasar_prod_warehouse\".\"public\".\"snowplow_base_event\"\n    where event_id is not null\n    group by event_id\n    having count(*) > 1\n\n) validation_errors\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/unique_snowplow_base_event_event_id.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.013700008392333984, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:35.717501Z", "completed_at": "2019-11-19T20:10:35.726928Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:35.727163Z", "completed_at": "2019-11-19T20:10:35.728844Z"}]}, {"node": {"name": "unique_snowplow_base_event_event_source", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/unique_snowplow_base_event_event_source.sql", "original_file_path": "models/phoenix_events/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_unique(model=ref('snowplow_base_event'), column_name='event_source') }}", "refs": [["snowplow_base_event"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.snowplow_base_event"], "macros": []}, "unique_id": "test.ds_dbt.unique_snowplow_base_event_event_source", "empty": false, "fqn": ["ds_dbt", "schema_test", "unique_snowplow_base_event_event_source"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "unique_snowplow_base_event_event_source", "column_name": "event_source", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        event_source\n\n    from \"quasar_prod_warehouse\".\"public\".\"snowplow_base_event\"\n    where event_source is not null\n    group by event_source\n    having count(*) > 1\n\n) validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        event_source\n\n    from \"quasar_prod_warehouse\".\"public\".\"snowplow_base_event\"\n    where event_source is not null\n    group by event_source\n    having count(*) > 1\n\n) validation_errors\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        event_source\n\n    from \"quasar_prod_warehouse\".\"public\".\"snowplow_base_event\"\n    where event_source is not null\n    group by event_source\n    having count(*) > 1\n\n) validation_errors\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/unique_snowplow_base_event_event_source.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.010564804077148438, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:35.732903Z", "completed_at": "2019-11-19T20:10:35.739004Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:35.739224Z", "completed_at": "2019-11-19T20:10:35.741038Z"}]}, {"node": {"name": "snowplow_raw_events", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "resource_type": "model", "path": "phoenix_events/snowplow_raw_events.sql", "original_file_path": "models/phoenix_events/snowplow_raw_events.sql", "package_name": "ds_dbt", "raw_sql": "SELECT\n\tb.event_id,\n\tb.event_source,\n\tb.event_datetime,\n\tb.event_name,\n\tb.event_type,\n\tb.\"host\",\n\tb.\"path\",\n    b.query_parameters,\n\tb.se_category,\n\tb.se_action,\n\tb.se_label,\n\tb.session_id,\n\tb.session_counter,\n\tb.browser_size,\n\tb.northstar_id,\n\tb.device_id,\n\tb.referrer_host,\n\tb.referrer_path,\n\tb.referrer_source,\n\tp.utm_source,\n\tp.utm_medium,\n\tp.utm_campaign,\n\tp.url AS clicked_link_url,\n\tp.campaign_id,\n\tp.modal_type,\n\tp.search_query\n  FROM {{ ref('snowplow_base_event') }} b\n  LEFT JOIN {{ ref('snowplow_payload_event') }} p \n  ON b.event_id = p.event_id", "refs": [["snowplow_base_event"], ["snowplow_payload_event"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.snowplow_base_event", "model.ds_dbt.snowplow_payload_event"], "macros": []}, "unique_id": "model.ds_dbt.snowplow_raw_events", "empty": false, "fqn": ["ds_dbt", "phoenix_events", "snowplow_raw_events"], "tags": [], "config": {"enabled": true, "materialized": "table", "pre-hook": [], "tags": [], "post-hook": [{"sql": "CREATE INDEX IF NOT EXISTS raw_event_id ON {{ this }}(event_id)", "transaction": true, "index": 0}, {"sql": "GRANT SELECT ON {{ this }} TO dsanalyst", "transaction": true, "index": 1}], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}, "alias": "snowplow_raw_events"}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "snowplow_raw_events", "columns": {"event_id": {"name": "event_id", "description": "This is a unique identifier for each event"}, "event_source": {"name": "event_source", "description": "Application source for event (eg. Phoenix, Northstar)"}, "event_datetime": {"name": "event_datetime", "description": "When the event occurred in UTC (eg. 2018-01-01 12:00:00)"}, "event_name": {"name": "event_name", "description": "Name of the event (eg. northstar_submitted_register, https://docs.google.com/spreadsheets/d/1lm-fGrIm85nUTxSojqyCt_Ehmm1zEbViFhKpxcJiz1A/edit#gid=406441516)"}, "event_type": {"name": "event_type", "description": "Type of event (pv = 'Page View', se = 'Structured Event')"}, "host": {"name": "host", "description": "URL host where event occurred (eg. www.dosomething.org or identity.dosomething.org)"}, "path": {"name": "path", "description": "URL path event occurred at (eg. /login or /us/campaigns/huddle-for-heroes)"}, "query_parameters": {"name": "query_parameters", "description": "Optional query parameters for the request (eg. query=huddle)"}, "se_category": {"name": "se_category", "description": "Category of event (eg. focused_field, authentication) - Custom structured event"}, "se_action": {"name": "se_action", "description": "Action performed / event name (eg. form_submitted, action_failed) - Custom structured event"}, "se_label": {"name": "se_label", "description": "The object of the action (eg. first_name, register, voter_reg_status) - Custom structured event"}, "session_id": {"name": "session_id", "description": "Unique identifier of the user's session"}, "session_counter": {"name": "session_counter", "description": "How many sessions a user has started"}, "browser_size": {"name": "browser_size", "description": "Which type of browser a user is using (eg. Mobile, Desktop)"}, "northstar_id": {"name": "northstar_id", "description": "The Northstar ID of the user who generated the event"}, "device_id": {"name": "device_id", "description": "ID of the device used"}, "referrer_host": {"name": "referrer_host", "description": "URL host of the referring site (eg. google.com)"}, "referrer_path": {"name": "referrer_path", "description": "URL path from referring site (eg. /10-stats-on-teen-drug-and-alcohol-use/)"}, "referrer_source": {"name": "referrer_source", "description": "Referrer source name (eg. Google, Facebook)"}, "utm_source": {"name": "utm_source", "description": "Tracks where the traffic is coming from. (eg. scholarship_listing, Facebook)"}, "utm_medium": {"name": "utm_medium", "description": "How the traffic got to the platform (eg. referral, CPC)"}, "utm_campaign": {"name": "utm_campaign", "description": "Tracks which campaign the traffic was generated by. Shows up in Google Analytics as Campaign Name (eg. editorial_newsletter)"}, "clicked_link_url": {"name": "clicked_link_url", "description": "URL of campaign (eg. https://dosome.click/nyn5m7)"}, "campaign_id": {"name": "campaign_id", "description": "Internal campaign id from contentful"}, "modal_type": {"name": "modal_type", "description": "NULL or SURVEY_MODAL"}}, "description": "Table combining snowplow_base_event and snowplow_paylod_event into rich raw data source for all clickstream info", "patch_path": "models/phoenix_events/schema.yml", "docrefs": [{"documentation_package": "", "documentation_name": "event_id", "column_name": "event_id"}, {"documentation_package": "", "documentation_name": "event_source", "column_name": "event_source"}, {"documentation_package": "", "documentation_name": "event_datetime", "column_name": "event_datetime"}, {"documentation_package": "", "documentation_name": "event_name", "column_name": "event_name"}, {"documentation_package": "", "documentation_name": "event_type", "column_name": "event_type"}, {"documentation_package": "", "documentation_name": "host", "column_name": "host"}, {"documentation_package": "", "documentation_name": "path", "column_name": "path"}, {"documentation_package": "", "documentation_name": "query_parameters", "column_name": "query_parameters"}, {"documentation_package": "", "documentation_name": "se_category", "column_name": "se_category"}, {"documentation_package": "", "documentation_name": "se_action", "column_name": "se_action"}, {"documentation_package": "", "documentation_name": "se_label", "column_name": "se_label"}, {"documentation_package": "", "documentation_name": "session_id", "column_name": "session_id"}, {"documentation_package": "", "documentation_name": "session_counter", "column_name": "session_counter"}, {"documentation_package": "", "documentation_name": "browser_size", "column_name": "browser_size"}, {"documentation_package": "", "documentation_name": "northstar_id", "column_name": "northstar_id"}, {"documentation_package": "", "documentation_name": "device_id", "column_name": "device_id"}, {"documentation_package": "", "documentation_name": "referrer_host", "column_name": "referrer_host"}, {"documentation_package": "", "documentation_name": "referrer_path", "column_name": "referrer_path"}, {"documentation_package": "", "documentation_name": "referrer_source", "column_name": "referrer_source"}, {"documentation_package": "", "documentation_name": "utm_source", "column_name": "utm_source"}, {"documentation_package": "", "documentation_name": "utm_medium", "column_name": "utm_medium"}, {"documentation_package": "", "documentation_name": "utm_campaign", "column_name": "utm_campaign"}, {"documentation_package": "", "documentation_name": "url", "column_name": "clicked_link_url"}, {"documentation_package": "", "documentation_name": "modal_type", "column_name": "modal_type"}], "compiled": true, "compiled_sql": "SELECT\n\tb.event_id,\n\tb.event_source,\n\tb.event_datetime,\n\tb.event_name,\n\tb.event_type,\n\tb.\"host\",\n\tb.\"path\",\n    b.query_parameters,\n\tb.se_category,\n\tb.se_action,\n\tb.se_label,\n\tb.session_id,\n\tb.session_counter,\n\tb.browser_size,\n\tb.northstar_id,\n\tb.device_id,\n\tb.referrer_host,\n\tb.referrer_path,\n\tb.referrer_source,\n\tp.utm_source,\n\tp.utm_medium,\n\tp.utm_campaign,\n\tp.url AS clicked_link_url,\n\tp.campaign_id,\n\tp.modal_type,\n\tp.search_query\n  FROM \"quasar_prod_warehouse\".\"public\".\"snowplow_base_event\" b\n  LEFT JOIN \"quasar_prod_warehouse\".\"public\".\"snowplow_payload_event\" p \n  ON b.event_id = p.event_id", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "SELECT\n\tb.event_id,\n\tb.event_source,\n\tb.event_datetime,\n\tb.event_name,\n\tb.event_type,\n\tb.\"host\",\n\tb.\"path\",\n    b.query_parameters,\n\tb.se_category,\n\tb.se_action,\n\tb.se_label,\n\tb.session_id,\n\tb.session_counter,\n\tb.browser_size,\n\tb.northstar_id,\n\tb.device_id,\n\tb.referrer_host,\n\tb.referrer_path,\n\tb.referrer_source,\n\tp.utm_source,\n\tp.utm_medium,\n\tp.utm_campaign,\n\tp.url AS clicked_link_url,\n\tp.campaign_id,\n\tp.modal_type,\n\tp.search_query\n  FROM \"quasar_prod_warehouse\".\"public\".\"snowplow_base_event\" b\n  LEFT JOIN \"quasar_prod_warehouse\".\"public\".\"snowplow_payload_event\" p \n  ON b.event_id = p.event_id", "wrapped_sql": "None", "build_path": "../../docs/compiled/ds_dbt/phoenix_events/snowplow_raw_events.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.017481327056884766, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:35.745311Z", "completed_at": "2019-11-19T20:10:35.756069Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:35.756260Z", "completed_at": "2019-11-19T20:10:35.760155Z"}]}, {"node": {"name": "not_null_snowplow_payload_event_event_id", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_snowplow_payload_event_event_id.sql", "original_file_path": "models/phoenix_events/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('snowplow_payload_event'), column_name='event_id') }}", "refs": [["snowplow_payload_event"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.snowplow_payload_event"], "macros": []}, "unique_id": "test.ds_dbt.not_null_snowplow_payload_event_event_id", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_snowplow_payload_event_event_id"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_snowplow_payload_event_event_id", "column_name": "event_id", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_payload_event\"\nwhere event_id is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_payload_event\"\nwhere event_id is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_payload_event\"\nwhere event_id is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_snowplow_payload_event_event_id.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.012416839599609375, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:35.767167Z", "completed_at": "2019-11-19T20:10:35.773706Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:35.773921Z", "completed_at": "2019-11-19T20:10:35.775692Z"}]}, {"node": {"name": "not_null_snowplow_payload_event_ft_timestamp", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_snowplow_payload_event_ft_timestamp.sql", "original_file_path": "models/phoenix_events/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('snowplow_payload_event'), column_name='ft_timestamp') }}", "refs": [["snowplow_payload_event"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.snowplow_payload_event"], "macros": []}, "unique_id": "test.ds_dbt.not_null_snowplow_payload_event_ft_timestamp", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_snowplow_payload_event_ft_timestamp"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_snowplow_payload_event_ft_timestamp", "column_name": "ft_timestamp", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_payload_event\"\nwhere ft_timestamp is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_payload_event\"\nwhere ft_timestamp is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_payload_event\"\nwhere ft_timestamp is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_snowplow_payload_event_ft_timestamp.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.008290767669677734, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:35.778810Z", "completed_at": "2019-11-19T20:10:35.783535Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:35.783681Z", "completed_at": "2019-11-19T20:10:35.785279Z"}]}, {"node": {"name": "unique_snowplow_payload_event_event_id", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/unique_snowplow_payload_event_event_id.sql", "original_file_path": "models/phoenix_events/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_unique(model=ref('snowplow_payload_event'), column_name='event_id') }}", "refs": [["snowplow_payload_event"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.snowplow_payload_event"], "macros": []}, "unique_id": "test.ds_dbt.unique_snowplow_payload_event_event_id", "empty": false, "fqn": ["ds_dbt", "schema_test", "unique_snowplow_payload_event_event_id"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "unique_snowplow_payload_event_event_id", "column_name": "event_id", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        event_id\n\n    from \"quasar_prod_warehouse\".\"public\".\"snowplow_payload_event\"\n    where event_id is not null\n    group by event_id\n    having count(*) > 1\n\n) validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        event_id\n\n    from \"quasar_prod_warehouse\".\"public\".\"snowplow_payload_event\"\n    where event_id is not null\n    group by event_id\n    having count(*) > 1\n\n) validation_errors\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        event_id\n\n    from \"quasar_prod_warehouse\".\"public\".\"snowplow_payload_event\"\n    where event_id is not null\n    group by event_id\n    having count(*) > 1\n\n) validation_errors\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/unique_snowplow_payload_event_event_id.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.014056205749511719, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:35.789199Z", "completed_at": "2019-11-19T20:10:35.799077Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:35.799242Z", "completed_at": "2019-11-19T20:10:35.800750Z"}]}, {"node": {"name": "gambit_messages_inbound", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "resource_type": "model", "path": "gambit_messages/gambit_messages_inbound.sql", "original_file_path": "models/gambit_messages/gambit_messages_inbound.sql", "package_name": "ds_dbt", "raw_sql": "SELECT\n  *\n  FROM\n    {{ ref('messages_flattened') }} f\n  WHERE\n    f.direction = 'inbound'\n    AND f.user_id IS NOT NULL\n  UNION ALL\n    (SELECT\n      g.agent_id,\n      g.attachment_url,\n      g.attachment_content_type,\n      g.broadcast_id,\n      g.campaign_id,\n      g.conversation_id,\n      g.created_at,\n      g.direction,\n      g.message_id,\n      g.macro,\n      g.\"match\",\n      g.carrier_delivered_at,\n      g.carrier_failure_code,\n      g.total_segments,\n      g.platform_message_id,\n      g.template,\n      g.text,\n      g.topic,\n      u.northstar_id AS user_id\n    FROM\n      {{ ref('messages_flattened') }} g\n    LEFT JOIN\n      {{ env_var('FT_GAMBIT') }}.conversations c\n    ON g.conversation_id = c._id\n    LEFT JOIN\n      public.users u\n      ON substring(c.platform_user_id, 3, 10) = u.mobile\n      AND u.mobile IS NOT NULL\n      AND u.mobile <> ''\n    WHERE\n      g.direction = 'inbound'\n      AND g.user_id IS NULL)", "refs": [["messages_flattened"], ["messages_flattened"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.messages_flattened", "model.ds_dbt.messages_flattened"], "macros": []}, "unique_id": "model.ds_dbt.gambit_messages_inbound", "empty": false, "fqn": ["ds_dbt", "gambit_messages", "gambit_messages_inbound"], "tags": [], "config": {"enabled": true, "materialized": "table", "pre-hook": [], "tags": [], "post-hook": [{"sql": "CREATE INDEX IF NOT EXISTS messages_in_index ON {{ this }}(message_id, created_at, user_id, conversation_id)", "transaction": true, "index": 0}, {"sql": "GRANT SELECT ON {{ this }} TO dsanalyst", "transaction": true, "index": 1}, {"sql": "GRANT SELECT ON {{ this }} TO looker", "transaction": true, "index": 2}], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}, "alias": "gambit_messages_inbound"}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "gambit_messages_inbound", "columns": {"agent_id": {"name": "agent_id", "description": "If set, the content type of the picture the member is sending us. Exp. image/png."}, "attachment_content_type": {"name": "attachment_content_type", "description": "If set, the handle of the Front agent this outbound support message is from."}, "attachment_url": {"name": "attachment_url", "description": "If set, link to the picture sent by the member."}, "broadcast_id": {"name": "broadcast_id", "description": "If set, this message was an outbound broadcast (when direction == 'outbound-api-send'), or the User's reply to an outbound broadcast (when direction == 'inbound')"}, "campaign_id": {"name": "campaign_id", "description": "If set, holds a reference to the **last** campaign topic the member's conversation was in. This is useful to allow members to talk to Gambit and get quick responses (through Rivescript), without Gambit completely forgetting what state the member's interaction with a campaign topic was in. 'This is a unique identifier for the campaign'"}, "conversation_id": {"name": "conversation_id", "description": "Conversation the Message belongs to."}, "created_at": {"name": "created_at", "description": "Message's created date."}, "direction": {"name": "direction", "description": "Describes if the message is being received (inbound) or being sent (outbound-*)."}, "message_id": {"name": "message_id", "description": "Unique identifier for a Message (MongoDB id)."}, "macro": {"name": "macro", "description": "If set, this message is part of this macro's workflow. Example: subscription status updates, voting plan submission, aswering a multichoice broadcast, etc."}, "match": {"name": "match", "description": "Rivescript trigger matched by inbound text."}, "carrier_delivered_at": {"name": "carrier_delivered_at", "description": "Date when we received a delivery confirmation from the carrier."}, "carrier_failure_code": {"name": "carrier_failure_code", "description": "Error code reported by the carrier (Only for outbound messages)."}, "total_segments": {"name": "total_segments", "description": "Number of chunks the message is broken into by the SMS API."}, "platform_message_id": {"name": "platform_message_id", "description": "The Message identifier per platform."}, "template": {"name": "template", "description": "If set, template of outbound message sent (e.g. askQuantity, completedMenu)."}, "text": {"name": "text", "description": "Body of the message."}, "topic": {"name": "topic", "description": "Holds a reference to the **last** campaign topic the member's conversation was in. This is useful to allow members to talk to Gambit and get quick responses (through Rivescript), without Gambit completely forgetting what state the member's interaction with a campaign topic was in."}, "user_id": {"name": "user_id", "description": "The Northstar id of the member."}}, "description": "Inbound messages.", "patch_path": "models/gambit_messages/schema.yml", "docrefs": [{"documentation_package": "", "documentation_name": "agent_id", "column_name": "agent_id"}, {"documentation_package": "", "documentation_name": "attachment_content_type", "column_name": "attachment_content_type"}, {"documentation_package": "", "documentation_name": "campaign_id", "column_name": "campaign_id"}, {"documentation_package": "", "documentation_name": "topic", "column_name": "topic"}], "compiled": true, "compiled_sql": "SELECT\n  *\n  FROM\n    \"quasar_prod_warehouse\".\"public\".\"messages_flattened\" f\n  WHERE\n    f.direction = 'inbound'\n    AND f.user_id IS NOT NULL\n  UNION ALL\n    (SELECT\n      g.agent_id,\n      g.attachment_url,\n      g.attachment_content_type,\n      g.broadcast_id,\n      g.campaign_id,\n      g.conversation_id,\n      g.created_at,\n      g.direction,\n      g.message_id,\n      g.macro,\n      g.\"match\",\n      g.carrier_delivered_at,\n      g.carrier_failure_code,\n      g.total_segments,\n      g.platform_message_id,\n      g.template,\n      g.text,\n      g.topic,\n      u.northstar_id AS user_id\n    FROM\n      \"quasar_prod_warehouse\".\"public\".\"messages_flattened\" g\n    LEFT JOIN\n      ft_gambit_conversations_api.conversations c\n    ON g.conversation_id = c._id\n    LEFT JOIN\n      public.users u\n      ON substring(c.platform_user_id, 3, 10) = u.mobile\n      AND u.mobile IS NOT NULL\n      AND u.mobile <> ''\n    WHERE\n      g.direction = 'inbound'\n      AND g.user_id IS NULL)", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "SELECT\n  *\n  FROM\n    \"quasar_prod_warehouse\".\"public\".\"messages_flattened\" f\n  WHERE\n    f.direction = 'inbound'\n    AND f.user_id IS NOT NULL\n  UNION ALL\n    (SELECT\n      g.agent_id,\n      g.attachment_url,\n      g.attachment_content_type,\n      g.broadcast_id,\n      g.campaign_id,\n      g.conversation_id,\n      g.created_at,\n      g.direction,\n      g.message_id,\n      g.macro,\n      g.\"match\",\n      g.carrier_delivered_at,\n      g.carrier_failure_code,\n      g.total_segments,\n      g.platform_message_id,\n      g.template,\n      g.text,\n      g.topic,\n      u.northstar_id AS user_id\n    FROM\n      \"quasar_prod_warehouse\".\"public\".\"messages_flattened\" g\n    LEFT JOIN\n      ft_gambit_conversations_api.conversations c\n    ON g.conversation_id = c._id\n    LEFT JOIN\n      public.users u\n      ON substring(c.platform_user_id, 3, 10) = u.mobile\n      AND u.mobile IS NOT NULL\n      AND u.mobile <> ''\n    WHERE\n      g.direction = 'inbound'\n      AND g.user_id IS NULL)", "wrapped_sql": "None", "build_path": "../../docs/compiled/ds_dbt/gambit_messages/gambit_messages_inbound.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.01110696792602539, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:35.803943Z", "completed_at": "2019-11-19T20:10:35.810983Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:35.811197Z", "completed_at": "2019-11-19T20:10:35.813254Z"}]}, {"node": {"name": "gambit_messages_outbound", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "resource_type": "model", "path": "gambit_messages/gambit_messages_outbound.sql", "original_file_path": "models/gambit_messages/gambit_messages_outbound.sql", "package_name": "ds_dbt", "raw_sql": "SELECT\n    f.campaign_id,\n    f.conversation_id,\n    f.broadcast_id,\n    f.created_at,\n    f.direction,\n    f.message_id,\n    f.macro,\n    f.\"match\",\n    f.carrier_delivered_at,\n    f.carrier_failure_code,\n    f.platform_message_id,\n    f.template,\n    f.text,\n    f.topic,\n    f.user_id\n  FROM\n    {{ ref('messages_flattened') }} f\n  WHERE\n    f.direction <> 'inbound'\n    AND f.user_id IS NOT NULL\n  UNION ALL\n    (SELECT\n      g.campaign_id,\n      g.conversation_id,\n      g.broadcast_id,\n      g.created_at,\n      g.direction,\n      g.message_id,\n      g.macro,\n      g.\"match\",\n      g.carrier_delivered_at,\n      g.carrier_failure_code,\n      g.platform_message_id,\n      g.template,\n      g.text,\n      g.topic,\n      u.northstar_id AS user_id\n      FROM\n        {{ ref('messages_flattened') }} g\n      LEFT JOIN\n        {{ env_var('FT_GAMBIT') }}.conversations c\n      ON g.conversation_id = c._id\n      LEFT JOIN\n        public.users u\n      ON substring(c.platform_user_id, 3, 10) = u.mobile\n        AND u.mobile IS NOT NULL\n        AND u.mobile <> ''\n      WHERE\n        g.direction <> 'inbound'\n        AND g.user_id IS NULL)", "refs": [["messages_flattened"], ["messages_flattened"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.messages_flattened", "model.ds_dbt.messages_flattened"], "macros": []}, "unique_id": "model.ds_dbt.gambit_messages_outbound", "empty": false, "fqn": ["ds_dbt", "gambit_messages", "gambit_messages_outbound"], "tags": [], "config": {"enabled": true, "materialized": "table", "pre-hook": [], "tags": [], "post-hook": [{"sql": "CREATE INDEX IF NOT EXISTS messages_out_index ON {{ this }}(message_id, created_at, user_id, conversation_id)", "transaction": true, "index": 0}, {"sql": "CREATE INDEX IF NOT EXISTS deliverability ON {{ this }}(created_at, carrier_failure_code)", "transaction": true, "index": 1}, {"sql": "GRANT SELECT ON {{ this }} TO dsanalyst", "transaction": true, "index": 2}, {"sql": "GRANT SELECT ON {{ this }} TO looker", "transaction": true, "index": 3}], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}, "alias": "gambit_messages_outbound"}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "gambit_messages_outbound", "columns": {"agent_id": {"name": "agent_id", "description": "If set, the content type of the picture the member is sending us. Exp. image/png."}, "attachment_content_type": {"name": "attachment_content_type", "description": "If set, the handle of the Front agent this outbound support message is from."}, "attachment_url": {"name": "attachment_url", "description": "If set, link to the picture sent by the member."}, "broadcast_id": {"name": "broadcast_id", "description": "If set, this message was an outbound broadcast (when direction == 'outbound-api-send'), or the User's reply to an outbound broadcast (when direction == 'inbound')"}, "campaign_id": {"name": "campaign_id", "description": "If set, holds a reference to the **last** campaign topic the member's conversation was in. This is useful to allow members to talk to Gambit and get quick responses (through Rivescript), without Gambit completely forgetting what state the member's interaction with a campaign topic was in. 'This is a unique identifier for the campaign'"}, "conversation_id": {"name": "conversation_id", "description": "Conversation the Message belongs to."}, "created_at": {"name": "created_at", "description": "Message's created date."}, "direction": {"name": "direction", "description": "Describes if the message is being received (inbound) or being sent (outbound-*)."}, "message_id": {"name": "message_id", "description": "Unique identifier for a Message (MongoDB id)."}, "macro": {"name": "macro", "description": "If set, this message is part of this macro's workflow. Example: subscription status updates, voting plan submission, aswering a multichoice broadcast, etc."}, "match": {"name": "match", "description": "Rivescript trigger matched by inbound text."}, "carrier_delivered_at": {"name": "carrier_delivered_at", "description": "Date when we received a delivery confirmation from the carrier."}, "carrier_failure_code": {"name": "carrier_failure_code", "description": "Error code reported by the carrier (Only for outbound messages)."}, "total_segments": {"name": "total_segments", "description": "Number of chunks the message is broken into by the SMS API."}, "platform_message_id": {"name": "platform_message_id", "description": "The Message identifier per platform."}, "template": {"name": "template", "description": "If set, template of outbound message sent (e.g. askQuantity, completedMenu)."}, "text": {"name": "text", "description": "Body of the message."}, "topic": {"name": "topic", "description": "Holds a reference to the **last** campaign topic the member's conversation was in. This is useful to allow members to talk to Gambit and get quick responses (through Rivescript), without Gambit completely forgetting what state the member's interaction with a campaign topic was in."}, "user_id": {"name": "user_id", "description": "The Northstar id of the member."}}, "description": "Outbound messages.", "patch_path": "models/gambit_messages/schema.yml", "docrefs": [{"documentation_package": "", "documentation_name": "agent_id", "column_name": "agent_id"}, {"documentation_package": "", "documentation_name": "attachment_content_type", "column_name": "attachment_content_type"}, {"documentation_package": "", "documentation_name": "campaign_id", "column_name": "campaign_id"}, {"documentation_package": "", "documentation_name": "topic", "column_name": "topic"}], "compiled": true, "compiled_sql": "SELECT\n    f.campaign_id,\n    f.conversation_id,\n    f.broadcast_id,\n    f.created_at,\n    f.direction,\n    f.message_id,\n    f.macro,\n    f.\"match\",\n    f.carrier_delivered_at,\n    f.carrier_failure_code,\n    f.platform_message_id,\n    f.template,\n    f.text,\n    f.topic,\n    f.user_id\n  FROM\n    \"quasar_prod_warehouse\".\"public\".\"messages_flattened\" f\n  WHERE\n    f.direction <> 'inbound'\n    AND f.user_id IS NOT NULL\n  UNION ALL\n    (SELECT\n      g.campaign_id,\n      g.conversation_id,\n      g.broadcast_id,\n      g.created_at,\n      g.direction,\n      g.message_id,\n      g.macro,\n      g.\"match\",\n      g.carrier_delivered_at,\n      g.carrier_failure_code,\n      g.platform_message_id,\n      g.template,\n      g.text,\n      g.topic,\n      u.northstar_id AS user_id\n      FROM\n        \"quasar_prod_warehouse\".\"public\".\"messages_flattened\" g\n      LEFT JOIN\n        ft_gambit_conversations_api.conversations c\n      ON g.conversation_id = c._id\n      LEFT JOIN\n        public.users u\n      ON substring(c.platform_user_id, 3, 10) = u.mobile\n        AND u.mobile IS NOT NULL\n        AND u.mobile <> ''\n      WHERE\n        g.direction <> 'inbound'\n        AND g.user_id IS NULL)", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "SELECT\n    f.campaign_id,\n    f.conversation_id,\n    f.broadcast_id,\n    f.created_at,\n    f.direction,\n    f.message_id,\n    f.macro,\n    f.\"match\",\n    f.carrier_delivered_at,\n    f.carrier_failure_code,\n    f.platform_message_id,\n    f.template,\n    f.text,\n    f.topic,\n    f.user_id\n  FROM\n    \"quasar_prod_warehouse\".\"public\".\"messages_flattened\" f\n  WHERE\n    f.direction <> 'inbound'\n    AND f.user_id IS NOT NULL\n  UNION ALL\n    (SELECT\n      g.campaign_id,\n      g.conversation_id,\n      g.broadcast_id,\n      g.created_at,\n      g.direction,\n      g.message_id,\n      g.macro,\n      g.\"match\",\n      g.carrier_delivered_at,\n      g.carrier_failure_code,\n      g.platform_message_id,\n      g.template,\n      g.text,\n      g.topic,\n      u.northstar_id AS user_id\n      FROM\n        \"quasar_prod_warehouse\".\"public\".\"messages_flattened\" g\n      LEFT JOIN\n        ft_gambit_conversations_api.conversations c\n      ON g.conversation_id = c._id\n      LEFT JOIN\n        public.users u\n      ON substring(c.platform_user_id, 3, 10) = u.mobile\n        AND u.mobile IS NOT NULL\n        AND u.mobile <> ''\n      WHERE\n        g.direction <> 'inbound'\n        AND g.user_id IS NULL)", "wrapped_sql": "None", "build_path": "../../docs/compiled/ds_dbt/gambit_messages/gambit_messages_outbound.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.015162944793701172, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:35.818595Z", "completed_at": "2019-11-19T20:10:35.828318Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:35.828474Z", "completed_at": "2019-11-19T20:10:35.830509Z"}]}, {"node": {"name": "posts", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "resource_type": "model", "path": "campaign_activity/posts.sql", "original_file_path": "models/campaign_activity/posts.sql", "package_name": "ds_dbt", "raw_sql": "SELECT\n\tpd.northstar_id as northstar_id,\n\tpd.id AS id,\n\tpd.\"type\" AS \"type\",\n\ta.\"name\" AS \"action\",\n\tpd.status AS status,\n\tpd.quantity AS quantity,\n\tpd.campaign_id,\n\tCASE\n\t\tWHEN pd.id IS NULL THEN NULL\n\t\tWHEN a.\"name\" = 'voter-reg OTG'\n\t\tTHEN pd.quantity\n\t\tELSE 1 END AS reportback_volume,\n\tpd.\"source\" AS \"source\",\n\tCASE\n\t\tWHEN pd.\"source\" IS NULL THEN NULL\n\t\tWHEN pd.\"source\" ilike '%%sms%%' THEN 'sms'\n\t\tELSE 'web' END AS source_bucket,\n\tCASE\n\t\tWHEN pd.\"type\" = 'phone-call'\n\t\tTHEN (pd.details::json ->> 'call_timestamp')::timestamptz\n\t\tELSE COALESCE(rtv.created_at, tv.created_at, pd.created_at)\n\t\tEND AS created_at,\n\tpd.url AS url,\n\tpd.text,\n\tCASE\n\t\tWHEN s.\"source\" = 'importer-client'\n\t\tAND pd.\"type\" = 'share-social'\n\t\tAND pd.created_at < s.created_at\n\t\tTHEN -1\n\t\tELSE pd.signup_id END AS signup_id,\n\tCASE\n\t\tWHEN pd.id IS NULL\n\t\tTHEN NULL\n\t\tELSE CONCAT(pd.\"type\", ' - ', a.\"name\") END AS post_class,\n\tCASE WHEN pd.status IN ('accepted', 'pending')\n\t\tAND a.\"name\" NOT ILIKE '%%vote%%'\n\t\tTHEN 1\n\t\tWHEN pd.status IN ('accepted', 'confirmed', 'register-OVR', 'register-form')\n\t\tAND a.\"name\" ILIKE '%%vote%%'\n\t\tTHEN 1\n\t\tELSE NULL END AS is_accepted,\n\tpd.action_id,\n\tpd.location,\n\tpd.postal_code,\n\ta.reportback AS is_reportback,\n\ta.civic_action,\n\ta.scholarship_entry\nFROM {{ env_var('FT_ROGUE') }}.posts pd\nINNER JOIN {{ ref('signups') }} s\n\tON pd.signup_id = s.id\nLEFT JOIN {{ ref('turbovote') }} tv\n\tON tv.post_id::bigint = pd.id::bigint\nLEFT JOIN\n\t(SELECT\n\t\tDISTINCT r.*,\n\t\tCASE\n\t\t\tWHEN r.started_registration < '2017-01-01'\n\t\t\tTHEN r.started_registration + interval '4 year'\n\t\t\tELSE r.started_registration END AS created_at\n\t\tFROM {{ ref('rock_the_vote') }} r\n\t) rtv\n\tON rtv.post_id::bigint = pd.id::bigint\nLEFT JOIN {{ env_var('FT_ROGUE') }}.actions a\n\tON pd.action_id = a.id\nWHERE pd.deleted_at IS NULL\nAND pd.\"text\" IS DISTINCT FROM 'test runscope upload'\nAND a.\"name\" IS NOT NULL", "refs": [["signups"], ["turbovote"], ["rock_the_vote"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.signups", "model.ds_dbt.turbovote", "model.ds_dbt.rock_the_vote"], "macros": []}, "unique_id": "model.ds_dbt.posts", "empty": false, "fqn": ["ds_dbt", "campaign_activity", "posts"], "tags": [], "config": {"enabled": true, "materialized": "table", "pre-hook": [], "tags": [], "post-hook": [{"sql": "CREATE UNIQUE INDEX IF NOT EXISTS posts_unique ON {{ this }}(created_at, campaign_id, id)", "transaction": true, "index": 0}, {"sql": "CREATE INDEX IF NOT EXISTS posts_i ON {{ this }}(is_reportback, is_accepted, signup_id, id, post_class)", "transaction": true, "index": 1}, {"sql": "GRANT SELECT ON {{ this }} TO dsanalyst", "transaction": true, "index": 2}, {"sql": "GRANT SELECT ON {{ this }} TO looker", "transaction": true, "index": 3}], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}, "alias": "posts"}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "posts", "columns": {}, "description": "", "compiled": true, "compiled_sql": "SELECT\n\tpd.northstar_id as northstar_id,\n\tpd.id AS id,\n\tpd.\"type\" AS \"type\",\n\ta.\"name\" AS \"action\",\n\tpd.status AS status,\n\tpd.quantity AS quantity,\n\tpd.campaign_id,\n\tCASE\n\t\tWHEN pd.id IS NULL THEN NULL\n\t\tWHEN a.\"name\" = 'voter-reg OTG'\n\t\tTHEN pd.quantity\n\t\tELSE 1 END AS reportback_volume,\n\tpd.\"source\" AS \"source\",\n\tCASE\n\t\tWHEN pd.\"source\" IS NULL THEN NULL\n\t\tWHEN pd.\"source\" ilike '%%sms%%' THEN 'sms'\n\t\tELSE 'web' END AS source_bucket,\n\tCASE\n\t\tWHEN pd.\"type\" = 'phone-call'\n\t\tTHEN (pd.details::json ->> 'call_timestamp')::timestamptz\n\t\tELSE COALESCE(rtv.created_at, tv.created_at, pd.created_at)\n\t\tEND AS created_at,\n\tpd.url AS url,\n\tpd.text,\n\tCASE\n\t\tWHEN s.\"source\" = 'importer-client'\n\t\tAND pd.\"type\" = 'share-social'\n\t\tAND pd.created_at < s.created_at\n\t\tTHEN -1\n\t\tELSE pd.signup_id END AS signup_id,\n\tCASE\n\t\tWHEN pd.id IS NULL\n\t\tTHEN NULL\n\t\tELSE CONCAT(pd.\"type\", ' - ', a.\"name\") END AS post_class,\n\tCASE WHEN pd.status IN ('accepted', 'pending')\n\t\tAND a.\"name\" NOT ILIKE '%%vote%%'\n\t\tTHEN 1\n\t\tWHEN pd.status IN ('accepted', 'confirmed', 'register-OVR', 'register-form')\n\t\tAND a.\"name\" ILIKE '%%vote%%'\n\t\tTHEN 1\n\t\tELSE NULL END AS is_accepted,\n\tpd.action_id,\n\tpd.location,\n\tpd.postal_code,\n\ta.reportback AS is_reportback,\n\ta.civic_action,\n\ta.scholarship_entry\nFROM ft_dosomething_rogue.posts pd\nINNER JOIN \"quasar_prod_warehouse\".\"public\".\"signups\" s\n\tON pd.signup_id = s.id\nLEFT JOIN \"quasar_prod_warehouse\".\"public\".\"turbovote\" tv\n\tON tv.post_id::bigint = pd.id::bigint\nLEFT JOIN\n\t(SELECT\n\t\tDISTINCT r.*,\n\t\tCASE\n\t\t\tWHEN r.started_registration < '2017-01-01'\n\t\t\tTHEN r.started_registration + interval '4 year'\n\t\t\tELSE r.started_registration END AS created_at\n\t\tFROM \"quasar_prod_warehouse\".\"public\".\"rock_the_vote\" r\n\t) rtv\n\tON rtv.post_id::bigint = pd.id::bigint\nLEFT JOIN ft_dosomething_rogue.actions a\n\tON pd.action_id = a.id\nWHERE pd.deleted_at IS NULL\nAND pd.\"text\" IS DISTINCT FROM 'test runscope upload'\nAND a.\"name\" IS NOT NULL", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "SELECT\n\tpd.northstar_id as northstar_id,\n\tpd.id AS id,\n\tpd.\"type\" AS \"type\",\n\ta.\"name\" AS \"action\",\n\tpd.status AS status,\n\tpd.quantity AS quantity,\n\tpd.campaign_id,\n\tCASE\n\t\tWHEN pd.id IS NULL THEN NULL\n\t\tWHEN a.\"name\" = 'voter-reg OTG'\n\t\tTHEN pd.quantity\n\t\tELSE 1 END AS reportback_volume,\n\tpd.\"source\" AS \"source\",\n\tCASE\n\t\tWHEN pd.\"source\" IS NULL THEN NULL\n\t\tWHEN pd.\"source\" ilike '%%sms%%' THEN 'sms'\n\t\tELSE 'web' END AS source_bucket,\n\tCASE\n\t\tWHEN pd.\"type\" = 'phone-call'\n\t\tTHEN (pd.details::json ->> 'call_timestamp')::timestamptz\n\t\tELSE COALESCE(rtv.created_at, tv.created_at, pd.created_at)\n\t\tEND AS created_at,\n\tpd.url AS url,\n\tpd.text,\n\tCASE\n\t\tWHEN s.\"source\" = 'importer-client'\n\t\tAND pd.\"type\" = 'share-social'\n\t\tAND pd.created_at < s.created_at\n\t\tTHEN -1\n\t\tELSE pd.signup_id END AS signup_id,\n\tCASE\n\t\tWHEN pd.id IS NULL\n\t\tTHEN NULL\n\t\tELSE CONCAT(pd.\"type\", ' - ', a.\"name\") END AS post_class,\n\tCASE WHEN pd.status IN ('accepted', 'pending')\n\t\tAND a.\"name\" NOT ILIKE '%%vote%%'\n\t\tTHEN 1\n\t\tWHEN pd.status IN ('accepted', 'confirmed', 'register-OVR', 'register-form')\n\t\tAND a.\"name\" ILIKE '%%vote%%'\n\t\tTHEN 1\n\t\tELSE NULL END AS is_accepted,\n\tpd.action_id,\n\tpd.location,\n\tpd.postal_code,\n\ta.reportback AS is_reportback,\n\ta.civic_action,\n\ta.scholarship_entry\nFROM ft_dosomething_rogue.posts pd\nINNER JOIN \"quasar_prod_warehouse\".\"public\".\"signups\" s\n\tON pd.signup_id = s.id\nLEFT JOIN \"quasar_prod_warehouse\".\"public\".\"turbovote\" tv\n\tON tv.post_id::bigint = pd.id::bigint\nLEFT JOIN\n\t(SELECT\n\t\tDISTINCT r.*,\n\t\tCASE\n\t\t\tWHEN r.started_registration < '2017-01-01'\n\t\t\tTHEN r.started_registration + interval '4 year'\n\t\t\tELSE r.started_registration END AS created_at\n\t\tFROM \"quasar_prod_warehouse\".\"public\".\"rock_the_vote\" r\n\t) rtv\n\tON rtv.post_id::bigint = pd.id::bigint\nLEFT JOIN ft_dosomething_rogue.actions a\n\tON pd.action_id = a.id\nWHERE pd.deleted_at IS NULL\nAND pd.\"text\" IS DISTINCT FROM 'test runscope upload'\nAND a.\"name\" IS NOT NULL", "wrapped_sql": "None", "build_path": "../../docs/compiled/ds_dbt/campaign_activity/posts.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.011226892471313477, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:35.835193Z", "completed_at": "2019-11-19T20:10:35.842011Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:35.842174Z", "completed_at": "2019-11-19T20:10:35.843699Z"}]}, {"node": {"name": "users", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "resource_type": "model", "path": "users_table/users.sql", "original_file_path": "models/users_table/users.sql", "package_name": "ds_dbt", "raw_sql": "SELECT \n\tu.id AS northstar_id,\n\tu.created_at,\n\tumax.max_last_auth AS last_logged_in,\n\tumax.max_last_access AS last_accessed,\n\tumax.max_last_message AS last_messaged_at,\n\tu.drupal_id AS drupal_uid,\n\tu.\"source\",\n\tu.email,\n\tu.facebook_id,\n\tu.mobile,\n\tCASE WHEN \n\t\tu.birthdate < '1900-01-01' OR \n\t\tu.birthdate > (date('now') - INTERVAL '10 years') \n\t\tTHEN NULL ELSE u.birthdate END AS birthdate,\n\tu.first_name,\n\tu.last_name,\n\tu.voter_registration_status,\n\tu.addr_street1 AS address_street_1,\n\tu.addr_street2 AS address_street_2,\n\tu.addr_city AS city,\n\tu.addr_state AS state,\n\tu.addr_zip AS zipcode,\n\tu.country,\n\tu.\"language\",\n\temail_status.event_type AS cio_status,\n\temail_status.\"timestamp\" AS cio_status_timestamp,\n\tu.sms_status,\n\tu.source_detail,\n\tsubstring(u.source_detail from '(?<=utm_medium\\:)(\\w*)') AS utm_medium,\n\tsubstring(u.source_detail from '(?<=utm_source\\:)(\\w*)') AS utm_source,\n\tsubstring(u.source_detail from '(?<=utm_campaign\\:)(\\w*)') AS utm_campaign,\n\t(u.feature_flags #>> '{badges}')::boolean as badges,\n\t(u.feature_flags #>> '{refer-friends}')::boolean as refer_friends,\n\tCASE WHEN \n\t\tu.sms_status in ('active','less','pending') OR \n\t\temail_status.event_type = 'customer_subscribed' \n\t\tTHEN TRUE ELSE FALSE END AS subscribed_member,\n\tumax.max_update AS last_updated_at\nFROM northstar.users u\nINNER JOIN \n\t(SELECT\n\t\tutemp.id,\n\t\tmax(utemp.updated_at) AS max_update,\n\t\tmax(utemp.last_accessed_at) AS max_last_access,\n\t\tmax(utemp.last_authenticated_at) AS max_last_auth,\n\t\tmax(utemp.last_messaged_at) AS max_last_message\n\tFROM northstar.users utemp\n\tGROUP BY utemp.id) umax ON umax.id = u.id AND umax.max_update = u.updated_at\nLEFT JOIN {{ ref('cio_latest_status') }} email_status ON email_status.customer_id = u.id\nWHERE u.\"source\" IS DISTINCT FROM 'runscope'\nAND u.\"source\" IS DISTINCT FROM 'runscope-client'\nAND u.email IS DISTINCT FROM 'runscope-scheduled-test@dosomething.org'\nAND u.email IS DISTINCT FROM 'juy+runscopescheduledtests@dosomething.org'\nAND (u.email NOT ILIKE '%%@example.org%%' OR u.email IS NULL)", "refs": [["cio_latest_status"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.cio_latest_status"], "macros": []}, "unique_id": "model.ds_dbt.users", "empty": false, "fqn": ["ds_dbt", "users_table", "users"], "tags": [], "config": {"enabled": true, "materialized": "table", "pre-hook": [], "tags": [], "post-hook": [{"sql": "CREATE UNIQUE INDEX IF NOT EXISTS du_indicies ON {{ this }}(northstar_id, created_at, email, mobile, source)", "transaction": true, "index": 0}, {"sql": "GRANT SELECT ON {{ this }} TO dsanalyst", "transaction": true, "index": 1}, {"sql": "GRANT SELECT ON {{ this }} TO looker", "transaction": true, "index": 2}, {"sql": "GRANT SELECT ON {{ this }} TO public", "transaction": true, "index": 3}], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}, "alias": "users"}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "users", "columns": {}, "description": "", "compiled": true, "compiled_sql": "SELECT \n\tu.id AS northstar_id,\n\tu.created_at,\n\tumax.max_last_auth AS last_logged_in,\n\tumax.max_last_access AS last_accessed,\n\tumax.max_last_message AS last_messaged_at,\n\tu.drupal_id AS drupal_uid,\n\tu.\"source\",\n\tu.email,\n\tu.facebook_id,\n\tu.mobile,\n\tCASE WHEN \n\t\tu.birthdate < '1900-01-01' OR \n\t\tu.birthdate > (date('now') - INTERVAL '10 years') \n\t\tTHEN NULL ELSE u.birthdate END AS birthdate,\n\tu.first_name,\n\tu.last_name,\n\tu.voter_registration_status,\n\tu.addr_street1 AS address_street_1,\n\tu.addr_street2 AS address_street_2,\n\tu.addr_city AS city,\n\tu.addr_state AS state,\n\tu.addr_zip AS zipcode,\n\tu.country,\n\tu.\"language\",\n\temail_status.event_type AS cio_status,\n\temail_status.\"timestamp\" AS cio_status_timestamp,\n\tu.sms_status,\n\tu.source_detail,\n\tsubstring(u.source_detail from '(?<=utm_medium\\:)(\\w*)') AS utm_medium,\n\tsubstring(u.source_detail from '(?<=utm_source\\:)(\\w*)') AS utm_source,\n\tsubstring(u.source_detail from '(?<=utm_campaign\\:)(\\w*)') AS utm_campaign,\n\t(u.feature_flags #>> '{badges}')::boolean as badges,\n\t(u.feature_flags #>> '{refer-friends}')::boolean as refer_friends,\n\tCASE WHEN \n\t\tu.sms_status in ('active','less','pending') OR \n\t\temail_status.event_type = 'customer_subscribed' \n\t\tTHEN TRUE ELSE FALSE END AS subscribed_member,\n\tumax.max_update AS last_updated_at\nFROM northstar.users u\nINNER JOIN \n\t(SELECT\n\t\tutemp.id,\n\t\tmax(utemp.updated_at) AS max_update,\n\t\tmax(utemp.last_accessed_at) AS max_last_access,\n\t\tmax(utemp.last_authenticated_at) AS max_last_auth,\n\t\tmax(utemp.last_messaged_at) AS max_last_message\n\tFROM northstar.users utemp\n\tGROUP BY utemp.id) umax ON umax.id = u.id AND umax.max_update = u.updated_at\nLEFT JOIN \"quasar_prod_warehouse\".\"public\".\"cio_latest_status\" email_status ON email_status.customer_id = u.id\nWHERE u.\"source\" IS DISTINCT FROM 'runscope'\nAND u.\"source\" IS DISTINCT FROM 'runscope-client'\nAND u.email IS DISTINCT FROM 'runscope-scheduled-test@dosomething.org'\nAND u.email IS DISTINCT FROM 'juy+runscopescheduledtests@dosomething.org'\nAND (u.email NOT ILIKE '%%@example.org%%' OR u.email IS NULL)", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "SELECT \n\tu.id AS northstar_id,\n\tu.created_at,\n\tumax.max_last_auth AS last_logged_in,\n\tumax.max_last_access AS last_accessed,\n\tumax.max_last_message AS last_messaged_at,\n\tu.drupal_id AS drupal_uid,\n\tu.\"source\",\n\tu.email,\n\tu.facebook_id,\n\tu.mobile,\n\tCASE WHEN \n\t\tu.birthdate < '1900-01-01' OR \n\t\tu.birthdate > (date('now') - INTERVAL '10 years') \n\t\tTHEN NULL ELSE u.birthdate END AS birthdate,\n\tu.first_name,\n\tu.last_name,\n\tu.voter_registration_status,\n\tu.addr_street1 AS address_street_1,\n\tu.addr_street2 AS address_street_2,\n\tu.addr_city AS city,\n\tu.addr_state AS state,\n\tu.addr_zip AS zipcode,\n\tu.country,\n\tu.\"language\",\n\temail_status.event_type AS cio_status,\n\temail_status.\"timestamp\" AS cio_status_timestamp,\n\tu.sms_status,\n\tu.source_detail,\n\tsubstring(u.source_detail from '(?<=utm_medium\\:)(\\w*)') AS utm_medium,\n\tsubstring(u.source_detail from '(?<=utm_source\\:)(\\w*)') AS utm_source,\n\tsubstring(u.source_detail from '(?<=utm_campaign\\:)(\\w*)') AS utm_campaign,\n\t(u.feature_flags #>> '{badges}')::boolean as badges,\n\t(u.feature_flags #>> '{refer-friends}')::boolean as refer_friends,\n\tCASE WHEN \n\t\tu.sms_status in ('active','less','pending') OR \n\t\temail_status.event_type = 'customer_subscribed' \n\t\tTHEN TRUE ELSE FALSE END AS subscribed_member,\n\tumax.max_update AS last_updated_at\nFROM northstar.users u\nINNER JOIN \n\t(SELECT\n\t\tutemp.id,\n\t\tmax(utemp.updated_at) AS max_update,\n\t\tmax(utemp.last_accessed_at) AS max_last_access,\n\t\tmax(utemp.last_authenticated_at) AS max_last_auth,\n\t\tmax(utemp.last_messaged_at) AS max_last_message\n\tFROM northstar.users utemp\n\tGROUP BY utemp.id) umax ON umax.id = u.id AND umax.max_update = u.updated_at\nLEFT JOIN \"quasar_prod_warehouse\".\"public\".\"cio_latest_status\" email_status ON email_status.customer_id = u.id\nWHERE u.\"source\" IS DISTINCT FROM 'runscope'\nAND u.\"source\" IS DISTINCT FROM 'runscope-client'\nAND u.email IS DISTINCT FROM 'runscope-scheduled-test@dosomething.org'\nAND u.email IS DISTINCT FROM 'juy+runscopescheduledtests@dosomething.org'\nAND (u.email NOT ILIKE '%%@example.org%%' OR u.email IS NULL)", "wrapped_sql": "None", "build_path": "../../docs/compiled/ds_dbt/users_table/users.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.009701013565063477, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:35.847770Z", "completed_at": "2019-11-19T20:10:35.853343Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:35.853501Z", "completed_at": "2019-11-19T20:10:35.855014Z"}]}, {"node": {"name": "user_newsletter_subscriptions", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "resource_type": "model", "path": "news_subscription/user_newsletter_subscriptions.sql", "original_file_path": "models/news_subscription/user_newsletter_subscriptions.sql", "package_name": "ds_dbt", "raw_sql": "SELECT DISTINCT\n\tf.northstar_id,\n\tf.newsletter_topic,\n\tf.topic_subscribed_at::timestamptz,\n\tCASE WHEN topic_unsubscribed_at IS NOT NULL\n\t    THEN topic_unsubscribed_at\n\t    WHEN newsletters_unsubscribed_at IS NOT NULL\n\t    THEN newsletters_unsubscribed_at\n\t    WHEN f.topic_updated_at = f.user_updated_at\n\t    THEN NULL\n\t    ELSE f.user_updated_at END AS topic_unsubscribed_at\nFROM (\n\tSELECT DISTINCT\n\t\ts.northstar_id AS northstar_id,\n\t\ts.newsletter_topic,\n\t\tfirst_value(s.newsletter_updated_at) OVER (PARTITION BY s.northstar_id, s.newsletter_topic ORDER BY s.newsletter_updated_at\n\t\t\t) AS topic_subscribed_at,\n\t\tlast_value(s.newsletter_updated_at) OVER (PARTITION BY s.northstar_id, s.newsletter_topic ORDER BY s.newsletter_updated_at\n\t\t\tROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS topic_updated_at,\t\n\t\tlast_value(s.newsletter_updated_at) OVER (PARTITION BY s.northstar_id ORDER BY s.newsletter_updated_at\n\t\t\tROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS user_updated_at,\n\t\tu.topic_unsubscribed_at,\n\t\tua.newsletters_unsubscribed_at\n\tFROM {{ ref('email_subscription_topics_raw') }} s\n\tLEFT JOIN (\n\t\tSELECT\n\t\t\t_id AS id,\n\t\t\tto_timestamp(audit #>> '{email_subscription_topics,updated_at,date}', 'YYYY-MM-DD HH24:MI:SS') AS topic_unsubscribed_at,\n\t\t\tNULL AS newsletter_topic\n\t\tFROM {{ env_var(\"NORTHSTAR_FT_SCHEMA\") }}.northstar_users_snapshot\n\t\tWHERE email_subscription_topics IS NULL AND audit #>> '{email_subscription_topics,updated_at,date}' IS NOT NULL\n\t) u ON u.id = s.northstar_id\n    LEFT JOIN (\n\t\tSELECT\n\t\t\tnorthstar_id,\n\t\t\temail_unsubscribed_at AS newsletters_unsubscribed_at,\n\t\t\tNULL AS newsletter_topic\n\t\tFROM public.user_activity\n\t) ua ON ua.northstar_id = s.northstar_id\n) f", "refs": [["email_subscription_topics_raw"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.email_subscription_topics_raw"], "macros": []}, "unique_id": "model.ds_dbt.user_newsletter_subscriptions", "empty": false, "fqn": ["ds_dbt", "news_subscription", "user_newsletter_subscriptions"], "tags": [], "config": {"enabled": true, "materialized": "table", "pre-hook": [], "tags": [], "post-hook": [{"sql": "CREATE INDEX IF NOT EXISTS email_subscription_topics_i ON {{ this }}(topic_subscribed_at, northstar_id)", "transaction": true, "index": 0}, {"sql": "GRANT SELECT ON {{ this }} TO dsanalyst", "transaction": true, "index": 1}, {"sql": "GRANT SELECT ON {{ this }} TO looker", "transaction": true, "index": 2}], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}, "alias": "user_newsletter_subscriptions"}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "user_newsletter_subscriptions", "columns": {}, "description": "", "compiled": true, "compiled_sql": "SELECT DISTINCT\n\tf.northstar_id,\n\tf.newsletter_topic,\n\tf.topic_subscribed_at::timestamptz,\n\tCASE WHEN topic_unsubscribed_at IS NOT NULL\n\t    THEN topic_unsubscribed_at\n\t    WHEN newsletters_unsubscribed_at IS NOT NULL\n\t    THEN newsletters_unsubscribed_at\n\t    WHEN f.topic_updated_at = f.user_updated_at\n\t    THEN NULL\n\t    ELSE f.user_updated_at END AS topic_unsubscribed_at\nFROM (\n\tSELECT DISTINCT\n\t\ts.northstar_id AS northstar_id,\n\t\ts.newsletter_topic,\n\t\tfirst_value(s.newsletter_updated_at) OVER (PARTITION BY s.northstar_id, s.newsletter_topic ORDER BY s.newsletter_updated_at\n\t\t\t) AS topic_subscribed_at,\n\t\tlast_value(s.newsletter_updated_at) OVER (PARTITION BY s.northstar_id, s.newsletter_topic ORDER BY s.newsletter_updated_at\n\t\t\tROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS topic_updated_at,\t\n\t\tlast_value(s.newsletter_updated_at) OVER (PARTITION BY s.northstar_id ORDER BY s.newsletter_updated_at\n\t\t\tROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS user_updated_at,\n\t\tu.topic_unsubscribed_at,\n\t\tua.newsletters_unsubscribed_at\n\tFROM \"quasar_prod_warehouse\".\"public\".\"email_subscription_topics_raw\" s\n\tLEFT JOIN (\n\t\tSELECT\n\t\t\t_id AS id,\n\t\t\tto_timestamp(audit #>> '{email_subscription_topics,updated_at,date}', 'YYYY-MM-DD HH24:MI:SS') AS topic_unsubscribed_at,\n\t\t\tNULL AS newsletter_topic\n\t\tFROM northstar_ft_userapi.northstar_users_snapshot\n\t\tWHERE email_subscription_topics IS NULL AND audit #>> '{email_subscription_topics,updated_at,date}' IS NOT NULL\n\t) u ON u.id = s.northstar_id\n    LEFT JOIN (\n\t\tSELECT\n\t\t\tnorthstar_id,\n\t\t\temail_unsubscribed_at AS newsletters_unsubscribed_at,\n\t\t\tNULL AS newsletter_topic\n\t\tFROM public.user_activity\n\t) ua ON ua.northstar_id = s.northstar_id\n) f", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "SELECT DISTINCT\n\tf.northstar_id,\n\tf.newsletter_topic,\n\tf.topic_subscribed_at::timestamptz,\n\tCASE WHEN topic_unsubscribed_at IS NOT NULL\n\t    THEN topic_unsubscribed_at\n\t    WHEN newsletters_unsubscribed_at IS NOT NULL\n\t    THEN newsletters_unsubscribed_at\n\t    WHEN f.topic_updated_at = f.user_updated_at\n\t    THEN NULL\n\t    ELSE f.user_updated_at END AS topic_unsubscribed_at\nFROM (\n\tSELECT DISTINCT\n\t\ts.northstar_id AS northstar_id,\n\t\ts.newsletter_topic,\n\t\tfirst_value(s.newsletter_updated_at) OVER (PARTITION BY s.northstar_id, s.newsletter_topic ORDER BY s.newsletter_updated_at\n\t\t\t) AS topic_subscribed_at,\n\t\tlast_value(s.newsletter_updated_at) OVER (PARTITION BY s.northstar_id, s.newsletter_topic ORDER BY s.newsletter_updated_at\n\t\t\tROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS topic_updated_at,\t\n\t\tlast_value(s.newsletter_updated_at) OVER (PARTITION BY s.northstar_id ORDER BY s.newsletter_updated_at\n\t\t\tROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS user_updated_at,\n\t\tu.topic_unsubscribed_at,\n\t\tua.newsletters_unsubscribed_at\n\tFROM \"quasar_prod_warehouse\".\"public\".\"email_subscription_topics_raw\" s\n\tLEFT JOIN (\n\t\tSELECT\n\t\t\t_id AS id,\n\t\t\tto_timestamp(audit #>> '{email_subscription_topics,updated_at,date}', 'YYYY-MM-DD HH24:MI:SS') AS topic_unsubscribed_at,\n\t\t\tNULL AS newsletter_topic\n\t\tFROM northstar_ft_userapi.northstar_users_snapshot\n\t\tWHERE email_subscription_topics IS NULL AND audit #>> '{email_subscription_topics,updated_at,date}' IS NOT NULL\n\t) u ON u.id = s.northstar_id\n    LEFT JOIN (\n\t\tSELECT\n\t\t\tnorthstar_id,\n\t\t\temail_unsubscribed_at AS newsletters_unsubscribed_at,\n\t\t\tNULL AS newsletter_topic\n\t\tFROM public.user_activity\n\t) ua ON ua.northstar_id = s.northstar_id\n) f", "wrapped_sql": "None", "build_path": "../../docs/compiled/ds_dbt/news_subscription/user_newsletter_subscriptions.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.015165090560913086, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:35.860695Z", "completed_at": "2019-11-19T20:10:35.869910Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:35.870131Z", "completed_at": "2019-11-19T20:10:35.871753Z"}]}, {"node": {"name": "not_null_campaign_info_campaign_action_type", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_campaign_info_campaign_action_type.sql", "original_file_path": "models/campaign_info/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('campaign_info'), column_name='campaign_action_type') }}", "refs": [["campaign_info"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.campaign_info"], "macros": []}, "unique_id": "test.ds_dbt.not_null_campaign_info_campaign_action_type", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_campaign_info_campaign_action_type"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_campaign_info_campaign_action_type", "column_name": "campaign_action_type", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info\"\nwhere campaign_action_type is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info\"\nwhere campaign_action_type is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info\"\nwhere campaign_action_type is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_campaign_info_campaign_action_type.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.010432004928588867, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:35.876458Z", "completed_at": "2019-11-19T20:10:35.882295Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:35.882596Z", "completed_at": "2019-11-19T20:10:35.884304Z"}]}, {"node": {"name": "not_null_campaign_info_campaign_cause", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_campaign_info_campaign_cause.sql", "original_file_path": "models/campaign_info/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('campaign_info'), column_name='campaign_cause') }}", "refs": [["campaign_info"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.campaign_info"], "macros": []}, "unique_id": "test.ds_dbt.not_null_campaign_info_campaign_cause", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_campaign_info_campaign_cause"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_campaign_info_campaign_cause", "column_name": "campaign_cause", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info\"\nwhere campaign_cause is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info\"\nwhere campaign_cause is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info\"\nwhere campaign_cause is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_campaign_info_campaign_cause.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.011322021484375, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:35.888487Z", "completed_at": "2019-11-19T20:10:35.895436Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:35.895620Z", "completed_at": "2019-11-19T20:10:35.896965Z"}]}, {"node": {"name": "not_null_campaign_info_campaign_cause_type", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_campaign_info_campaign_cause_type.sql", "original_file_path": "models/campaign_info/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('campaign_info'), column_name='campaign_cause_type') }}", "refs": [["campaign_info"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.campaign_info"], "macros": []}, "unique_id": "test.ds_dbt.not_null_campaign_info_campaign_cause_type", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_campaign_info_campaign_cause_type"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_campaign_info_campaign_cause_type", "column_name": "campaign_cause_type", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info\"\nwhere campaign_cause_type is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info\"\nwhere campaign_cause_type is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info\"\nwhere campaign_cause_type is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_campaign_info_campaign_cause_type.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.012836933135986328, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:35.902019Z", "completed_at": "2019-11-19T20:10:35.909735Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:35.909911Z", "completed_at": "2019-11-19T20:10:35.911224Z"}]}, {"node": {"name": "not_null_campaign_info_campaign_created_date", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_campaign_info_campaign_created_date.sql", "original_file_path": "models/campaign_info/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('campaign_info'), column_name='campaign_created_date') }}", "refs": [["campaign_info"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.campaign_info"], "macros": []}, "unique_id": "test.ds_dbt.not_null_campaign_info_campaign_created_date", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_campaign_info_campaign_created_date"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_campaign_info_campaign_created_date", "column_name": "campaign_created_date", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info\"\nwhere campaign_created_date is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info\"\nwhere campaign_created_date is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info\"\nwhere campaign_created_date is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_campaign_info_campaign_created_date.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.013342142105102539, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:35.915073Z", "completed_at": "2019-11-19T20:10:35.924319Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:35.924531Z", "completed_at": "2019-11-19T20:10:35.925972Z"}]}, {"node": {"name": "not_null_campaign_info_campaign_cta", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_campaign_info_campaign_cta.sql", "original_file_path": "models/campaign_info/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('campaign_info'), column_name='campaign_cta') }}", "refs": [["campaign_info"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.campaign_info"], "macros": []}, "unique_id": "test.ds_dbt.not_null_campaign_info_campaign_cta", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_campaign_info_campaign_cta"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_campaign_info_campaign_cta", "column_name": "campaign_cta", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info\"\nwhere campaign_cta is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info\"\nwhere campaign_cta is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info\"\nwhere campaign_cta is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_campaign_info_campaign_cta.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.012713909149169922, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:35.930526Z", "completed_at": "2019-11-19T20:10:35.938607Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:35.938788Z", "completed_at": "2019-11-19T20:10:35.940144Z"}]}, {"node": {"name": "not_null_campaign_info_campaign_id", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_campaign_info_campaign_id.sql", "original_file_path": "models/campaign_info/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('campaign_info'), column_name='campaign_id') }}", "refs": [["campaign_info"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.campaign_info"], "macros": []}, "unique_id": "test.ds_dbt.not_null_campaign_info_campaign_id", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_campaign_info_campaign_id"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_campaign_info_campaign_id", "column_name": "campaign_id", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info\"\nwhere campaign_id is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info\"\nwhere campaign_id is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info\"\nwhere campaign_id is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_campaign_info_campaign_id.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.014425992965698242, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:35.944901Z", "completed_at": "2019-11-19T20:10:35.954457Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:35.954658Z", "completed_at": "2019-11-19T20:10:35.955983Z"}]}, {"node": {"name": "not_null_campaign_info_campaign_node_id", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_campaign_info_campaign_node_id.sql", "original_file_path": "models/campaign_info/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('campaign_info'), column_name='campaign_node_id') }}", "refs": [["campaign_info"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.campaign_info"], "macros": []}, "unique_id": "test.ds_dbt.not_null_campaign_info_campaign_node_id", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_campaign_info_campaign_node_id"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_campaign_info_campaign_node_id", "column_name": "campaign_node_id", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info\"\nwhere campaign_node_id is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info\"\nwhere campaign_node_id is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info\"\nwhere campaign_node_id is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_campaign_info_campaign_node_id.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.009089946746826172, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:35.959456Z", "completed_at": "2019-11-19T20:10:35.964475Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:35.964653Z", "completed_at": "2019-11-19T20:10:35.966463Z"}]}, {"node": {"name": "not_null_campaign_info_campaign_node_id_title", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_campaign_info_campaign_node_id_title.sql", "original_file_path": "models/campaign_info/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('campaign_info'), column_name='campaign_node_id_title') }}", "refs": [["campaign_info"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.campaign_info"], "macros": []}, "unique_id": "test.ds_dbt.not_null_campaign_info_campaign_node_id_title", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_campaign_info_campaign_node_id_title"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_campaign_info_campaign_node_id_title", "column_name": "campaign_node_id_title", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info\"\nwhere campaign_node_id_title is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info\"\nwhere campaign_node_id_title is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info\"\nwhere campaign_node_id_title is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_campaign_info_campaign_node_id_title.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.011657953262329102, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:35.971188Z", "completed_at": "2019-11-19T20:10:35.978622Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:35.978781Z", "completed_at": "2019-11-19T20:10:35.980001Z"}]}, {"node": {"name": "not_null_campaign_info_campaign_noun", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_campaign_info_campaign_noun.sql", "original_file_path": "models/campaign_info/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('campaign_info'), column_name='campaign_noun') }}", "refs": [["campaign_info"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.campaign_info"], "macros": []}, "unique_id": "test.ds_dbt.not_null_campaign_info_campaign_noun", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_campaign_info_campaign_noun"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_campaign_info_campaign_noun", "column_name": "campaign_noun", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info\"\nwhere campaign_noun is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info\"\nwhere campaign_noun is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info\"\nwhere campaign_noun is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_campaign_info_campaign_noun.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.009276151657104492, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:35.981648Z", "completed_at": "2019-11-19T20:10:35.988563Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:35.988736Z", "completed_at": "2019-11-19T20:10:35.990417Z"}]}, {"node": {"name": "not_null_campaign_info_campaign_run_end_date", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_campaign_info_campaign_run_end_date.sql", "original_file_path": "models/campaign_info/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('campaign_info'), column_name='campaign_run_end_date') }}", "refs": [["campaign_info"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.campaign_info"], "macros": []}, "unique_id": "test.ds_dbt.not_null_campaign_info_campaign_run_end_date", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_campaign_info_campaign_run_end_date"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_campaign_info_campaign_run_end_date", "column_name": "campaign_run_end_date", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info\"\nwhere campaign_run_end_date is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info\"\nwhere campaign_run_end_date is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info\"\nwhere campaign_run_end_date is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_campaign_info_campaign_run_end_date.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.012095928192138672, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:35.995779Z", "completed_at": "2019-11-19T20:10:36.003592Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:36.003816Z", "completed_at": "2019-11-19T20:10:36.004919Z"}]}, {"node": {"name": "not_null_campaign_info_campaign_run_id", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_campaign_info_campaign_run_id.sql", "original_file_path": "models/campaign_info/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('campaign_info'), column_name='campaign_run_id') }}", "refs": [["campaign_info"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.campaign_info"], "macros": []}, "unique_id": "test.ds_dbt.not_null_campaign_info_campaign_run_id", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_campaign_info_campaign_run_id"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_campaign_info_campaign_run_id", "column_name": "campaign_run_id", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info\"\nwhere campaign_run_id is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info\"\nwhere campaign_run_id is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info\"\nwhere campaign_run_id is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_campaign_info_campaign_run_id.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.013670206069946289, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:36.006550Z", "completed_at": "2019-11-19T20:10:36.017752Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:36.018087Z", "completed_at": "2019-11-19T20:10:36.019712Z"}]}, {"node": {"name": "not_null_campaign_info_campaign_run_id_title", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_campaign_info_campaign_run_id_title.sql", "original_file_path": "models/campaign_info/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('campaign_info'), column_name='campaign_run_id_title') }}", "refs": [["campaign_info"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.campaign_info"], "macros": []}, "unique_id": "test.ds_dbt.not_null_campaign_info_campaign_run_id_title", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_campaign_info_campaign_run_id_title"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_campaign_info_campaign_run_id_title", "column_name": "campaign_run_id_title", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info\"\nwhere campaign_run_id_title is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info\"\nwhere campaign_run_id_title is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info\"\nwhere campaign_run_id_title is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_campaign_info_campaign_run_id_title.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.010154008865356445, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:36.024697Z", "completed_at": "2019-11-19T20:10:36.030035Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:36.030182Z", "completed_at": "2019-11-19T20:10:36.031363Z"}]}, {"node": {"name": "not_null_campaign_info_campaign_run_start_date", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_campaign_info_campaign_run_start_date.sql", "original_file_path": "models/campaign_info/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('campaign_info'), column_name='campaign_run_start_date') }}", "refs": [["campaign_info"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.campaign_info"], "macros": []}, "unique_id": "test.ds_dbt.not_null_campaign_info_campaign_run_start_date", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_campaign_info_campaign_run_start_date"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_campaign_info_campaign_run_start_date", "column_name": "campaign_run_start_date", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info\"\nwhere campaign_run_start_date is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info\"\nwhere campaign_run_start_date is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info\"\nwhere campaign_run_start_date is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_campaign_info_campaign_run_start_date.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.011374711990356445, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:36.034445Z", "completed_at": "2019-11-19T20:10:36.042026Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:36.042255Z", "completed_at": "2019-11-19T20:10:36.043978Z"}]}, {"node": {"name": "not_null_campaign_info_campaign_verb", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_campaign_info_campaign_verb.sql", "original_file_path": "models/campaign_info/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('campaign_info'), column_name='campaign_verb') }}", "refs": [["campaign_info"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.campaign_info"], "macros": []}, "unique_id": "test.ds_dbt.not_null_campaign_info_campaign_verb", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_campaign_info_campaign_verb"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_campaign_info_campaign_verb", "column_name": "campaign_verb", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info\"\nwhere campaign_verb is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info\"\nwhere campaign_verb is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info\"\nwhere campaign_verb is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_campaign_info_campaign_verb.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.013138055801391602, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:36.047950Z", "completed_at": "2019-11-19T20:10:36.057418Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:36.057606Z", "completed_at": "2019-11-19T20:10:36.059015Z"}]}, {"node": {"name": "unique_campaign_info_campaign_id", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/unique_campaign_info_campaign_id.sql", "original_file_path": "models/campaign_info/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_unique(model=ref('campaign_info'), column_name='campaign_id') }}", "refs": [["campaign_info"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.campaign_info"], "macros": []}, "unique_id": "test.ds_dbt.unique_campaign_info_campaign_id", "empty": false, "fqn": ["ds_dbt", "schema_test", "unique_campaign_info_campaign_id"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "unique_campaign_info_campaign_id", "column_name": "campaign_id", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        campaign_id\n\n    from \"quasar_prod_warehouse\".\"public\".\"campaign_info\"\n    where campaign_id is not null\n    group by campaign_id\n    having count(*) > 1\n\n) validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        campaign_id\n\n    from \"quasar_prod_warehouse\".\"public\".\"campaign_info\"\n    where campaign_id is not null\n    group by campaign_id\n    having count(*) > 1\n\n) validation_errors\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        campaign_id\n\n    from \"quasar_prod_warehouse\".\"public\".\"campaign_info\"\n    where campaign_id is not null\n    group by campaign_id\n    having count(*) > 1\n\n) validation_errors\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/unique_campaign_info_campaign_id.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.008774042129516602, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:36.062389Z", "completed_at": "2019-11-19T20:10:36.067659Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:36.067882Z", "completed_at": "2019-11-19T20:10:36.069322Z"}]}, {"node": {"name": "unique_campaign_info_campaign_node_id", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/unique_campaign_info_campaign_node_id.sql", "original_file_path": "models/campaign_info/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_unique(model=ref('campaign_info'), column_name='campaign_node_id') }}", "refs": [["campaign_info"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.campaign_info"], "macros": []}, "unique_id": "test.ds_dbt.unique_campaign_info_campaign_node_id", "empty": false, "fqn": ["ds_dbt", "schema_test", "unique_campaign_info_campaign_node_id"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "unique_campaign_info_campaign_node_id", "column_name": "campaign_node_id", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        campaign_node_id\n\n    from \"quasar_prod_warehouse\".\"public\".\"campaign_info\"\n    where campaign_node_id is not null\n    group by campaign_node_id\n    having count(*) > 1\n\n) validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        campaign_node_id\n\n    from \"quasar_prod_warehouse\".\"public\".\"campaign_info\"\n    where campaign_node_id is not null\n    group by campaign_node_id\n    having count(*) > 1\n\n) validation_errors\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        campaign_node_id\n\n    from \"quasar_prod_warehouse\".\"public\".\"campaign_info\"\n    where campaign_node_id is not null\n    group by campaign_node_id\n    having count(*) > 1\n\n) validation_errors\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/unique_campaign_info_campaign_node_id.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.010123014450073242, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:36.073205Z", "completed_at": "2019-11-19T20:10:36.079484Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:36.079644Z", "completed_at": "2019-11-19T20:10:36.080783Z"}]}, {"node": {"name": "unique_campaign_info_campaign_noun", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/unique_campaign_info_campaign_noun.sql", "original_file_path": "models/campaign_info/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_unique(model=ref('campaign_info'), column_name='campaign_noun') }}", "refs": [["campaign_info"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.campaign_info"], "macros": []}, "unique_id": "test.ds_dbt.unique_campaign_info_campaign_noun", "empty": false, "fqn": ["ds_dbt", "schema_test", "unique_campaign_info_campaign_noun"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "unique_campaign_info_campaign_noun", "column_name": "campaign_noun", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        campaign_noun\n\n    from \"quasar_prod_warehouse\".\"public\".\"campaign_info\"\n    where campaign_noun is not null\n    group by campaign_noun\n    having count(*) > 1\n\n) validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        campaign_noun\n\n    from \"quasar_prod_warehouse\".\"public\".\"campaign_info\"\n    where campaign_noun is not null\n    group by campaign_noun\n    having count(*) > 1\n\n) validation_errors\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        campaign_noun\n\n    from \"quasar_prod_warehouse\".\"public\".\"campaign_info\"\n    where campaign_noun is not null\n    group by campaign_noun\n    having count(*) > 1\n\n) validation_errors\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/unique_campaign_info_campaign_noun.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.008173942565917969, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:36.084279Z", "completed_at": "2019-11-19T20:10:36.089143Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:36.089305Z", "completed_at": "2019-11-19T20:10:36.090461Z"}]}, {"node": {"name": "unique_campaign_info_campaign_run_id", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/unique_campaign_info_campaign_run_id.sql", "original_file_path": "models/campaign_info/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_unique(model=ref('campaign_info'), column_name='campaign_run_id') }}", "refs": [["campaign_info"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.campaign_info"], "macros": []}, "unique_id": "test.ds_dbt.unique_campaign_info_campaign_run_id", "empty": false, "fqn": ["ds_dbt", "schema_test", "unique_campaign_info_campaign_run_id"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "unique_campaign_info_campaign_run_id", "column_name": "campaign_run_id", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        campaign_run_id\n\n    from \"quasar_prod_warehouse\".\"public\".\"campaign_info\"\n    where campaign_run_id is not null\n    group by campaign_run_id\n    having count(*) > 1\n\n) validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        campaign_run_id\n\n    from \"quasar_prod_warehouse\".\"public\".\"campaign_info\"\n    where campaign_run_id is not null\n    group by campaign_run_id\n    having count(*) > 1\n\n) validation_errors\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        campaign_run_id\n\n    from \"quasar_prod_warehouse\".\"public\".\"campaign_info\"\n    where campaign_run_id is not null\n    group by campaign_run_id\n    having count(*) > 1\n\n) validation_errors\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/unique_campaign_info_campaign_run_id.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.01397705078125, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:36.094933Z", "completed_at": "2019-11-19T20:10:36.104787Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:36.104947Z", "completed_at": "2019-11-19T20:10:36.106317Z"}]}, {"node": {"name": "unique_campaign_info_campaign_run_start_date", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/unique_campaign_info_campaign_run_start_date.sql", "original_file_path": "models/campaign_info/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_unique(model=ref('campaign_info'), column_name='campaign_run_start_date') }}", "refs": [["campaign_info"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.campaign_info"], "macros": []}, "unique_id": "test.ds_dbt.unique_campaign_info_campaign_run_start_date", "empty": false, "fqn": ["ds_dbt", "schema_test", "unique_campaign_info_campaign_run_start_date"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "unique_campaign_info_campaign_run_start_date", "column_name": "campaign_run_start_date", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        campaign_run_start_date\n\n    from \"quasar_prod_warehouse\".\"public\".\"campaign_info\"\n    where campaign_run_start_date is not null\n    group by campaign_run_start_date\n    having count(*) > 1\n\n) validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        campaign_run_start_date\n\n    from \"quasar_prod_warehouse\".\"public\".\"campaign_info\"\n    where campaign_run_start_date is not null\n    group by campaign_run_start_date\n    having count(*) > 1\n\n) validation_errors\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        campaign_run_start_date\n\n    from \"quasar_prod_warehouse\".\"public\".\"campaign_info\"\n    where campaign_run_start_date is not null\n    group by campaign_run_start_date\n    having count(*) > 1\n\n) validation_errors\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/unique_campaign_info_campaign_run_start_date.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.009261131286621094, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:36.110024Z", "completed_at": "2019-11-19T20:10:36.115074Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:36.115207Z", "completed_at": "2019-11-19T20:10:36.116974Z"}]}, {"node": {"name": "not_null_campaign_info_international_campaign_action_type", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_campaign_info_international_campaign_action_type.sql", "original_file_path": "models/campaign_info/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('campaign_info_international'), column_name='campaign_action_type') }}", "refs": [["campaign_info_international"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.campaign_info_international"], "macros": []}, "unique_id": "test.ds_dbt.not_null_campaign_info_international_campaign_action_type", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_campaign_info_international_campaign_action_type"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_campaign_info_international_campaign_action_type", "column_name": "campaign_action_type", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info_international\"\nwhere campaign_action_type is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info_international\"\nwhere campaign_action_type is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info_international\"\nwhere campaign_action_type is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_campaign_info_international_campaign_action_type.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.014001131057739258, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:36.122102Z", "completed_at": "2019-11-19T20:10:36.131469Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:36.131606Z", "completed_at": "2019-11-19T20:10:36.132867Z"}]}, {"node": {"name": "not_null_campaign_info_international_campaign_cause_type", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_campaign_info_international_campaign_cause_type.sql", "original_file_path": "models/campaign_info/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('campaign_info_international'), column_name='campaign_cause_type') }}", "refs": [["campaign_info_international"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.campaign_info_international"], "macros": []}, "unique_id": "test.ds_dbt.not_null_campaign_info_international_campaign_cause_type", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_campaign_info_international_campaign_cause_type"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_campaign_info_international_campaign_cause_type", "column_name": "campaign_cause_type", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info_international\"\nwhere campaign_cause_type is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info_international\"\nwhere campaign_cause_type is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info_international\"\nwhere campaign_cause_type is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_campaign_info_international_campaign_cause_type.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.009132146835327148, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:36.134753Z", "completed_at": "2019-11-19T20:10:36.142079Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:36.142222Z", "completed_at": "2019-11-19T20:10:36.143402Z"}]}, {"node": {"name": "not_null_campaign_info_international_campaign_created_date", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_campaign_info_international_campaign_created_date.sql", "original_file_path": "models/campaign_info/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('campaign_info_international'), column_name='campaign_created_date') }}", "refs": [["campaign_info_international"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.campaign_info_international"], "macros": []}, "unique_id": "test.ds_dbt.not_null_campaign_info_international_campaign_created_date", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_campaign_info_international_campaign_created_date"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_campaign_info_international_campaign_created_date", "column_name": "campaign_created_date", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info_international\"\nwhere campaign_created_date is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info_international\"\nwhere campaign_created_date is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info_international\"\nwhere campaign_created_date is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_campaign_info_international_campaign_created_date.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.010358095169067383, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:36.147072Z", "completed_at": "2019-11-19T20:10:36.152774Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:36.153007Z", "completed_at": "2019-11-19T20:10:36.154972Z"}]}, {"node": {"name": "not_null_campaign_info_international_campaign_cta", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_campaign_info_international_campaign_cta.sql", "original_file_path": "models/campaign_info/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('campaign_info_international'), column_name='campaign_cta') }}", "refs": [["campaign_info_international"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.campaign_info_international"], "macros": []}, "unique_id": "test.ds_dbt.not_null_campaign_info_international_campaign_cta", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_campaign_info_international_campaign_cta"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_campaign_info_international_campaign_cta", "column_name": "campaign_cta", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info_international\"\nwhere campaign_cta is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info_international\"\nwhere campaign_cta is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info_international\"\nwhere campaign_cta is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_campaign_info_international_campaign_cta.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.009263753890991211, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:36.159620Z", "completed_at": "2019-11-19T20:10:36.164876Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:36.165014Z", "completed_at": "2019-11-19T20:10:36.166103Z"}]}, {"node": {"name": "not_null_campaign_info_international_campaign_id", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_campaign_info_international_campaign_id.sql", "original_file_path": "models/campaign_info/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('campaign_info_international'), column_name='campaign_id') }}", "refs": [["campaign_info_international"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.campaign_info_international"], "macros": []}, "unique_id": "test.ds_dbt.not_null_campaign_info_international_campaign_id", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_campaign_info_international_campaign_id"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_campaign_info_international_campaign_id", "column_name": "campaign_id", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info_international\"\nwhere campaign_id is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info_international\"\nwhere campaign_id is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info_international\"\nwhere campaign_id is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_campaign_info_international_campaign_id.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.00770115852355957, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:36.168822Z", "completed_at": "2019-11-19T20:10:36.173664Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:36.173816Z", "completed_at": "2019-11-19T20:10:36.174951Z"}]}, {"node": {"name": "not_null_campaign_info_international_campaign_node_id", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_campaign_info_international_campaign_node_id.sql", "original_file_path": "models/campaign_info/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('campaign_info_international'), column_name='campaign_node_id') }}", "refs": [["campaign_info_international"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.campaign_info_international"], "macros": []}, "unique_id": "test.ds_dbt.not_null_campaign_info_international_campaign_node_id", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_campaign_info_international_campaign_node_id"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_campaign_info_international_campaign_node_id", "column_name": "campaign_node_id", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info_international\"\nwhere campaign_node_id is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info_international\"\nwhere campaign_node_id is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info_international\"\nwhere campaign_node_id is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_campaign_info_international_campaign_node_id.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.010925054550170898, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:36.179446Z", "completed_at": "2019-11-19T20:10:36.186217Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:36.186367Z", "completed_at": "2019-11-19T20:10:36.187450Z"}]}, {"node": {"name": "not_null_campaign_info_international_campaign_node_id_title", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_campaign_info_international_campaign_node_id_title.sql", "original_file_path": "models/campaign_info/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('campaign_info_international'), column_name='campaign_node_id_title') }}", "refs": [["campaign_info_international"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.campaign_info_international"], "macros": []}, "unique_id": "test.ds_dbt.not_null_campaign_info_international_campaign_node_id_title", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_campaign_info_international_campaign_node_id_title"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_campaign_info_international_campaign_node_id_title", "column_name": "campaign_node_id_title", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info_international\"\nwhere campaign_node_id_title is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info_international\"\nwhere campaign_node_id_title is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info_international\"\nwhere campaign_node_id_title is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_campaign_info_international_campaign_node_id_title.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.00762176513671875, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:36.189183Z", "completed_at": "2019-11-19T20:10:36.195070Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:36.195200Z", "completed_at": "2019-11-19T20:10:36.196277Z"}]}, {"node": {"name": "not_null_campaign_info_international_campaign_noun", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_campaign_info_international_campaign_noun.sql", "original_file_path": "models/campaign_info/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('campaign_info_international'), column_name='campaign_noun') }}", "refs": [["campaign_info_international"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.campaign_info_international"], "macros": []}, "unique_id": "test.ds_dbt.not_null_campaign_info_international_campaign_noun", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_campaign_info_international_campaign_noun"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_campaign_info_international_campaign_noun", "column_name": "campaign_noun", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info_international\"\nwhere campaign_noun is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info_international\"\nwhere campaign_noun is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info_international\"\nwhere campaign_noun is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_campaign_info_international_campaign_noun.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.010751008987426758, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:36.200230Z", "completed_at": "2019-11-19T20:10:36.207156Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:36.207312Z", "completed_at": "2019-11-19T20:10:36.208417Z"}]}, {"node": {"name": "not_null_campaign_info_international_campaign_run_end_date", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_campaign_info_international_campaign_run_end_date.sql", "original_file_path": "models/campaign_info/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('campaign_info_international'), column_name='campaign_run_end_date') }}", "refs": [["campaign_info_international"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.campaign_info_international"], "macros": []}, "unique_id": "test.ds_dbt.not_null_campaign_info_international_campaign_run_end_date", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_campaign_info_international_campaign_run_end_date"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_campaign_info_international_campaign_run_end_date", "column_name": "campaign_run_end_date", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info_international\"\nwhere campaign_run_end_date is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info_international\"\nwhere campaign_run_end_date is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info_international\"\nwhere campaign_run_end_date is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_campaign_info_international_campaign_run_end_date.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.007353067398071289, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:36.211117Z", "completed_at": "2019-11-19T20:10:36.215622Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:36.215784Z", "completed_at": "2019-11-19T20:10:36.216920Z"}]}, {"node": {"name": "not_null_campaign_info_international_campaign_run_id", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_campaign_info_international_campaign_run_id.sql", "original_file_path": "models/campaign_info/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('campaign_info_international'), column_name='campaign_run_id') }}", "refs": [["campaign_info_international"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.campaign_info_international"], "macros": []}, "unique_id": "test.ds_dbt.not_null_campaign_info_international_campaign_run_id", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_campaign_info_international_campaign_run_id"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_campaign_info_international_campaign_run_id", "column_name": "campaign_run_id", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info_international\"\nwhere campaign_run_id is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info_international\"\nwhere campaign_run_id is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info_international\"\nwhere campaign_run_id is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_campaign_info_international_campaign_run_id.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.011946916580200195, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:36.220803Z", "completed_at": "2019-11-19T20:10:36.228899Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:36.229086Z", "completed_at": "2019-11-19T20:10:36.230175Z"}]}, {"node": {"name": "not_null_campaign_info_international_campaign_run_id_title", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_campaign_info_international_campaign_run_id_title.sql", "original_file_path": "models/campaign_info/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('campaign_info_international'), column_name='campaign_run_id_title') }}", "refs": [["campaign_info_international"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.campaign_info_international"], "macros": []}, "unique_id": "test.ds_dbt.not_null_campaign_info_international_campaign_run_id_title", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_campaign_info_international_campaign_run_id_title"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_campaign_info_international_campaign_run_id_title", "column_name": "campaign_run_id_title", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info_international\"\nwhere campaign_run_id_title is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info_international\"\nwhere campaign_run_id_title is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info_international\"\nwhere campaign_run_id_title is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_campaign_info_international_campaign_run_id_title.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.007824897766113281, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:36.231803Z", "completed_at": "2019-11-19T20:10:36.237644Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:36.237792Z", "completed_at": "2019-11-19T20:10:36.239154Z"}]}, {"node": {"name": "not_null_campaign_info_international_campaign_run_start_date", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_campaign_info_international_campaign_run_start_date.sql", "original_file_path": "models/campaign_info/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('campaign_info_international'), column_name='campaign_run_start_date') }}", "refs": [["campaign_info_international"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.campaign_info_international"], "macros": []}, "unique_id": "test.ds_dbt.not_null_campaign_info_international_campaign_run_start_date", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_campaign_info_international_campaign_run_start_date"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_campaign_info_international_campaign_run_start_date", "column_name": "campaign_run_start_date", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info_international\"\nwhere campaign_run_start_date is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info_international\"\nwhere campaign_run_start_date is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info_international\"\nwhere campaign_run_start_date is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_campaign_info_international_campaign_run_start_date.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.010323047637939453, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:36.243417Z", "completed_at": "2019-11-19T20:10:36.249957Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:36.250092Z", "completed_at": "2019-11-19T20:10:36.251291Z"}]}, {"node": {"name": "not_null_campaign_info_international_campaign_type", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_campaign_info_international_campaign_type.sql", "original_file_path": "models/campaign_info/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('campaign_info_international'), column_name='campaign_type') }}", "refs": [["campaign_info_international"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.campaign_info_international"], "macros": []}, "unique_id": "test.ds_dbt.not_null_campaign_info_international_campaign_type", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_campaign_info_international_campaign_type"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_campaign_info_international_campaign_type", "column_name": "campaign_type", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info_international\"\nwhere campaign_type is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info_international\"\nwhere campaign_type is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info_international\"\nwhere campaign_type is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_campaign_info_international_campaign_type.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.00815892219543457, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:36.254021Z", "completed_at": "2019-11-19T20:10:36.259040Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:36.259179Z", "completed_at": "2019-11-19T20:10:36.260613Z"}]}, {"node": {"name": "not_null_campaign_info_international_campaign_verb", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_campaign_info_international_campaign_verb.sql", "original_file_path": "models/campaign_info/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('campaign_info_international'), column_name='campaign_verb') }}", "refs": [["campaign_info_international"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.campaign_info_international"], "macros": []}, "unique_id": "test.ds_dbt.not_null_campaign_info_international_campaign_verb", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_campaign_info_international_campaign_verb"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_campaign_info_international_campaign_verb", "column_name": "campaign_verb", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info_international\"\nwhere campaign_verb is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info_international\"\nwhere campaign_verb is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"campaign_info_international\"\nwhere campaign_verb is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_campaign_info_international_campaign_verb.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.010003089904785156, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:36.265378Z", "completed_at": "2019-11-19T20:10:36.271658Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:36.271791Z", "completed_at": "2019-11-19T20:10:36.272872Z"}]}, {"node": {"name": "unique_campaign_info_international_campaign_id", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/unique_campaign_info_international_campaign_id.sql", "original_file_path": "models/campaign_info/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_unique(model=ref('campaign_info_international'), column_name='campaign_id') }}", "refs": [["campaign_info_international"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.campaign_info_international"], "macros": []}, "unique_id": "test.ds_dbt.unique_campaign_info_international_campaign_id", "empty": false, "fqn": ["ds_dbt", "schema_test", "unique_campaign_info_international_campaign_id"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "unique_campaign_info_international_campaign_id", "column_name": "campaign_id", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        campaign_id\n\n    from \"quasar_prod_warehouse\".\"public\".\"campaign_info_international\"\n    where campaign_id is not null\n    group by campaign_id\n    having count(*) > 1\n\n) validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        campaign_id\n\n    from \"quasar_prod_warehouse\".\"public\".\"campaign_info_international\"\n    where campaign_id is not null\n    group by campaign_id\n    having count(*) > 1\n\n) validation_errors\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        campaign_id\n\n    from \"quasar_prod_warehouse\".\"public\".\"campaign_info_international\"\n    where campaign_id is not null\n    group by campaign_id\n    having count(*) > 1\n\n) validation_errors\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/unique_campaign_info_international_campaign_id.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.007498025894165039, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:36.275685Z", "completed_at": "2019-11-19T20:10:36.280348Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:36.280540Z", "completed_at": "2019-11-19T20:10:36.281637Z"}]}, {"node": {"name": "unique_campaign_info_international_campaign_node_id", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/unique_campaign_info_international_campaign_node_id.sql", "original_file_path": "models/campaign_info/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_unique(model=ref('campaign_info_international'), column_name='campaign_node_id') }}", "refs": [["campaign_info_international"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.campaign_info_international"], "macros": []}, "unique_id": "test.ds_dbt.unique_campaign_info_international_campaign_node_id", "empty": false, "fqn": ["ds_dbt", "schema_test", "unique_campaign_info_international_campaign_node_id"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "unique_campaign_info_international_campaign_node_id", "column_name": "campaign_node_id", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        campaign_node_id\n\n    from \"quasar_prod_warehouse\".\"public\".\"campaign_info_international\"\n    where campaign_node_id is not null\n    group by campaign_node_id\n    having count(*) > 1\n\n) validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        campaign_node_id\n\n    from \"quasar_prod_warehouse\".\"public\".\"campaign_info_international\"\n    where campaign_node_id is not null\n    group by campaign_node_id\n    having count(*) > 1\n\n) validation_errors\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        campaign_node_id\n\n    from \"quasar_prod_warehouse\".\"public\".\"campaign_info_international\"\n    where campaign_node_id is not null\n    group by campaign_node_id\n    having count(*) > 1\n\n) validation_errors\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/unique_campaign_info_international_campaign_node_id.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.010749101638793945, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:36.285489Z", "completed_at": "2019-11-19T20:10:36.291995Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:36.292186Z", "completed_at": "2019-11-19T20:10:36.293633Z"}]}, {"node": {"name": "unique_campaign_info_international_campaign_noun", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/unique_campaign_info_international_campaign_noun.sql", "original_file_path": "models/campaign_info/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_unique(model=ref('campaign_info_international'), column_name='campaign_noun') }}", "refs": [["campaign_info_international"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.campaign_info_international"], "macros": []}, "unique_id": "test.ds_dbt.unique_campaign_info_international_campaign_noun", "empty": false, "fqn": ["ds_dbt", "schema_test", "unique_campaign_info_international_campaign_noun"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "unique_campaign_info_international_campaign_noun", "column_name": "campaign_noun", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        campaign_noun\n\n    from \"quasar_prod_warehouse\".\"public\".\"campaign_info_international\"\n    where campaign_noun is not null\n    group by campaign_noun\n    having count(*) > 1\n\n) validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        campaign_noun\n\n    from \"quasar_prod_warehouse\".\"public\".\"campaign_info_international\"\n    where campaign_noun is not null\n    group by campaign_noun\n    having count(*) > 1\n\n) validation_errors\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        campaign_noun\n\n    from \"quasar_prod_warehouse\".\"public\".\"campaign_info_international\"\n    where campaign_noun is not null\n    group by campaign_noun\n    having count(*) > 1\n\n) validation_errors\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/unique_campaign_info_international_campaign_noun.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.007650852203369141, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:36.296377Z", "completed_at": "2019-11-19T20:10:36.301237Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:36.301380Z", "completed_at": "2019-11-19T20:10:36.302469Z"}]}, {"node": {"name": "unique_campaign_info_international_campaign_run_id", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/unique_campaign_info_international_campaign_run_id.sql", "original_file_path": "models/campaign_info/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_unique(model=ref('campaign_info_international'), column_name='campaign_run_id') }}", "refs": [["campaign_info_international"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.campaign_info_international"], "macros": []}, "unique_id": "test.ds_dbt.unique_campaign_info_international_campaign_run_id", "empty": false, "fqn": ["ds_dbt", "schema_test", "unique_campaign_info_international_campaign_run_id"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "unique_campaign_info_international_campaign_run_id", "column_name": "campaign_run_id", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        campaign_run_id\n\n    from \"quasar_prod_warehouse\".\"public\".\"campaign_info_international\"\n    where campaign_run_id is not null\n    group by campaign_run_id\n    having count(*) > 1\n\n) validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        campaign_run_id\n\n    from \"quasar_prod_warehouse\".\"public\".\"campaign_info_international\"\n    where campaign_run_id is not null\n    group by campaign_run_id\n    having count(*) > 1\n\n) validation_errors\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        campaign_run_id\n\n    from \"quasar_prod_warehouse\".\"public\".\"campaign_info_international\"\n    where campaign_run_id is not null\n    group by campaign_run_id\n    having count(*) > 1\n\n) validation_errors\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/unique_campaign_info_international_campaign_run_id.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.01371002197265625, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:36.307238Z", "completed_at": "2019-11-19T20:10:36.316366Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:36.316556Z", "completed_at": "2019-11-19T20:10:36.317827Z"}]}, {"node": {"name": "unique_campaign_info_international_campaign_run_start_date", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/unique_campaign_info_international_campaign_run_start_date.sql", "original_file_path": "models/campaign_info/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_unique(model=ref('campaign_info_international'), column_name='campaign_run_start_date') }}", "refs": [["campaign_info_international"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.campaign_info_international"], "macros": []}, "unique_id": "test.ds_dbt.unique_campaign_info_international_campaign_run_start_date", "empty": false, "fqn": ["ds_dbt", "schema_test", "unique_campaign_info_international_campaign_run_start_date"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "unique_campaign_info_international_campaign_run_start_date", "column_name": "campaign_run_start_date", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        campaign_run_start_date\n\n    from \"quasar_prod_warehouse\".\"public\".\"campaign_info_international\"\n    where campaign_run_start_date is not null\n    group by campaign_run_start_date\n    having count(*) > 1\n\n) validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        campaign_run_start_date\n\n    from \"quasar_prod_warehouse\".\"public\".\"campaign_info_international\"\n    where campaign_run_start_date is not null\n    group by campaign_run_start_date\n    having count(*) > 1\n\n) validation_errors\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        campaign_run_start_date\n\n    from \"quasar_prod_warehouse\".\"public\".\"campaign_info_international\"\n    where campaign_run_start_date is not null\n    group by campaign_run_start_date\n    having count(*) > 1\n\n) validation_errors\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/unique_campaign_info_international_campaign_run_start_date.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.009100675582885742, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:36.319734Z", "completed_at": "2019-11-19T20:10:36.326385Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:36.326556Z", "completed_at": "2019-11-19T20:10:36.328328Z"}]}, {"node": {"name": "snowplow_phoenix_events", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "resource_type": "model", "path": "phoenix_events/snowplow_phoenix_events.sql", "original_file_path": "models/phoenix_events/snowplow_phoenix_events.sql", "package_name": "ds_dbt", "raw_sql": "SELECT\n    e.event_id,\n    e.event_datetime,\n    CASE WHEN e.event_name IS NULL\n    AND e.event_type = 'pv'\n    THEN 'view' ELSE e.event_name END AS event_name,\n    e.event_source,\n    e.\"path\",\n    e.\"host\",\n    e.query_parameters,\n    e.clicked_link_url,\n    e.utm_source AS page_utm_source,\n    e.utm_medium AS page_utm_medium,\n    e.utm_campaign AS page_utm_campaign,\n    e.referrer_host,\n    e.referrer_path,\n    e.referrer_source,\n    e.campaign_id,\n    i.campaign_name,\n    e.modal_type,\n    e.search_query,\n    e.session_id,\n    e.browser_size,\n    e.northstar_id,\n    e.device_id\nFROM {{ ref('snowplow_raw_events') }} e\nLEFT JOIN {{ ref('campaign_info') }} i ON i.campaign_id = e.campaign_id::bigint", "refs": [["snowplow_raw_events"], ["campaign_info"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.snowplow_raw_events", "model.ds_dbt.campaign_info"], "macros": []}, "unique_id": "model.ds_dbt.snowplow_phoenix_events", "empty": false, "fqn": ["ds_dbt", "phoenix_events", "snowplow_phoenix_events"], "tags": [], "config": {"enabled": true, "materialized": "table", "pre-hook": [], "tags": [], "post-hook": [{"sql": "CREATE UNIQUE INDEX IF NOT EXISTS spe_unique ON {{ this }}(event_datetime, event_name, event_id)", "transaction": true, "index": 0}, {"sql": "CREATE INDEX IF NOT EXISTS spe_session_id ON {{ this }} (session_id)", "transaction": true, "index": 1}, {"sql": "GRANT SELECT ON {{ this }} TO looker", "transaction": true, "index": 2}, {"sql": "GRANT SELECT ON {{ this }} TO dsanalyst", "transaction": true, "index": 3}], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}, "alias": "snowplow_phoenix_events"}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "snowplow_phoenix_events", "columns": {"event_id": {"name": "event_id", "description": "This is a unique identifier for each event"}, "event_datetime": {"name": "event_datetime", "description": "When the event occurred in UTC (eg. 2018-01-01 12:00:00)"}, "event_name": {"name": "event_name", "description": "Name of the event (eg. northstar_submitted_register, https://docs.google.com/spreadsheets/d/1lm-fGrIm85nUTxSojqyCt_Ehmm1zEbViFhKpxcJiz1A/edit#gid=406441516)"}, "event_source": {"name": "event_source", "description": "Application source for event (eg. Phoenix, Northstar)"}, "path": {"name": "path", "description": "URL path"}, "host": {"name": "host", "description": "URL domain"}, "query_parameters": {"name": "query_parameters", "description": "Optional query parameters for the request (eg. query=huddle)"}, "clicked_link_url": {"name": "clicked_link_url", "description": "URL of campaign (eg. https://dosome.click/nyn5m7)"}, "page_utm_source": {"name": "page_utm_source", "description": "Tracks where the traffic is coming from. (eg. scholarship_listing, Facebook)"}, "page_utm_medium": {"name": "page_utm_medium", "description": "How the traffic got to the platform (eg. referral, CPC)"}, "page_utm_campaign": {"name": "page_utm_campaign", "description": "Tracks which campaign the traffic was generated by. Shows up in Google Analytics as Campaign Name (eg. editorial_newsletter)"}, "referrer_host": {"name": "referrer_host", "description": "URL host of the referring site (eg. google.com)"}, "referrer_path": {"name": "referrer_path", "description": "URL path from referring site (eg. /10-stats-on-teen-drug-and-alcohol-use/)"}, "referrer_source": {"name": "referrer_source", "description": "Referrer source name (eg. Google, Facebook)"}, "campaign_id": {"name": "campaign_id", "description": "Internal campaign id from contentful"}, "campaign_name": {"name": "campaign_name", "description": "Name of campaign"}, "modal_type": {"name": "modal_type", "description": "NULL or SURVEY_MODAL"}, "session_id": {"name": "session_id", "description": "Unique identifier of the user's session"}, "browser_size": {"name": "browser_size", "description": "Which type of browser a user is using (eg. Mobile, Desktop)"}, "northstar_id": {"name": "northstar_id", "description": "The Northstar ID of the user who generated the event"}, "device_id": {"name": "device_id", "description": "ID of the device used"}}, "description": "Table transforming snowplow_raw_event into rich derived data table for all clickstream info", "patch_path": "models/phoenix_events/schema.yml", "docrefs": [{"documentation_package": "", "documentation_name": "event_id", "column_name": "event_id"}, {"documentation_package": "", "documentation_name": "event_datetime", "column_name": "event_datetime"}, {"documentation_package": "", "documentation_name": "event_name", "column_name": "event_name"}, {"documentation_package": "", "documentation_name": "event_source", "column_name": "event_source"}, {"documentation_package": "", "documentation_name": "query_parameters", "column_name": "query_parameters"}, {"documentation_package": "", "documentation_name": "url", "column_name": "clicked_link_url"}, {"documentation_package": "", "documentation_name": "utm_source", "column_name": "page_utm_source"}, {"documentation_package": "", "documentation_name": "utm_medium", "column_name": "page_utm_medium"}, {"documentation_package": "", "documentation_name": "utm_campaign", "column_name": "page_utm_campaign"}, {"documentation_package": "", "documentation_name": "referrer_host", "column_name": "referrer_host"}, {"documentation_package": "", "documentation_name": "referrer_path", "column_name": "referrer_path"}, {"documentation_package": "", "documentation_name": "referrer_source", "column_name": "referrer_source"}, {"documentation_package": "", "documentation_name": "modal_type", "column_name": "modal_type"}, {"documentation_package": "", "documentation_name": "session_id", "column_name": "session_id"}, {"documentation_package": "", "documentation_name": "browser_size", "column_name": "browser_size"}, {"documentation_package": "", "documentation_name": "northstar_id", "column_name": "northstar_id"}, {"documentation_package": "", "documentation_name": "device_id", "column_name": "device_id"}], "compiled": true, "compiled_sql": "SELECT\n    e.event_id,\n    e.event_datetime,\n    CASE WHEN e.event_name IS NULL\n    AND e.event_type = 'pv'\n    THEN 'view' ELSE e.event_name END AS event_name,\n    e.event_source,\n    e.\"path\",\n    e.\"host\",\n    e.query_parameters,\n    e.clicked_link_url,\n    e.utm_source AS page_utm_source,\n    e.utm_medium AS page_utm_medium,\n    e.utm_campaign AS page_utm_campaign,\n    e.referrer_host,\n    e.referrer_path,\n    e.referrer_source,\n    e.campaign_id,\n    i.campaign_name,\n    e.modal_type,\n    e.search_query,\n    e.session_id,\n    e.browser_size,\n    e.northstar_id,\n    e.device_id\nFROM \"quasar_prod_warehouse\".\"public\".\"snowplow_raw_events\" e\nLEFT JOIN \"quasar_prod_warehouse\".\"public\".\"campaign_info\" i ON i.campaign_id = e.campaign_id::bigint", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "SELECT\n    e.event_id,\n    e.event_datetime,\n    CASE WHEN e.event_name IS NULL\n    AND e.event_type = 'pv'\n    THEN 'view' ELSE e.event_name END AS event_name,\n    e.event_source,\n    e.\"path\",\n    e.\"host\",\n    e.query_parameters,\n    e.clicked_link_url,\n    e.utm_source AS page_utm_source,\n    e.utm_medium AS page_utm_medium,\n    e.utm_campaign AS page_utm_campaign,\n    e.referrer_host,\n    e.referrer_path,\n    e.referrer_source,\n    e.campaign_id,\n    i.campaign_name,\n    e.modal_type,\n    e.search_query,\n    e.session_id,\n    e.browser_size,\n    e.northstar_id,\n    e.device_id\nFROM \"quasar_prod_warehouse\".\"public\".\"snowplow_raw_events\" e\nLEFT JOIN \"quasar_prod_warehouse\".\"public\".\"campaign_info\" i ON i.campaign_id = e.campaign_id::bigint", "wrapped_sql": "None", "build_path": "../../docs/compiled/ds_dbt/phoenix_events/snowplow_phoenix_events.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.01685500144958496, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:36.333024Z", "completed_at": "2019-11-19T20:10:36.343722Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:36.343893Z", "completed_at": "2019-11-19T20:10:36.347025Z"}]}, {"node": {"name": "not_null_snowplow_raw_events_browser_size", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_snowplow_raw_events_browser_size.sql", "original_file_path": "models/phoenix_events/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('snowplow_raw_events'), column_name='browser_size') }}", "refs": [["snowplow_raw_events"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.snowplow_raw_events"], "macros": []}, "unique_id": "test.ds_dbt.not_null_snowplow_raw_events_browser_size", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_snowplow_raw_events_browser_size"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_snowplow_raw_events_browser_size", "column_name": "browser_size", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_raw_events\"\nwhere browser_size is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_raw_events\"\nwhere browser_size is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_raw_events\"\nwhere browser_size is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_snowplow_raw_events_browser_size.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.011783123016357422, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:36.350692Z", "completed_at": "2019-11-19T20:10:36.360661Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:36.360830Z", "completed_at": "2019-11-19T20:10:36.362017Z"}]}, {"node": {"name": "not_null_snowplow_raw_events_device_id", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_snowplow_raw_events_device_id.sql", "original_file_path": "models/phoenix_events/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('snowplow_raw_events'), column_name='device_id') }}", "refs": [["snowplow_raw_events"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.snowplow_raw_events"], "macros": []}, "unique_id": "test.ds_dbt.not_null_snowplow_raw_events_device_id", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_snowplow_raw_events_device_id"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_snowplow_raw_events_device_id", "column_name": "device_id", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_raw_events\"\nwhere device_id is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_raw_events\"\nwhere device_id is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_raw_events\"\nwhere device_id is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_snowplow_raw_events_device_id.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.0078029632568359375, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:36.365156Z", "completed_at": "2019-11-19T20:10:36.369969Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:36.370100Z", "completed_at": "2019-11-19T20:10:36.371179Z"}]}, {"node": {"name": "not_null_snowplow_raw_events_event_datetime", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_snowplow_raw_events_event_datetime.sql", "original_file_path": "models/phoenix_events/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('snowplow_raw_events'), column_name='event_datetime') }}", "refs": [["snowplow_raw_events"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.snowplow_raw_events"], "macros": []}, "unique_id": "test.ds_dbt.not_null_snowplow_raw_events_event_datetime", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_snowplow_raw_events_event_datetime"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_snowplow_raw_events_event_datetime", "column_name": "event_datetime", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_raw_events\"\nwhere event_datetime is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_raw_events\"\nwhere event_datetime is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_raw_events\"\nwhere event_datetime is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_snowplow_raw_events_event_datetime.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.011768817901611328, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:36.375407Z", "completed_at": "2019-11-19T20:10:36.382661Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:36.382839Z", "completed_at": "2019-11-19T20:10:36.384406Z"}]}, {"node": {"name": "not_null_snowplow_raw_events_event_id", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_snowplow_raw_events_event_id.sql", "original_file_path": "models/phoenix_events/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('snowplow_raw_events'), column_name='event_id') }}", "refs": [["snowplow_raw_events"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.snowplow_raw_events"], "macros": []}, "unique_id": "test.ds_dbt.not_null_snowplow_raw_events_event_id", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_snowplow_raw_events_event_id"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_snowplow_raw_events_event_id", "column_name": "event_id", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_raw_events\"\nwhere event_id is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_raw_events\"\nwhere event_id is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_raw_events\"\nwhere event_id is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_snowplow_raw_events_event_id.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.007821083068847656, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:36.387205Z", "completed_at": "2019-11-19T20:10:36.392124Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:36.392260Z", "completed_at": "2019-11-19T20:10:36.393466Z"}]}, {"node": {"name": "not_null_snowplow_raw_events_event_source", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_snowplow_raw_events_event_source.sql", "original_file_path": "models/phoenix_events/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('snowplow_raw_events'), column_name='event_source') }}", "refs": [["snowplow_raw_events"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.snowplow_raw_events"], "macros": []}, "unique_id": "test.ds_dbt.not_null_snowplow_raw_events_event_source", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_snowplow_raw_events_event_source"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_snowplow_raw_events_event_source", "column_name": "event_source", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_raw_events\"\nwhere event_source is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_raw_events\"\nwhere event_source is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_raw_events\"\nwhere event_source is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_snowplow_raw_events_event_source.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.010235786437988281, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:36.397490Z", "completed_at": "2019-11-19T20:10:36.403865Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:36.404019Z", "completed_at": "2019-11-19T20:10:36.405112Z"}]}, {"node": {"name": "not_null_snowplow_raw_events_event_type", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_snowplow_raw_events_event_type.sql", "original_file_path": "models/phoenix_events/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('snowplow_raw_events'), column_name='event_type') }}", "refs": [["snowplow_raw_events"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.snowplow_raw_events"], "macros": []}, "unique_id": "test.ds_dbt.not_null_snowplow_raw_events_event_type", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_snowplow_raw_events_event_type"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_snowplow_raw_events_event_type", "column_name": "event_type", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_raw_events\"\nwhere event_type is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_raw_events\"\nwhere event_type is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_raw_events\"\nwhere event_type is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_snowplow_raw_events_event_type.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.008495092391967773, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:36.406716Z", "completed_at": "2019-11-19T20:10:36.413517Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:36.413644Z", "completed_at": "2019-11-19T20:10:36.414717Z"}]}, {"node": {"name": "not_null_snowplow_raw_events_host", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_snowplow_raw_events_host.sql", "original_file_path": "models/phoenix_events/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('snowplow_raw_events'), column_name='host') }}", "refs": [["snowplow_raw_events"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.snowplow_raw_events"], "macros": []}, "unique_id": "test.ds_dbt.not_null_snowplow_raw_events_host", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_snowplow_raw_events_host"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_snowplow_raw_events_host", "column_name": "host", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_raw_events\"\nwhere host is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_raw_events\"\nwhere host is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_raw_events\"\nwhere host is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_snowplow_raw_events_host.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.010673999786376953, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:36.419059Z", "completed_at": "2019-11-19T20:10:36.425948Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:36.426105Z", "completed_at": "2019-11-19T20:10:36.427200Z"}]}, {"node": {"name": "not_null_snowplow_raw_events_path", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_snowplow_raw_events_path.sql", "original_file_path": "models/phoenix_events/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('snowplow_raw_events'), column_name='path') }}", "refs": [["snowplow_raw_events"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.snowplow_raw_events"], "macros": []}, "unique_id": "test.ds_dbt.not_null_snowplow_raw_events_path", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_snowplow_raw_events_path"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_snowplow_raw_events_path", "column_name": "path", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_raw_events\"\nwhere path is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_raw_events\"\nwhere path is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_raw_events\"\nwhere path is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_snowplow_raw_events_path.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.007631063461303711, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:36.429843Z", "completed_at": "2019-11-19T20:10:36.434743Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:36.434901Z", "completed_at": "2019-11-19T20:10:36.435986Z"}]}, {"node": {"name": "not_null_snowplow_raw_events_referrer_host", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_snowplow_raw_events_referrer_host.sql", "original_file_path": "models/phoenix_events/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('snowplow_raw_events'), column_name='referrer_host') }}", "refs": [["snowplow_raw_events"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.snowplow_raw_events"], "macros": []}, "unique_id": "test.ds_dbt.not_null_snowplow_raw_events_referrer_host", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_snowplow_raw_events_referrer_host"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_snowplow_raw_events_referrer_host", "column_name": "referrer_host", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_raw_events\"\nwhere referrer_host is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_raw_events\"\nwhere referrer_host is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_raw_events\"\nwhere referrer_host is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_snowplow_raw_events_referrer_host.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.01013493537902832, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:36.439789Z", "completed_at": "2019-11-19T20:10:36.446173Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:36.446335Z", "completed_at": "2019-11-19T20:10:36.447420Z"}]}, {"node": {"name": "not_null_snowplow_raw_events_referrer_path", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_snowplow_raw_events_referrer_path.sql", "original_file_path": "models/phoenix_events/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('snowplow_raw_events'), column_name='referrer_path') }}", "refs": [["snowplow_raw_events"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.snowplow_raw_events"], "macros": []}, "unique_id": "test.ds_dbt.not_null_snowplow_raw_events_referrer_path", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_snowplow_raw_events_referrer_path"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_snowplow_raw_events_referrer_path", "column_name": "referrer_path", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_raw_events\"\nwhere referrer_path is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_raw_events\"\nwhere referrer_path is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_raw_events\"\nwhere referrer_path is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_snowplow_raw_events_referrer_path.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.0077512264251708984, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:36.449084Z", "completed_at": "2019-11-19T20:10:36.455114Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:36.455287Z", "completed_at": "2019-11-19T20:10:36.456362Z"}]}, {"node": {"name": "not_null_snowplow_raw_events_session_counter", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_snowplow_raw_events_session_counter.sql", "original_file_path": "models/phoenix_events/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('snowplow_raw_events'), column_name='session_counter') }}", "refs": [["snowplow_raw_events"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.snowplow_raw_events"], "macros": []}, "unique_id": "test.ds_dbt.not_null_snowplow_raw_events_session_counter", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_snowplow_raw_events_session_counter"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_snowplow_raw_events_session_counter", "column_name": "session_counter", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_raw_events\"\nwhere session_counter is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_raw_events\"\nwhere session_counter is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_raw_events\"\nwhere session_counter is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_snowplow_raw_events_session_counter.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.015357255935668945, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:36.460947Z", "completed_at": "2019-11-19T20:10:36.471614Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:36.471764Z", "completed_at": "2019-11-19T20:10:36.473027Z"}]}, {"node": {"name": "not_null_snowplow_raw_events_session_id", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_snowplow_raw_events_session_id.sql", "original_file_path": "models/phoenix_events/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('snowplow_raw_events'), column_name='session_id') }}", "refs": [["snowplow_raw_events"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.snowplow_raw_events"], "macros": []}, "unique_id": "test.ds_dbt.not_null_snowplow_raw_events_session_id", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_snowplow_raw_events_session_id"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_snowplow_raw_events_session_id", "column_name": "session_id", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_raw_events\"\nwhere session_id is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_raw_events\"\nwhere session_id is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_raw_events\"\nwhere session_id is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_snowplow_raw_events_session_id.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.00828409194946289, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:36.474831Z", "completed_at": "2019-11-19T20:10:36.481196Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:36.481321Z", "completed_at": "2019-11-19T20:10:36.482638Z"}]}, {"node": {"name": "unique_snowplow_raw_events_event_id", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/unique_snowplow_raw_events_event_id.sql", "original_file_path": "models/phoenix_events/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_unique(model=ref('snowplow_raw_events'), column_name='event_id') }}", "refs": [["snowplow_raw_events"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.snowplow_raw_events"], "macros": []}, "unique_id": "test.ds_dbt.unique_snowplow_raw_events_event_id", "empty": false, "fqn": ["ds_dbt", "schema_test", "unique_snowplow_raw_events_event_id"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "unique_snowplow_raw_events_event_id", "column_name": "event_id", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        event_id\n\n    from \"quasar_prod_warehouse\".\"public\".\"snowplow_raw_events\"\n    where event_id is not null\n    group by event_id\n    having count(*) > 1\n\n) validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        event_id\n\n    from \"quasar_prod_warehouse\".\"public\".\"snowplow_raw_events\"\n    where event_id is not null\n    group by event_id\n    having count(*) > 1\n\n) validation_errors\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        event_id\n\n    from \"quasar_prod_warehouse\".\"public\".\"snowplow_raw_events\"\n    where event_id is not null\n    group by event_id\n    having count(*) > 1\n\n) validation_errors\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/unique_snowplow_raw_events_event_id.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.009097099304199219, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:36.486835Z", "completed_at": "2019-11-19T20:10:36.492638Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:36.492836Z", "completed_at": "2019-11-19T20:10:36.493928Z"}]}, {"node": {"name": "unique_snowplow_raw_events_event_source", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/unique_snowplow_raw_events_event_source.sql", "original_file_path": "models/phoenix_events/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_unique(model=ref('snowplow_raw_events'), column_name='event_source') }}", "refs": [["snowplow_raw_events"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.snowplow_raw_events"], "macros": []}, "unique_id": "test.ds_dbt.unique_snowplow_raw_events_event_source", "empty": false, "fqn": ["ds_dbt", "schema_test", "unique_snowplow_raw_events_event_source"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "unique_snowplow_raw_events_event_source", "column_name": "event_source", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        event_source\n\n    from \"quasar_prod_warehouse\".\"public\".\"snowplow_raw_events\"\n    where event_source is not null\n    group by event_source\n    having count(*) > 1\n\n) validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        event_source\n\n    from \"quasar_prod_warehouse\".\"public\".\"snowplow_raw_events\"\n    where event_source is not null\n    group by event_source\n    having count(*) > 1\n\n) validation_errors\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        event_source\n\n    from \"quasar_prod_warehouse\".\"public\".\"snowplow_raw_events\"\n    where event_source is not null\n    group by event_source\n    having count(*) > 1\n\n) validation_errors\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/unique_snowplow_raw_events_event_source.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.0077168941497802734, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:36.495594Z", "completed_at": "2019-11-19T20:10:36.501570Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:36.501710Z", "completed_at": "2019-11-19T20:10:36.502837Z"}]}, {"node": {"name": "reportbacks", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "resource_type": "model", "path": "campaign_activity/reportbacks.sql", "original_file_path": "models/campaign_activity/reportbacks.sql", "package_name": "ds_dbt", "raw_sql": "SELECT\n    pd.northstar_id,\n    pd.id as post_id,\n    pd.signup_id,\n    pd.campaign_id,\n    pd.\"action\" as post_action,\n    pd.\"type\" as post_type,\n    pd.status as post_status,\n    pd.post_class,\n    pd.created_at as post_created_at,\n    pd.source as post_source,\n    pd.source_bucket as post_source_bucket,\n    pd.reportback_volume,\n    pd.civic_action,\n    pd.scholarship_entry,\n    pd.location,\n    pd.postal_code,\n    CASE\n        WHEN (pd.post_class ilike '%%vote%%' AND pd.status = 'confirmed')\n        THEN 'self-reported registrations'\n        WHEN (pd.post_class ilike '%%vote%%' AND pd.status <> 'confirmed')\n        THEN 'voter_registrations'\n        WHEN pd.\"type\" ilike '%%photo%%' AND pd.post_class NOT ilike '%%vote%%'\n        THEN 'photo_rbs'\n        WHEN pd.\"type\" ilike '%%text%%'\n        THEN 'text_rbs'\n        WHEN pd.\"type\" ilike '%%social%%'\n        THEN 'social'\n        WHEN pd.\"type\" ilike '%%call%%'\n        THEN 'phone_calls'\n        ELSE NULL END AS post_bucket\nFROM {{ ref('posts') }} pd\nWHERE pd.id IN\n    (SELECT\n        min(id)\n    FROM {{ ref('posts') }} p\n    WHERE p.is_reportback = 'true' AND p.is_accepted = 1\n    GROUP BY p.northstar_id, p.campaign_id, p.signup_id, p.post_class, p.reportback_volume)", "refs": [["posts"], ["posts"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.posts", "model.ds_dbt.posts"], "macros": []}, "unique_id": "model.ds_dbt.reportbacks", "empty": false, "fqn": ["ds_dbt", "campaign_activity", "reportbacks"], "tags": [], "config": {"enabled": true, "materialized": "table", "pre-hook": [], "tags": [], "post-hook": [{"sql": "CREATE UNIQUE INDEX IF NOT EXISTS reportbacks_unique ON {{ this }}(post_id)", "transaction": true, "index": 0}, {"sql": "CREATE INDEX IF NOT EXISTS reportbacks_i ON {{ this }}(post_created_at, campaign_id, post_class, reportback_volume)", "transaction": true, "index": 1}, {"sql": "GRANT SELECT ON {{ this }} TO dsanalyst", "transaction": true, "index": 2}, {"sql": "GRANT SELECT ON {{ this }} TO looker", "transaction": true, "index": 3}], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}, "alias": "reportbacks"}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "reportbacks", "columns": {}, "description": "", "compiled": true, "compiled_sql": "SELECT\n    pd.northstar_id,\n    pd.id as post_id,\n    pd.signup_id,\n    pd.campaign_id,\n    pd.\"action\" as post_action,\n    pd.\"type\" as post_type,\n    pd.status as post_status,\n    pd.post_class,\n    pd.created_at as post_created_at,\n    pd.source as post_source,\n    pd.source_bucket as post_source_bucket,\n    pd.reportback_volume,\n    pd.civic_action,\n    pd.scholarship_entry,\n    pd.location,\n    pd.postal_code,\n    CASE\n        WHEN (pd.post_class ilike '%%vote%%' AND pd.status = 'confirmed')\n        THEN 'self-reported registrations'\n        WHEN (pd.post_class ilike '%%vote%%' AND pd.status <> 'confirmed')\n        THEN 'voter_registrations'\n        WHEN pd.\"type\" ilike '%%photo%%' AND pd.post_class NOT ilike '%%vote%%'\n        THEN 'photo_rbs'\n        WHEN pd.\"type\" ilike '%%text%%'\n        THEN 'text_rbs'\n        WHEN pd.\"type\" ilike '%%social%%'\n        THEN 'social'\n        WHEN pd.\"type\" ilike '%%call%%'\n        THEN 'phone_calls'\n        ELSE NULL END AS post_bucket\nFROM \"quasar_prod_warehouse\".\"public\".\"posts\" pd\nWHERE pd.id IN\n    (SELECT\n        min(id)\n    FROM \"quasar_prod_warehouse\".\"public\".\"posts\" p\n    WHERE p.is_reportback = 'true' AND p.is_accepted = 1\n    GROUP BY p.northstar_id, p.campaign_id, p.signup_id, p.post_class, p.reportback_volume)", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "SELECT\n    pd.northstar_id,\n    pd.id as post_id,\n    pd.signup_id,\n    pd.campaign_id,\n    pd.\"action\" as post_action,\n    pd.\"type\" as post_type,\n    pd.status as post_status,\n    pd.post_class,\n    pd.created_at as post_created_at,\n    pd.source as post_source,\n    pd.source_bucket as post_source_bucket,\n    pd.reportback_volume,\n    pd.civic_action,\n    pd.scholarship_entry,\n    pd.location,\n    pd.postal_code,\n    CASE\n        WHEN (pd.post_class ilike '%%vote%%' AND pd.status = 'confirmed')\n        THEN 'self-reported registrations'\n        WHEN (pd.post_class ilike '%%vote%%' AND pd.status <> 'confirmed')\n        THEN 'voter_registrations'\n        WHEN pd.\"type\" ilike '%%photo%%' AND pd.post_class NOT ilike '%%vote%%'\n        THEN 'photo_rbs'\n        WHEN pd.\"type\" ilike '%%text%%'\n        THEN 'text_rbs'\n        WHEN pd.\"type\" ilike '%%social%%'\n        THEN 'social'\n        WHEN pd.\"type\" ilike '%%call%%'\n        THEN 'phone_calls'\n        ELSE NULL END AS post_bucket\nFROM \"quasar_prod_warehouse\".\"public\".\"posts\" pd\nWHERE pd.id IN\n    (SELECT\n        min(id)\n    FROM \"quasar_prod_warehouse\".\"public\".\"posts\" p\n    WHERE p.is_reportback = 'true' AND p.is_accepted = 1\n    GROUP BY p.northstar_id, p.campaign_id, p.signup_id, p.post_class, p.reportback_volume)", "wrapped_sql": "None", "build_path": "../../docs/compiled/ds_dbt/campaign_activity/reportbacks.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.010904788970947266, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:36.506306Z", "completed_at": "2019-11-19T20:10:36.513682Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:36.513844Z", "completed_at": "2019-11-19T20:10:36.515283Z"}]}, {"node": {"name": "member_event_log", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "resource_type": "model", "path": "member_event_log/member_event_log.sql", "original_file_path": "models/member_event_log/member_event_log.sql", "package_name": "ds_dbt", "raw_sql": "SELECT\n    MD5(concat(a.northstar_id, a.\"timestamp\", a.action_id, a.action_serial_id)) AS event_id,\n    a.northstar_id AS northstar_id,\n    a.\"timestamp\" AS \"timestamp\",\n    a.\"action\" AS action_type,\n    a.action_id AS action_id,\n    a.\"source\" AS \"source\",\n    a.action_serial_id AS action_serial_id,\n    a.channel AS channel,\n    CASE \n    \tWHEN date_trunc('month', a.\"timestamp\") = date_trunc('month', u.created_at) \n    \tTHEN 'New' \n    \tELSE 'Returning' END \n    \tAS \"type\",\n    MIN(\"timestamp\") \n    \tOVER \n    \t(PARTITION BY a.northstar_id, date_trunc('month', a.\"timestamp\")) \n    \tAS first_action_month\nFROM ( \nSELECT\n    DISTINCT s.northstar_id AS northstar_id,\n    s.created_at AS \"timestamp\",\n    'signup' AS \"action\",\n    '1' AS action_id, \n    s.\"source\" AS \"source\",\n    s.id::varchar AS action_serial_id,\n(CASE WHEN s.\"source\" ILIKE '%%sms%%' THEN 'sms'\nWHEN s.\"source\" NOT LIKE '%%sms%%'AND s.\"source\" NOT LIKE '%%email%%' AND s.\"source\" NOT LIKE '%%niche%%' OR s.\"source\" IN ('rock-the-vote', 'turbovote') THEN 'web'\nWHEN s.\"source\" ILIKE '%%email%%' THEN 'email'\nWHEN s.\"source\" ILIKE '%%niche%%' THEN 'niche_coregistration'\nWHEN s.\"source\" NOT LIKE '%%sms%%'AND s.\"source\" NOT LIKE '%%email%%' AND s.\"source\" NOT LIKE '%%niche%%' AND s.\"source\" NOT IN ('rock-the-vote', 'turbovote') AND s.\"source\" IS NOT NULL THEN 'other' END) AS \"channel\"\nFROM {{ ref('signups') }} s\nWHERE s.\"source\" IS DISTINCT FROM 'importer-client'\nAND s.\"source\" IS DISTINCT FROM 'rock-the-vote'\nAND s.\"source\" IS DISTINCT FROM 'turbovote'\nUNION ALL\nSELECT\n    DISTINCT p.northstar_id AS northstar_id,\n    p.created_at AS \"timestamp\",\n    'post' AS \"action\",\n    '2' AS action_id,\n    p.\"source\" AS \"source\",\n    p.id::varchar AS action_serial_id,\n(CASE WHEN p.\"source\" ILIKE '%%sms%%' THEN 'sms'\nWHEN p.\"source\" ILIKE '%%phoenix%%' OR p.\"source\" IS NULL OR p.\"source\" ILIKE '%%turbovote%%' THEN 'web'\nWHEN p.\"source\" ILIKE '%%app%%' THEN 'mobile_app'\nWHEN p.\"source\" NOT LIKE '%%phoenix%%' AND p.\"source\" NOT LIKE '%%sms%%' AND p.\"source\" IS NOT NULL AND p.\"source\" NOT LIKE '%%app%%' AND p.\"source\" NOT LIKE '%%turbovote%%' THEN 'other' END) AS \"channel\"\nFROM {{ ref('posts') }} p\nWHERE p.status IN ('accepted', 'confirmed', 'register-OVR', 'register-form', 'pending')\nUNION ALL\nSELECT DISTINCT \n    u_access.id AS northstar_id,\n    u_access.last_accessed_at AS \"timestamp\",\n    'site_access' AS \"action\",\n    '3' AS action_id,\n    NULL AS \"source\",\n    '0' AS action_serial_id,\n    'web' AS channel\nFROM northstar.users u_access\nWHERE u_access.last_accessed_at IS NOT NULL\nAND u_access.\"source\" IS DISTINCT FROM 'runscope'\nAND u_access.\"source\" IS DISTINCT FROM 'runscope-client'\nAND u_access.email IS DISTINCT FROM 'runscope-scheduled-test@dosomething.org'\nAND u_access.email IS DISTINCT FROM 'juy+runscopescheduledtests@dosomething.org'\nAND (u_access.email NOT ILIKE '%%@example.org%%' OR u_access.email IS NULL) \nUNION ALL\nSELECT DISTINCT \n    u_login.id AS northstar_id,\n    u_login.last_authenticated_at AS \"timestamp\",\n    'site_login' AS \"action\",\n    '4' AS action_id,\n    NULL AS \"source\",\n    '0' AS action_serial_id,\n    'web' AS channel\nFROM northstar.users u_login\nWHERE u_login.last_authenticated_at IS NOT NULL \nAND u_login.\"source\" IS DISTINCT FROM 'runscope'\nAND u_login.\"source\" IS DISTINCT FROM 'runscope-client'\nAND u_login.email IS DISTINCT FROM 'runscope-scheduled-test@dosomething.org'\nAND u_login.email IS DISTINCT FROM 'juy+runscopescheduledtests@dosomething.org'\nAND (u_login.email NOT ILIKE '%%@example.org%%' OR u_login.email IS NULL) \nUNION ALL \nSELECT\n    DISTINCT u.id AS northstar_id,\n    u.created_at AS \"timestamp\",\n    'account_creation' AS action, \n    '5' AS action_id,\n    u.\"source\" AS \"source\",\n    '0' AS action_serial_id, \n    (CASE WHEN u.\"source\" ILIKE '%%sms%%' THEN 'sms'\n    WHEN u.\"source\" ILIKE '%%phoenix%%' OR u.\"source\" IS NULL THEN 'web'\n    WHEN u.\"source\" ILIKE '%%niche%%' THEN 'niche_coregistration'\n    WHEN u.\"source\" NOT LIKE '%%niche%%' AND u.\"source\" NOT LIKE '%%sms%%' AND u.\"source\" NOT LIKE '%%phoenix%%' AND u.\"source\" IS NOT NULL THEN 'other' END) AS \"channel\"\nFROM\n    (SELECT \n            u_create.id,\n            max(u_create.\"source\") AS \"source\",\n            min(u_create.created_at) AS created_at\n    FROM northstar.users u_create\nWHERE u_create.\"source\" IS DISTINCT FROM 'importer-client'\nAND u_create.\"source\" IS DISTINCT FROM 'runscope'\nAND u_create.\"source\" IS DISTINCT FROM 'runscope-client'\nAND u_create.email IS DISTINCT FROM 'runscope-scheduled-test@dosomething.org'\nAND u_create.email IS DISTINCT FROM 'juy+runscopescheduledtests@dosomething.org'\nAND (u_create.email NOT ILIKE '%%@example.org%%' OR u_create.email IS NULL) \n    GROUP BY u_create.id) u\nUNION ALL \nSELECT\n    DISTINCT g.user_id AS northstar_id,\n    g.created_at AS \"timestamp\",\n    'messaged_gambit' AS \"action\", \n    '6' AS action_id,\n    'SMS' AS \"source\",\n    g.message_id AS action_serial_id,\n    'sms' AS \"channel\"\nFROM\n    {{ ref('gambit_messages_inbound') }} g\nWHERE \n\tg.user_id IS NOT NULL\n\tAND g.macro <> 'subscriptionStatusStop' \nUNION ALL \n    SELECT\n        DISTINCT cio.customer_id AS northstar_id,\n        cio.\"timestamp\" AS \"timestamp\",\n        'clicked_link' AS \"action\",\n        '7' AS action_id,\n        cio.template_id::CHARACTER AS \"source\",\n        cio.event_id AS action_serial_id, \n        'email' AS \"channel\"\n    FROM\n        cio.email_event cio\n    WHERE \n        cio.event_type = 'email_clicked'\n    AND cio.customer_id IS NOT NULL\nUNION ALL \nSELECT DISTINCT\n    b.northstar_id AS northstar_id,\n    b.click_time AS \"timestamp\",\n    CONCAT('bertly_link_', b.interaction_type) AS \"action\",\n    '10' AS action_id,\n    'bertly' AS \"source\",\n    b.click_id AS action_serial_id,\n    b.\"source\" AS \"channel\"\nFROM {{ ref('bertly_clicks') }} b\nINNER JOIN {{ ref('users') }} u\nON b.northstar_id = u.northstar_id\nWHERE b.northstar_id IS NOT NULL\nAND b.interaction_type IS DISTINCT FROM 'preview'\n) AS a\nLEFT JOIN {{ ref('users') }} u ON u.northstar_id = a.northstar_id", "refs": [["signups"], ["posts"], ["gambit_messages_inbound"], ["bertly_clicks"], ["users"], ["users"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.signups", "model.ds_dbt.posts", "model.ds_dbt.gambit_messages_inbound", "model.ds_dbt.bertly_clicks", "model.ds_dbt.users", "model.ds_dbt.users"], "macros": []}, "unique_id": "model.ds_dbt.member_event_log", "empty": false, "fqn": ["ds_dbt", "member_event_log", "member_event_log"], "tags": [], "config": {"enabled": true, "materialized": "table", "pre-hook": [], "tags": [], "post-hook": [{"sql": "CREATE UNIQUE INDEX ON {{ this }}(timestamp, northstar_id, event_id)", "transaction": true, "index": 0}, {"sql": "CREATE INDEX ON {{ this }}(northstar_id, timestamp)", "transaction": true, "index": 1}, {"sql": "GRANT SELECT ON {{ this }} TO dsanalyst", "transaction": true, "index": 2}, {"sql": "GRANT SELECT ON {{ this }} TO looker", "transaction": true, "index": 3}], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}, "alias": "member_event_log"}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "member_event_log", "columns": {}, "description": "", "compiled": true, "compiled_sql": "SELECT\n    MD5(concat(a.northstar_id, a.\"timestamp\", a.action_id, a.action_serial_id)) AS event_id,\n    a.northstar_id AS northstar_id,\n    a.\"timestamp\" AS \"timestamp\",\n    a.\"action\" AS action_type,\n    a.action_id AS action_id,\n    a.\"source\" AS \"source\",\n    a.action_serial_id AS action_serial_id,\n    a.channel AS channel,\n    CASE \n    \tWHEN date_trunc('month', a.\"timestamp\") = date_trunc('month', u.created_at) \n    \tTHEN 'New' \n    \tELSE 'Returning' END \n    \tAS \"type\",\n    MIN(\"timestamp\") \n    \tOVER \n    \t(PARTITION BY a.northstar_id, date_trunc('month', a.\"timestamp\")) \n    \tAS first_action_month\nFROM ( \nSELECT\n    DISTINCT s.northstar_id AS northstar_id,\n    s.created_at AS \"timestamp\",\n    'signup' AS \"action\",\n    '1' AS action_id, \n    s.\"source\" AS \"source\",\n    s.id::varchar AS action_serial_id,\n(CASE WHEN s.\"source\" ILIKE '%%sms%%' THEN 'sms'\nWHEN s.\"source\" NOT LIKE '%%sms%%'AND s.\"source\" NOT LIKE '%%email%%' AND s.\"source\" NOT LIKE '%%niche%%' OR s.\"source\" IN ('rock-the-vote', 'turbovote') THEN 'web'\nWHEN s.\"source\" ILIKE '%%email%%' THEN 'email'\nWHEN s.\"source\" ILIKE '%%niche%%' THEN 'niche_coregistration'\nWHEN s.\"source\" NOT LIKE '%%sms%%'AND s.\"source\" NOT LIKE '%%email%%' AND s.\"source\" NOT LIKE '%%niche%%' AND s.\"source\" NOT IN ('rock-the-vote', 'turbovote') AND s.\"source\" IS NOT NULL THEN 'other' END) AS \"channel\"\nFROM \"quasar_prod_warehouse\".\"public\".\"signups\" s\nWHERE s.\"source\" IS DISTINCT FROM 'importer-client'\nAND s.\"source\" IS DISTINCT FROM 'rock-the-vote'\nAND s.\"source\" IS DISTINCT FROM 'turbovote'\nUNION ALL\nSELECT\n    DISTINCT p.northstar_id AS northstar_id,\n    p.created_at AS \"timestamp\",\n    'post' AS \"action\",\n    '2' AS action_id,\n    p.\"source\" AS \"source\",\n    p.id::varchar AS action_serial_id,\n(CASE WHEN p.\"source\" ILIKE '%%sms%%' THEN 'sms'\nWHEN p.\"source\" ILIKE '%%phoenix%%' OR p.\"source\" IS NULL OR p.\"source\" ILIKE '%%turbovote%%' THEN 'web'\nWHEN p.\"source\" ILIKE '%%app%%' THEN 'mobile_app'\nWHEN p.\"source\" NOT LIKE '%%phoenix%%' AND p.\"source\" NOT LIKE '%%sms%%' AND p.\"source\" IS NOT NULL AND p.\"source\" NOT LIKE '%%app%%' AND p.\"source\" NOT LIKE '%%turbovote%%' THEN 'other' END) AS \"channel\"\nFROM \"quasar_prod_warehouse\".\"public\".\"posts\" p\nWHERE p.status IN ('accepted', 'confirmed', 'register-OVR', 'register-form', 'pending')\nUNION ALL\nSELECT DISTINCT \n    u_access.id AS northstar_id,\n    u_access.last_accessed_at AS \"timestamp\",\n    'site_access' AS \"action\",\n    '3' AS action_id,\n    NULL AS \"source\",\n    '0' AS action_serial_id,\n    'web' AS channel\nFROM northstar.users u_access\nWHERE u_access.last_accessed_at IS NOT NULL\nAND u_access.\"source\" IS DISTINCT FROM 'runscope'\nAND u_access.\"source\" IS DISTINCT FROM 'runscope-client'\nAND u_access.email IS DISTINCT FROM 'runscope-scheduled-test@dosomething.org'\nAND u_access.email IS DISTINCT FROM 'juy+runscopescheduledtests@dosomething.org'\nAND (u_access.email NOT ILIKE '%%@example.org%%' OR u_access.email IS NULL) \nUNION ALL\nSELECT DISTINCT \n    u_login.id AS northstar_id,\n    u_login.last_authenticated_at AS \"timestamp\",\n    'site_login' AS \"action\",\n    '4' AS action_id,\n    NULL AS \"source\",\n    '0' AS action_serial_id,\n    'web' AS channel\nFROM northstar.users u_login\nWHERE u_login.last_authenticated_at IS NOT NULL \nAND u_login.\"source\" IS DISTINCT FROM 'runscope'\nAND u_login.\"source\" IS DISTINCT FROM 'runscope-client'\nAND u_login.email IS DISTINCT FROM 'runscope-scheduled-test@dosomething.org'\nAND u_login.email IS DISTINCT FROM 'juy+runscopescheduledtests@dosomething.org'\nAND (u_login.email NOT ILIKE '%%@example.org%%' OR u_login.email IS NULL) \nUNION ALL \nSELECT\n    DISTINCT u.id AS northstar_id,\n    u.created_at AS \"timestamp\",\n    'account_creation' AS action, \n    '5' AS action_id,\n    u.\"source\" AS \"source\",\n    '0' AS action_serial_id, \n    (CASE WHEN u.\"source\" ILIKE '%%sms%%' THEN 'sms'\n    WHEN u.\"source\" ILIKE '%%phoenix%%' OR u.\"source\" IS NULL THEN 'web'\n    WHEN u.\"source\" ILIKE '%%niche%%' THEN 'niche_coregistration'\n    WHEN u.\"source\" NOT LIKE '%%niche%%' AND u.\"source\" NOT LIKE '%%sms%%' AND u.\"source\" NOT LIKE '%%phoenix%%' AND u.\"source\" IS NOT NULL THEN 'other' END) AS \"channel\"\nFROM\n    (SELECT \n            u_create.id,\n            max(u_create.\"source\") AS \"source\",\n            min(u_create.created_at) AS created_at\n    FROM northstar.users u_create\nWHERE u_create.\"source\" IS DISTINCT FROM 'importer-client'\nAND u_create.\"source\" IS DISTINCT FROM 'runscope'\nAND u_create.\"source\" IS DISTINCT FROM 'runscope-client'\nAND u_create.email IS DISTINCT FROM 'runscope-scheduled-test@dosomething.org'\nAND u_create.email IS DISTINCT FROM 'juy+runscopescheduledtests@dosomething.org'\nAND (u_create.email NOT ILIKE '%%@example.org%%' OR u_create.email IS NULL) \n    GROUP BY u_create.id) u\nUNION ALL \nSELECT\n    DISTINCT g.user_id AS northstar_id,\n    g.created_at AS \"timestamp\",\n    'messaged_gambit' AS \"action\", \n    '6' AS action_id,\n    'SMS' AS \"source\",\n    g.message_id AS action_serial_id,\n    'sms' AS \"channel\"\nFROM\n    \"quasar_prod_warehouse\".\"public\".\"gambit_messages_inbound\" g\nWHERE \n\tg.user_id IS NOT NULL\n\tAND g.macro <> 'subscriptionStatusStop' \nUNION ALL \n    SELECT\n        DISTINCT cio.customer_id AS northstar_id,\n        cio.\"timestamp\" AS \"timestamp\",\n        'clicked_link' AS \"action\",\n        '7' AS action_id,\n        cio.template_id::CHARACTER AS \"source\",\n        cio.event_id AS action_serial_id, \n        'email' AS \"channel\"\n    FROM\n        cio.email_event cio\n    WHERE \n        cio.event_type = 'email_clicked'\n    AND cio.customer_id IS NOT NULL\nUNION ALL \nSELECT DISTINCT\n    b.northstar_id AS northstar_id,\n    b.click_time AS \"timestamp\",\n    CONCAT('bertly_link_', b.interaction_type) AS \"action\",\n    '10' AS action_id,\n    'bertly' AS \"source\",\n    b.click_id AS action_serial_id,\n    b.\"source\" AS \"channel\"\nFROM \"quasar_prod_warehouse\".\"public\".\"bertly_clicks\" b\nINNER JOIN \"quasar_prod_warehouse\".\"public\".\"users\" u\nON b.northstar_id = u.northstar_id\nWHERE b.northstar_id IS NOT NULL\nAND b.interaction_type IS DISTINCT FROM 'preview'\n) AS a\nLEFT JOIN \"quasar_prod_warehouse\".\"public\".\"users\" u ON u.northstar_id = a.northstar_id", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "SELECT\n    MD5(concat(a.northstar_id, a.\"timestamp\", a.action_id, a.action_serial_id)) AS event_id,\n    a.northstar_id AS northstar_id,\n    a.\"timestamp\" AS \"timestamp\",\n    a.\"action\" AS action_type,\n    a.action_id AS action_id,\n    a.\"source\" AS \"source\",\n    a.action_serial_id AS action_serial_id,\n    a.channel AS channel,\n    CASE \n    \tWHEN date_trunc('month', a.\"timestamp\") = date_trunc('month', u.created_at) \n    \tTHEN 'New' \n    \tELSE 'Returning' END \n    \tAS \"type\",\n    MIN(\"timestamp\") \n    \tOVER \n    \t(PARTITION BY a.northstar_id, date_trunc('month', a.\"timestamp\")) \n    \tAS first_action_month\nFROM ( \nSELECT\n    DISTINCT s.northstar_id AS northstar_id,\n    s.created_at AS \"timestamp\",\n    'signup' AS \"action\",\n    '1' AS action_id, \n    s.\"source\" AS \"source\",\n    s.id::varchar AS action_serial_id,\n(CASE WHEN s.\"source\" ILIKE '%%sms%%' THEN 'sms'\nWHEN s.\"source\" NOT LIKE '%%sms%%'AND s.\"source\" NOT LIKE '%%email%%' AND s.\"source\" NOT LIKE '%%niche%%' OR s.\"source\" IN ('rock-the-vote', 'turbovote') THEN 'web'\nWHEN s.\"source\" ILIKE '%%email%%' THEN 'email'\nWHEN s.\"source\" ILIKE '%%niche%%' THEN 'niche_coregistration'\nWHEN s.\"source\" NOT LIKE '%%sms%%'AND s.\"source\" NOT LIKE '%%email%%' AND s.\"source\" NOT LIKE '%%niche%%' AND s.\"source\" NOT IN ('rock-the-vote', 'turbovote') AND s.\"source\" IS NOT NULL THEN 'other' END) AS \"channel\"\nFROM \"quasar_prod_warehouse\".\"public\".\"signups\" s\nWHERE s.\"source\" IS DISTINCT FROM 'importer-client'\nAND s.\"source\" IS DISTINCT FROM 'rock-the-vote'\nAND s.\"source\" IS DISTINCT FROM 'turbovote'\nUNION ALL\nSELECT\n    DISTINCT p.northstar_id AS northstar_id,\n    p.created_at AS \"timestamp\",\n    'post' AS \"action\",\n    '2' AS action_id,\n    p.\"source\" AS \"source\",\n    p.id::varchar AS action_serial_id,\n(CASE WHEN p.\"source\" ILIKE '%%sms%%' THEN 'sms'\nWHEN p.\"source\" ILIKE '%%phoenix%%' OR p.\"source\" IS NULL OR p.\"source\" ILIKE '%%turbovote%%' THEN 'web'\nWHEN p.\"source\" ILIKE '%%app%%' THEN 'mobile_app'\nWHEN p.\"source\" NOT LIKE '%%phoenix%%' AND p.\"source\" NOT LIKE '%%sms%%' AND p.\"source\" IS NOT NULL AND p.\"source\" NOT LIKE '%%app%%' AND p.\"source\" NOT LIKE '%%turbovote%%' THEN 'other' END) AS \"channel\"\nFROM \"quasar_prod_warehouse\".\"public\".\"posts\" p\nWHERE p.status IN ('accepted', 'confirmed', 'register-OVR', 'register-form', 'pending')\nUNION ALL\nSELECT DISTINCT \n    u_access.id AS northstar_id,\n    u_access.last_accessed_at AS \"timestamp\",\n    'site_access' AS \"action\",\n    '3' AS action_id,\n    NULL AS \"source\",\n    '0' AS action_serial_id,\n    'web' AS channel\nFROM northstar.users u_access\nWHERE u_access.last_accessed_at IS NOT NULL\nAND u_access.\"source\" IS DISTINCT FROM 'runscope'\nAND u_access.\"source\" IS DISTINCT FROM 'runscope-client'\nAND u_access.email IS DISTINCT FROM 'runscope-scheduled-test@dosomething.org'\nAND u_access.email IS DISTINCT FROM 'juy+runscopescheduledtests@dosomething.org'\nAND (u_access.email NOT ILIKE '%%@example.org%%' OR u_access.email IS NULL) \nUNION ALL\nSELECT DISTINCT \n    u_login.id AS northstar_id,\n    u_login.last_authenticated_at AS \"timestamp\",\n    'site_login' AS \"action\",\n    '4' AS action_id,\n    NULL AS \"source\",\n    '0' AS action_serial_id,\n    'web' AS channel\nFROM northstar.users u_login\nWHERE u_login.last_authenticated_at IS NOT NULL \nAND u_login.\"source\" IS DISTINCT FROM 'runscope'\nAND u_login.\"source\" IS DISTINCT FROM 'runscope-client'\nAND u_login.email IS DISTINCT FROM 'runscope-scheduled-test@dosomething.org'\nAND u_login.email IS DISTINCT FROM 'juy+runscopescheduledtests@dosomething.org'\nAND (u_login.email NOT ILIKE '%%@example.org%%' OR u_login.email IS NULL) \nUNION ALL \nSELECT\n    DISTINCT u.id AS northstar_id,\n    u.created_at AS \"timestamp\",\n    'account_creation' AS action, \n    '5' AS action_id,\n    u.\"source\" AS \"source\",\n    '0' AS action_serial_id, \n    (CASE WHEN u.\"source\" ILIKE '%%sms%%' THEN 'sms'\n    WHEN u.\"source\" ILIKE '%%phoenix%%' OR u.\"source\" IS NULL THEN 'web'\n    WHEN u.\"source\" ILIKE '%%niche%%' THEN 'niche_coregistration'\n    WHEN u.\"source\" NOT LIKE '%%niche%%' AND u.\"source\" NOT LIKE '%%sms%%' AND u.\"source\" NOT LIKE '%%phoenix%%' AND u.\"source\" IS NOT NULL THEN 'other' END) AS \"channel\"\nFROM\n    (SELECT \n            u_create.id,\n            max(u_create.\"source\") AS \"source\",\n            min(u_create.created_at) AS created_at\n    FROM northstar.users u_create\nWHERE u_create.\"source\" IS DISTINCT FROM 'importer-client'\nAND u_create.\"source\" IS DISTINCT FROM 'runscope'\nAND u_create.\"source\" IS DISTINCT FROM 'runscope-client'\nAND u_create.email IS DISTINCT FROM 'runscope-scheduled-test@dosomething.org'\nAND u_create.email IS DISTINCT FROM 'juy+runscopescheduledtests@dosomething.org'\nAND (u_create.email NOT ILIKE '%%@example.org%%' OR u_create.email IS NULL) \n    GROUP BY u_create.id) u\nUNION ALL \nSELECT\n    DISTINCT g.user_id AS northstar_id,\n    g.created_at AS \"timestamp\",\n    'messaged_gambit' AS \"action\", \n    '6' AS action_id,\n    'SMS' AS \"source\",\n    g.message_id AS action_serial_id,\n    'sms' AS \"channel\"\nFROM\n    \"quasar_prod_warehouse\".\"public\".\"gambit_messages_inbound\" g\nWHERE \n\tg.user_id IS NOT NULL\n\tAND g.macro <> 'subscriptionStatusStop' \nUNION ALL \n    SELECT\n        DISTINCT cio.customer_id AS northstar_id,\n        cio.\"timestamp\" AS \"timestamp\",\n        'clicked_link' AS \"action\",\n        '7' AS action_id,\n        cio.template_id::CHARACTER AS \"source\",\n        cio.event_id AS action_serial_id, \n        'email' AS \"channel\"\n    FROM\n        cio.email_event cio\n    WHERE \n        cio.event_type = 'email_clicked'\n    AND cio.customer_id IS NOT NULL\nUNION ALL \nSELECT DISTINCT\n    b.northstar_id AS northstar_id,\n    b.click_time AS \"timestamp\",\n    CONCAT('bertly_link_', b.interaction_type) AS \"action\",\n    '10' AS action_id,\n    'bertly' AS \"source\",\n    b.click_id AS action_serial_id,\n    b.\"source\" AS \"channel\"\nFROM \"quasar_prod_warehouse\".\"public\".\"bertly_clicks\" b\nINNER JOIN \"quasar_prod_warehouse\".\"public\".\"users\" u\nON b.northstar_id = u.northstar_id\nWHERE b.northstar_id IS NOT NULL\nAND b.interaction_type IS DISTINCT FROM 'preview'\n) AS a\nLEFT JOIN \"quasar_prod_warehouse\".\"public\".\"users\" u ON u.northstar_id = a.northstar_id", "wrapped_sql": "None", "build_path": "../../docs/compiled/ds_dbt/member_event_log/member_event_log.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.015863895416259766, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:36.518707Z", "completed_at": "2019-11-19T20:10:36.529333Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:36.529553Z", "completed_at": "2019-11-19T20:10:36.532579Z"}]}, {"node": {"name": "relationships_snowplow_base_event_northstar_id__id__ref_users_", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/relationships_snowplow_base_event_northstar_id__id__ref_users_.sql", "original_file_path": "models/phoenix_events/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_relationships(model=ref('snowplow_base_event'), column_name='northstar_id', field='id', to=ref('users')) }}", "refs": [["snowplow_base_event"], ["users"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.snowplow_base_event", "model.ds_dbt.users"], "macros": []}, "unique_id": "test.ds_dbt.relationships_snowplow_base_event_northstar_id__id__ref_users_", "empty": false, "fqn": ["ds_dbt", "schema_test", "relationships_snowplow_base_event_northstar_id__id__ref_users_"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "relationships_snowplow_base_event_northstar_id__id__ref_users_", "column_name": "northstar_id", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\n\nselect count(*)\nfrom (\n    select northstar_id as id from \"quasar_prod_warehouse\".\"public\".\"snowplow_base_event\"\n) as child\nleft join (\n    select id as id from \"quasar_prod_warehouse\".\"public\".\"users\"\n) as parent on parent.id = child.id\nwhere child.id is not null\n  and parent.id is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\n\nselect count(*)\nfrom (\n    select northstar_id as id from \"quasar_prod_warehouse\".\"public\".\"snowplow_base_event\"\n) as child\nleft join (\n    select id as id from \"quasar_prod_warehouse\".\"public\".\"users\"\n) as parent on parent.id = child.id\nwhere child.id is not null\n  and parent.id is null\n\n", "wrapped_sql": "\n\n\n\n\nselect count(*)\nfrom (\n    select northstar_id as id from \"quasar_prod_warehouse\".\"public\".\"snowplow_base_event\"\n) as child\nleft join (\n    select id as id from \"quasar_prod_warehouse\".\"public\".\"users\"\n) as parent on parent.id = child.id\nwhere child.id is not null\n  and parent.id is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/relationships_snowplow_base_event_northstar_id__id__ref_users_.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.013602256774902344, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:36.539455Z", "completed_at": "2019-11-19T20:10:36.547400Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:36.547549Z", "completed_at": "2019-11-19T20:10:36.548986Z"}]}, {"node": {"name": "relationships_snowplow_raw_events_northstar_id__id__ref_users_", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/relationships_snowplow_raw_events_northstar_id__id__ref_users_.sql", "original_file_path": "models/phoenix_events/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_relationships(model=ref('snowplow_raw_events'), column_name='northstar_id', field='id', to=ref('users')) }}", "refs": [["snowplow_raw_events"], ["users"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.snowplow_raw_events", "model.ds_dbt.users"], "macros": []}, "unique_id": "test.ds_dbt.relationships_snowplow_raw_events_northstar_id__id__ref_users_", "empty": false, "fqn": ["ds_dbt", "schema_test", "relationships_snowplow_raw_events_northstar_id__id__ref_users_"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "relationships_snowplow_raw_events_northstar_id__id__ref_users_", "column_name": "northstar_id", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\n\nselect count(*)\nfrom (\n    select northstar_id as id from \"quasar_prod_warehouse\".\"public\".\"snowplow_raw_events\"\n) as child\nleft join (\n    select id as id from \"quasar_prod_warehouse\".\"public\".\"users\"\n) as parent on parent.id = child.id\nwhere child.id is not null\n  and parent.id is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\n\nselect count(*)\nfrom (\n    select northstar_id as id from \"quasar_prod_warehouse\".\"public\".\"snowplow_raw_events\"\n) as child\nleft join (\n    select id as id from \"quasar_prod_warehouse\".\"public\".\"users\"\n) as parent on parent.id = child.id\nwhere child.id is not null\n  and parent.id is null\n\n", "wrapped_sql": "\n\n\n\n\nselect count(*)\nfrom (\n    select northstar_id as id from \"quasar_prod_warehouse\".\"public\".\"snowplow_raw_events\"\n) as child\nleft join (\n    select id as id from \"quasar_prod_warehouse\".\"public\".\"users\"\n) as parent on parent.id = child.id\nwhere child.id is not null\n  and parent.id is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/relationships_snowplow_raw_events_northstar_id__id__ref_users_.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.00989985466003418, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:36.550997Z", "completed_at": "2019-11-19T20:10:36.558959Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:36.559128Z", "completed_at": "2019-11-19T20:10:36.560313Z"}]}, {"node": {"name": "snowplow_sessions", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "resource_type": "model", "path": "phoenix_events/snowplow_sessions.sql", "original_file_path": "models/phoenix_events/snowplow_sessions.sql", "package_name": "ds_dbt", "raw_sql": "WITH sessions AS (\nSELECT\n    session_id,\n    min(device_id) AS device_id,\n    min(event_datetime) AS landing_datetime,\n    max(event_datetime) AS ending_datetime,\n    date_part(\n\t'seconds', max(event_datetime) - min(event_datetime)\n    ) AS session_duration_seconds,\n    count(DISTINCT CASE WHEN event_name = 'view' THEN \"path\" END) AS num_pages_viewed\nFROM {{ ref('snowplow_phoenix_events') }}\nGROUP BY session_id\n),\nentry_exit_pages AS (\nSELECT DISTINCT\n    session_id,\n    first_value(\"path\") OVER (PARTITION BY session_id ORDER BY event_datetime \n\tROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS landing_page,\n    first_value(event_id) OVER (PARTITION BY session_id ORDER BY event_datetime \n\tROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS event_id,\n    last_value(\"path\") OVER (PARTITION BY session_id ORDER BY event_datetime \n\tROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS exit_page\nFROM {{ ref('snowplow_phoenix_events') }}\n),\ntime_between_sessions AS (\nSELECT DISTINCT\n    device_id,\n    session_id,\n    LAG(ending_datetime) OVER (PARTITION BY device_id ORDER BY landing_datetime\n\tROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING\n    ) AS prev_session_endtime\nFROM sessions\n)\nSELECT\ns.session_id,\np.event_id,\ns.device_id,\ns.landing_datetime,\ns.ending_datetime,\ns.session_duration_seconds,\ns.num_pages_viewed,\np.landing_page,\np.exit_page,\ndate_part('day', s.landing_datetime - t.prev_session_endtime) AS days_since_last_session\nFROM sessions s\nLEFT JOIN entry_exit_pages p\nON p.session_id = s.session_id\nLEFT JOIN time_between_sessions t\nON t.session_id = s.session_id", "refs": [["snowplow_phoenix_events"], ["snowplow_phoenix_events"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.snowplow_phoenix_events", "model.ds_dbt.snowplow_phoenix_events"], "macros": []}, "unique_id": "model.ds_dbt.snowplow_sessions", "empty": false, "fqn": ["ds_dbt", "phoenix_events", "snowplow_sessions"], "tags": [], "config": {"enabled": true, "materialized": "table", "pre-hook": [], "tags": [], "post-hook": [{"sql": "CREATE INDEX IF NOT EXISTS sps_landing ON {{ this }}(landing_datetime, landing_page)", "transaction": true, "index": 0}, {"sql": "GRANT SELECT ON {{ this }} TO looker", "transaction": true, "index": 1}, {"sql": "GRANT SELECT ON {{ this }} TO dsanalyst", "transaction": true, "index": 2}], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "snowplow_sessions", "columns": {"session_id": {"name": "session_id", "description": "Unique identifier of the user's session"}, "event_id": {"name": "event_id", "description": "This is a unique identifier for each event"}, "device_id": {"name": "device_id", "description": "ID of the device used"}, "landing_datetime": {"name": "landing_datetime", "description": "When the session started in UTC (eg. 2018-01-01 12:00:00)"}, "ending_datetime": {"name": "ending_datetime", "description": "When the session ended in UTC (eg. 2018-01-01 12:00:00)"}, "session_duration_seconds": {"name": "session_duration_seconds", "description": "Session duration in seconds"}, "num_pages_views": {"name": "num_pages_views", "description": "Number of pages viewed in session"}, "landing_page": {"name": "landing_page", "description": "First page the user viewed in the session (eg. /us/facts/11-facts-about-bp-oil-spill)"}, "exit_page": {"name": "exit_page", "description": "\"Which page the user ended or exited their session from (eg. /us/campaigns/green-your-getaway)\""}, "days_since_last_session": {"name": "days_since_last_session", "description": "\"Days since their last session.\""}}, "description": "Table containing user session data derived from snowplow_phoenix_events", "patch_path": "models/phoenix_events/schema.yml", "docrefs": [{"documentation_package": "", "documentation_name": "session_id", "column_name": "session_id"}, {"documentation_package": "", "documentation_name": "event_id", "column_name": "event_id"}, {"documentation_package": "", "documentation_name": "device_id", "column_name": "device_id"}, {"documentation_package": "", "documentation_name": "landing_datetime", "column_name": "landing_datetime"}, {"documentation_package": "", "documentation_name": "ending_datetime", "column_name": "ending_datetime"}, {"documentation_package": "", "documentation_name": "session_duration_seconds", "column_name": "session_duration_seconds"}, {"documentation_package": "", "documentation_name": "num_pages_views", "column_name": "num_pages_views"}, {"documentation_package": "", "documentation_name": "landing_page", "column_name": "landing_page"}, {"documentation_package": "", "documentation_name": "exit_page", "column_name": "exit_page"}, {"documentation_package": "", "documentation_name": "days_since_last_session", "column_name": "days_since_last_session"}], "compiled": true, "compiled_sql": "WITH sessions AS (\nSELECT\n    session_id,\n    min(device_id) AS device_id,\n    min(event_datetime) AS landing_datetime,\n    max(event_datetime) AS ending_datetime,\n    date_part(\n\t'seconds', max(event_datetime) - min(event_datetime)\n    ) AS session_duration_seconds,\n    count(DISTINCT CASE WHEN event_name = 'view' THEN \"path\" END) AS num_pages_viewed\nFROM \"quasar_prod_warehouse\".\"public\".\"snowplow_phoenix_events\"\nGROUP BY session_id\n),\nentry_exit_pages AS (\nSELECT DISTINCT\n    session_id,\n    first_value(\"path\") OVER (PARTITION BY session_id ORDER BY event_datetime \n\tROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS landing_page,\n    first_value(event_id) OVER (PARTITION BY session_id ORDER BY event_datetime \n\tROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS event_id,\n    last_value(\"path\") OVER (PARTITION BY session_id ORDER BY event_datetime \n\tROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS exit_page\nFROM \"quasar_prod_warehouse\".\"public\".\"snowplow_phoenix_events\"\n),\ntime_between_sessions AS (\nSELECT DISTINCT\n    device_id,\n    session_id,\n    LAG(ending_datetime) OVER (PARTITION BY device_id ORDER BY landing_datetime\n\tROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING\n    ) AS prev_session_endtime\nFROM sessions\n)\nSELECT\ns.session_id,\np.event_id,\ns.device_id,\ns.landing_datetime,\ns.ending_datetime,\ns.session_duration_seconds,\ns.num_pages_viewed,\np.landing_page,\np.exit_page,\ndate_part('day', s.landing_datetime - t.prev_session_endtime) AS days_since_last_session\nFROM sessions s\nLEFT JOIN entry_exit_pages p\nON p.session_id = s.session_id\nLEFT JOIN time_between_sessions t\nON t.session_id = s.session_id", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "WITH sessions AS (\nSELECT\n    session_id,\n    min(device_id) AS device_id,\n    min(event_datetime) AS landing_datetime,\n    max(event_datetime) AS ending_datetime,\n    date_part(\n\t'seconds', max(event_datetime) - min(event_datetime)\n    ) AS session_duration_seconds,\n    count(DISTINCT CASE WHEN event_name = 'view' THEN \"path\" END) AS num_pages_viewed\nFROM \"quasar_prod_warehouse\".\"public\".\"snowplow_phoenix_events\"\nGROUP BY session_id\n),\nentry_exit_pages AS (\nSELECT DISTINCT\n    session_id,\n    first_value(\"path\") OVER (PARTITION BY session_id ORDER BY event_datetime \n\tROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS landing_page,\n    first_value(event_id) OVER (PARTITION BY session_id ORDER BY event_datetime \n\tROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS event_id,\n    last_value(\"path\") OVER (PARTITION BY session_id ORDER BY event_datetime \n\tROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS exit_page\nFROM \"quasar_prod_warehouse\".\"public\".\"snowplow_phoenix_events\"\n),\ntime_between_sessions AS (\nSELECT DISTINCT\n    device_id,\n    session_id,\n    LAG(ending_datetime) OVER (PARTITION BY device_id ORDER BY landing_datetime\n\tROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING\n    ) AS prev_session_endtime\nFROM sessions\n)\nSELECT\ns.session_id,\np.event_id,\ns.device_id,\ns.landing_datetime,\ns.ending_datetime,\ns.session_duration_seconds,\ns.num_pages_viewed,\np.landing_page,\np.exit_page,\ndate_part('day', s.landing_datetime - t.prev_session_endtime) AS days_since_last_session\nFROM sessions s\nLEFT JOIN entry_exit_pages p\nON p.session_id = s.session_id\nLEFT JOIN time_between_sessions t\nON t.session_id = s.session_id", "wrapped_sql": "None", "build_path": "../../docs/compiled/ds_dbt/phoenix_events/snowplow_sessions.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.011238813400268555, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:36.563343Z", "completed_at": "2019-11-19T20:10:36.570469Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:36.570625Z", "completed_at": "2019-11-19T20:10:36.572831Z"}]}, {"node": {"name": "phoenix_events_combined", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "resource_type": "model", "path": "phoenix_events/phoenix_events_combined.sql", "original_file_path": "models/phoenix_events/phoenix_events_combined.sql", "package_name": "ds_dbt", "raw_sql": "SELECT\n    p.event_id,\n    p.event_datetime,\n    p.event_name,\n    p.event_source,\n    p.\"path\",\n    p.\"host\",\n    NULL AS query_parameters,\n    NULL AS clicked_link_url,\n    p.page_utm_source,\n    p.page_utm_medium,\n    p.page_utm_campaign,\n    p.referrer_host,\n    p.referrer_path,\n    p.referrer_source,\n    p.campaign_id,\n    p.campaign_name,\n    p.modal_type,\n    NULL AS search_query,\n    p.session_id,\n    p.browser_size,\n    p.northstar_id,\n    p.device_id\nFROM\n    public.puck_phoenix_events p\nUNION ALL\nSELECT\n    s.event_id,\n    s.event_datetime,\n    s.event_name,\n    s.event_source,\n    s.\"path\",\n    s.\"host\",\n    s.query_parameters,\n    s.clicked_link_url,\n    s.page_utm_source,\n    s.page_utm_medium,\n    s.page_utm_campaign,\n    s.referrer_host,\n    s.referrer_path,\n    s.referrer_source,\n    s.campaign_id,\n    s.campaign_name,\n    s.modal_type,\n    s.search_query,\n    s.session_id,\n    s.browser_size,\n    s.northstar_id,\n    s.device_id\nFROM\n    {{ ref('snowplow_phoenix_events') }} s", "refs": [["snowplow_phoenix_events"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.snowplow_phoenix_events"], "macros": []}, "unique_id": "model.ds_dbt.phoenix_events_combined", "empty": false, "fqn": ["ds_dbt", "phoenix_events", "phoenix_events_combined"], "tags": [], "config": {"enabled": true, "materialized": "table", "pre-hook": [], "tags": [], "post-hook": [{"sql": "CREATE UNIQUE INDEX IF NOT EXISTS pec_unique ON {{ this }}(event_datetime, event_name, event_id)", "transaction": true, "index": 0}, {"sql": "CREATE INDEX IF NOT EXISTS pec_session_id ON {{ this }} (session_id)", "transaction": true, "index": 1}, {"sql": "GRANT SELECT ON {{ this }} TO looker", "transaction": true, "index": 2}, {"sql": "GRANT SELECT ON {{ this }} TO dsanalyst", "transaction": true, "index": 3}], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}, "alias": "phoenix_events_combined"}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "phoenix_events_combined", "columns": {"event_id": {"name": "event_id", "description": "This is a unique identifier for each event"}, "event_datetime": {"name": "event_datetime", "description": "When the event occurred in UTC (eg. 2018-01-01 12:00:00)"}, "event_name": {"name": "event_name", "description": "Name of the event (eg. northstar_submitted_register, https://docs.google.com/spreadsheets/d/1lm-fGrIm85nUTxSojqyCt_Ehmm1zEbViFhKpxcJiz1A/edit#gid=406441516)"}, "event_source": {"name": "event_source", "description": "Application source for event (eg. Phoenix, Northstar)"}, "path": {"name": "path", "description": "URL path event occurred at (eg. /login or /us/campaigns/huddle-for-heroes)"}, "host": {"name": "host", "description": "URL host where event occurred (eg. www.dosomething.org or identity.dosomething.org)"}, "query_parameters": {"name": "query_parameters", "description": "Optional query parameters for the request (eg. query=huddle)"}, "clicked_link_url": {"name": "clicked_link_url", "description": "URL of campaign (eg. https://dosome.click/nyn5m7)"}, "page_utm_source": {"name": "page_utm_source", "description": "Tracks where the traffic is coming from. (eg. scholarship_listing, Facebook)"}, "page_utm_medium": {"name": "page_utm_medium", "description": "How the traffic got to the platform (eg. referral, CPC)"}, "page_utm_campaign": {"name": "page_utm_campaign", "description": "Tracks which campaign the traffic was generated by. Shows up in Google Analytics as Campaign Name (eg. editorial_newsletter)"}, "referrer_host": {"name": "referrer_host", "description": "URL host of the referring site (eg. google.com)"}, "referrer_path": {"name": "referrer_path", "description": "URL path from referring site (eg. /10-stats-on-teen-drug-and-alcohol-use/)"}, "referrer_source": {"name": "referrer_source", "description": "Referrer source name (eg. Google, Facebook)"}, "campaign_id": {"name": "campaign_id", "description": "Internal campaign id from contentful"}, "campaign_name": {"name": "campaign_name", "description": "Name of campaign"}, "modal_type": {"name": "modal_type", "description": "NULL or SURVEY_MODAL"}, "session_id": {"name": "session_id", "description": "Unique identifier of the user's session"}, "browser_size": {"name": "browser_size", "description": "Which type of browser a user is using (eg. Mobile, Desktop)"}, "northstar_id": {"name": "northstar_id", "description": "The Northstar ID of the user who generated the event"}, "device_id": {"name": "device_id", "description": "ID of the device used"}}, "description": "Table combining Snowplow based web event data with legacy Puck data based on 7/12/2019 cutover date", "patch_path": "models/phoenix_events/schema.yml", "docrefs": [{"documentation_package": "", "documentation_name": "event_id", "column_name": "event_id"}, {"documentation_package": "", "documentation_name": "event_datetime", "column_name": "event_datetime"}, {"documentation_package": "", "documentation_name": "event_name", "column_name": "event_name"}, {"documentation_package": "", "documentation_name": "event_source", "column_name": "event_source"}, {"documentation_package": "", "documentation_name": "path", "column_name": "path"}, {"documentation_package": "", "documentation_name": "host", "column_name": "host"}, {"documentation_package": "", "documentation_name": "query_parameters", "column_name": "query_parameters"}, {"documentation_package": "", "documentation_name": "url", "column_name": "clicked_link_url"}, {"documentation_package": "", "documentation_name": "utm_source", "column_name": "page_utm_source"}, {"documentation_package": "", "documentation_name": "utm_medium", "column_name": "page_utm_medium"}, {"documentation_package": "", "documentation_name": "utm_campaign", "column_name": "page_utm_campaign"}, {"documentation_package": "", "documentation_name": "referrer_host", "column_name": "referrer_host"}, {"documentation_package": "", "documentation_name": "referrer_path", "column_name": "referrer_path"}, {"documentation_package": "", "documentation_name": "referrer_source", "column_name": "referrer_source"}, {"documentation_package": "", "documentation_name": "modal_type", "column_name": "modal_type"}, {"documentation_package": "", "documentation_name": "session_id", "column_name": "session_id"}, {"documentation_package": "", "documentation_name": "browser_size", "column_name": "browser_size"}, {"documentation_package": "", "documentation_name": "northstar_id", "column_name": "northstar_id"}, {"documentation_package": "", "documentation_name": "device_id", "column_name": "device_id"}], "compiled": true, "compiled_sql": "SELECT\n    p.event_id,\n    p.event_datetime,\n    p.event_name,\n    p.event_source,\n    p.\"path\",\n    p.\"host\",\n    NULL AS query_parameters,\n    NULL AS clicked_link_url,\n    p.page_utm_source,\n    p.page_utm_medium,\n    p.page_utm_campaign,\n    p.referrer_host,\n    p.referrer_path,\n    p.referrer_source,\n    p.campaign_id,\n    p.campaign_name,\n    p.modal_type,\n    NULL AS search_query,\n    p.session_id,\n    p.browser_size,\n    p.northstar_id,\n    p.device_id\nFROM\n    public.puck_phoenix_events p\nUNION ALL\nSELECT\n    s.event_id,\n    s.event_datetime,\n    s.event_name,\n    s.event_source,\n    s.\"path\",\n    s.\"host\",\n    s.query_parameters,\n    s.clicked_link_url,\n    s.page_utm_source,\n    s.page_utm_medium,\n    s.page_utm_campaign,\n    s.referrer_host,\n    s.referrer_path,\n    s.referrer_source,\n    s.campaign_id,\n    s.campaign_name,\n    s.modal_type,\n    s.search_query,\n    s.session_id,\n    s.browser_size,\n    s.northstar_id,\n    s.device_id\nFROM\n    \"quasar_prod_warehouse\".\"public\".\"snowplow_phoenix_events\" s", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "SELECT\n    p.event_id,\n    p.event_datetime,\n    p.event_name,\n    p.event_source,\n    p.\"path\",\n    p.\"host\",\n    NULL AS query_parameters,\n    NULL AS clicked_link_url,\n    p.page_utm_source,\n    p.page_utm_medium,\n    p.page_utm_campaign,\n    p.referrer_host,\n    p.referrer_path,\n    p.referrer_source,\n    p.campaign_id,\n    p.campaign_name,\n    p.modal_type,\n    NULL AS search_query,\n    p.session_id,\n    p.browser_size,\n    p.northstar_id,\n    p.device_id\nFROM\n    public.puck_phoenix_events p\nUNION ALL\nSELECT\n    s.event_id,\n    s.event_datetime,\n    s.event_name,\n    s.event_source,\n    s.\"path\",\n    s.\"host\",\n    s.query_parameters,\n    s.clicked_link_url,\n    s.page_utm_source,\n    s.page_utm_medium,\n    s.page_utm_campaign,\n    s.referrer_host,\n    s.referrer_path,\n    s.referrer_source,\n    s.campaign_id,\n    s.campaign_name,\n    s.modal_type,\n    s.search_query,\n    s.session_id,\n    s.browser_size,\n    s.northstar_id,\n    s.device_id\nFROM\n    \"quasar_prod_warehouse\".\"public\".\"snowplow_phoenix_events\" s", "wrapped_sql": "None", "build_path": "../../docs/compiled/ds_dbt/phoenix_events/phoenix_events_combined.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.014190912246704102, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:36.578394Z", "completed_at": "2019-11-19T20:10:36.585735Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:36.585887Z", "completed_at": "2019-11-19T20:10:36.589301Z"}]}, {"node": {"name": "not_null_snowplow_phoenix_events_browser_size", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_snowplow_phoenix_events_browser_size.sql", "original_file_path": "models/phoenix_events/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('snowplow_phoenix_events'), column_name='browser_size') }}", "refs": [["snowplow_phoenix_events"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.snowplow_phoenix_events"], "macros": []}, "unique_id": "test.ds_dbt.not_null_snowplow_phoenix_events_browser_size", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_snowplow_phoenix_events_browser_size"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_snowplow_phoenix_events_browser_size", "column_name": "browser_size", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_phoenix_events\"\nwhere browser_size is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_phoenix_events\"\nwhere browser_size is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_phoenix_events\"\nwhere browser_size is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_snowplow_phoenix_events_browser_size.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.01527714729309082, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:36.597197Z", "completed_at": "2019-11-19T20:10:36.605266Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:36.605477Z", "completed_at": "2019-11-19T20:10:36.607702Z"}]}, {"node": {"name": "not_null_snowplow_phoenix_events_device_id", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_snowplow_phoenix_events_device_id.sql", "original_file_path": "models/phoenix_events/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('snowplow_phoenix_events'), column_name='device_id') }}", "refs": [["snowplow_phoenix_events"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.snowplow_phoenix_events"], "macros": []}, "unique_id": "test.ds_dbt.not_null_snowplow_phoenix_events_device_id", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_snowplow_phoenix_events_device_id"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_snowplow_phoenix_events_device_id", "column_name": "device_id", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_phoenix_events\"\nwhere device_id is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_phoenix_events\"\nwhere device_id is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_phoenix_events\"\nwhere device_id is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_snowplow_phoenix_events_device_id.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.013653039932250977, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:36.615328Z", "completed_at": "2019-11-19T20:10:36.622482Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:36.622731Z", "completed_at": "2019-11-19T20:10:36.625505Z"}]}, {"node": {"name": "not_null_snowplow_phoenix_events_event_datetime", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_snowplow_phoenix_events_event_datetime.sql", "original_file_path": "models/phoenix_events/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('snowplow_phoenix_events'), column_name='event_datetime') }}", "refs": [["snowplow_phoenix_events"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.snowplow_phoenix_events"], "macros": []}, "unique_id": "test.ds_dbt.not_null_snowplow_phoenix_events_event_datetime", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_snowplow_phoenix_events_event_datetime"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_snowplow_phoenix_events_event_datetime", "column_name": "event_datetime", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_phoenix_events\"\nwhere event_datetime is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_phoenix_events\"\nwhere event_datetime is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_phoenix_events\"\nwhere event_datetime is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_snowplow_phoenix_events_event_datetime.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.017313003540039062, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:36.632591Z", "completed_at": "2019-11-19T20:10:36.643076Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:36.643342Z", "completed_at": "2019-11-19T20:10:36.645971Z"}]}, {"node": {"name": "not_null_snowplow_phoenix_events_event_id", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_snowplow_phoenix_events_event_id.sql", "original_file_path": "models/phoenix_events/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('snowplow_phoenix_events'), column_name='event_id') }}", "refs": [["snowplow_phoenix_events"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.snowplow_phoenix_events"], "macros": []}, "unique_id": "test.ds_dbt.not_null_snowplow_phoenix_events_event_id", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_snowplow_phoenix_events_event_id"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_snowplow_phoenix_events_event_id", "column_name": "event_id", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_phoenix_events\"\nwhere event_id is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_phoenix_events\"\nwhere event_id is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_phoenix_events\"\nwhere event_id is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_snowplow_phoenix_events_event_id.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.01450204849243164, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:36.651404Z", "completed_at": "2019-11-19T20:10:36.660443Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:36.660663Z", "completed_at": "2019-11-19T20:10:36.662781Z"}]}, {"node": {"name": "not_null_snowplow_phoenix_events_event_source", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_snowplow_phoenix_events_event_source.sql", "original_file_path": "models/phoenix_events/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('snowplow_phoenix_events'), column_name='event_source') }}", "refs": [["snowplow_phoenix_events"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.snowplow_phoenix_events"], "macros": []}, "unique_id": "test.ds_dbt.not_null_snowplow_phoenix_events_event_source", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_snowplow_phoenix_events_event_source"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_snowplow_phoenix_events_event_source", "column_name": "event_source", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_phoenix_events\"\nwhere event_source is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_phoenix_events\"\nwhere event_source is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_phoenix_events\"\nwhere event_source is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_snowplow_phoenix_events_event_source.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.016649961471557617, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:36.670173Z", "completed_at": "2019-11-19T20:10:36.679782Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:36.680017Z", "completed_at": "2019-11-19T20:10:36.681643Z"}]}, {"node": {"name": "not_null_snowplow_phoenix_events_host", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_snowplow_phoenix_events_host.sql", "original_file_path": "models/phoenix_events/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('snowplow_phoenix_events'), column_name='host') }}", "refs": [["snowplow_phoenix_events"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.snowplow_phoenix_events"], "macros": []}, "unique_id": "test.ds_dbt.not_null_snowplow_phoenix_events_host", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_snowplow_phoenix_events_host"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_snowplow_phoenix_events_host", "column_name": "host", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_phoenix_events\"\nwhere host is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_phoenix_events\"\nwhere host is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_phoenix_events\"\nwhere host is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_snowplow_phoenix_events_host.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.015707969665527344, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:36.684326Z", "completed_at": "2019-11-19T20:10:36.696983Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:36.697292Z", "completed_at": "2019-11-19T20:10:36.699069Z"}]}, {"node": {"name": "not_null_snowplow_phoenix_events_path", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_snowplow_phoenix_events_path.sql", "original_file_path": "models/phoenix_events/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('snowplow_phoenix_events'), column_name='path') }}", "refs": [["snowplow_phoenix_events"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.snowplow_phoenix_events"], "macros": []}, "unique_id": "test.ds_dbt.not_null_snowplow_phoenix_events_path", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_snowplow_phoenix_events_path"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_snowplow_phoenix_events_path", "column_name": "path", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_phoenix_events\"\nwhere path is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_phoenix_events\"\nwhere path is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_phoenix_events\"\nwhere path is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_snowplow_phoenix_events_path.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.009962081909179688, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:36.702673Z", "completed_at": "2019-11-19T20:10:36.708957Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:36.709101Z", "completed_at": "2019-11-19T20:10:36.710347Z"}]}, {"node": {"name": "not_null_snowplow_phoenix_events_referrer_host", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_snowplow_phoenix_events_referrer_host.sql", "original_file_path": "models/phoenix_events/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('snowplow_phoenix_events'), column_name='referrer_host') }}", "refs": [["snowplow_phoenix_events"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.snowplow_phoenix_events"], "macros": []}, "unique_id": "test.ds_dbt.not_null_snowplow_phoenix_events_referrer_host", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_snowplow_phoenix_events_referrer_host"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_snowplow_phoenix_events_referrer_host", "column_name": "referrer_host", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_phoenix_events\"\nwhere referrer_host is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_phoenix_events\"\nwhere referrer_host is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_phoenix_events\"\nwhere referrer_host is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_snowplow_phoenix_events_referrer_host.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.011970758438110352, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:36.713282Z", "completed_at": "2019-11-19T20:10:36.721741Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:36.721944Z", "completed_at": "2019-11-19T20:10:36.723573Z"}]}, {"node": {"name": "not_null_snowplow_phoenix_events_referrer_path", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_snowplow_phoenix_events_referrer_path.sql", "original_file_path": "models/phoenix_events/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('snowplow_phoenix_events'), column_name='referrer_path') }}", "refs": [["snowplow_phoenix_events"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.snowplow_phoenix_events"], "macros": []}, "unique_id": "test.ds_dbt.not_null_snowplow_phoenix_events_referrer_path", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_snowplow_phoenix_events_referrer_path"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_snowplow_phoenix_events_referrer_path", "column_name": "referrer_path", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_phoenix_events\"\nwhere referrer_path is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_phoenix_events\"\nwhere referrer_path is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_phoenix_events\"\nwhere referrer_path is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_snowplow_phoenix_events_referrer_path.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.009100198745727539, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:36.727627Z", "completed_at": "2019-11-19T20:10:36.733020Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:36.733197Z", "completed_at": "2019-11-19T20:10:36.734591Z"}]}, {"node": {"name": "not_null_snowplow_phoenix_events_session_id", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_snowplow_phoenix_events_session_id.sql", "original_file_path": "models/phoenix_events/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('snowplow_phoenix_events'), column_name='session_id') }}", "refs": [["snowplow_phoenix_events"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.snowplow_phoenix_events"], "macros": []}, "unique_id": "test.ds_dbt.not_null_snowplow_phoenix_events_session_id", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_snowplow_phoenix_events_session_id"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_snowplow_phoenix_events_session_id", "column_name": "session_id", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_phoenix_events\"\nwhere session_id is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_phoenix_events\"\nwhere session_id is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_phoenix_events\"\nwhere session_id is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_snowplow_phoenix_events_session_id.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.010685920715332031, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:36.738283Z", "completed_at": "2019-11-19T20:10:36.744995Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:36.745277Z", "completed_at": "2019-11-19T20:10:36.746527Z"}]}, {"node": {"name": "relationships_snowplow_phoenix_events_northstar_id__id__ref_users_", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/relationships_snowplow_phoenix_events_northstar_id__id__ref_users_.sql", "original_file_path": "models/phoenix_events/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_relationships(model=ref('snowplow_phoenix_events'), column_name='northstar_id', field='id', to=ref('users')) }}", "refs": [["snowplow_phoenix_events"], ["users"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.snowplow_phoenix_events", "model.ds_dbt.users"], "macros": []}, "unique_id": "test.ds_dbt.relationships_snowplow_phoenix_events_northstar_id__id__ref_users_", "empty": false, "fqn": ["ds_dbt", "schema_test", "relationships_snowplow_phoenix_events_northstar_id__id__ref_users_"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "relationships_snowplow_phoenix_events_northstar_id__id__ref_users_", "column_name": "northstar_id", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\n\nselect count(*)\nfrom (\n    select northstar_id as id from \"quasar_prod_warehouse\".\"public\".\"snowplow_phoenix_events\"\n) as child\nleft join (\n    select id as id from \"quasar_prod_warehouse\".\"public\".\"users\"\n) as parent on parent.id = child.id\nwhere child.id is not null\n  and parent.id is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\n\nselect count(*)\nfrom (\n    select northstar_id as id from \"quasar_prod_warehouse\".\"public\".\"snowplow_phoenix_events\"\n) as child\nleft join (\n    select id as id from \"quasar_prod_warehouse\".\"public\".\"users\"\n) as parent on parent.id = child.id\nwhere child.id is not null\n  and parent.id is null\n\n", "wrapped_sql": "\n\n\n\n\nselect count(*)\nfrom (\n    select northstar_id as id from \"quasar_prod_warehouse\".\"public\".\"snowplow_phoenix_events\"\n) as child\nleft join (\n    select id as id from \"quasar_prod_warehouse\".\"public\".\"users\"\n) as parent on parent.id = child.id\nwhere child.id is not null\n  and parent.id is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/relationships_snowplow_phoenix_events_northstar_id__id__ref_users_.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.013247966766357422, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:36.750667Z", "completed_at": "2019-11-19T20:10:36.759570Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:36.759732Z", "completed_at": "2019-11-19T20:10:36.761104Z"}]}, {"node": {"name": "unique_snowplow_phoenix_events_event_id", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/unique_snowplow_phoenix_events_event_id.sql", "original_file_path": "models/phoenix_events/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_unique(model=ref('snowplow_phoenix_events'), column_name='event_id') }}", "refs": [["snowplow_phoenix_events"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.snowplow_phoenix_events"], "macros": []}, "unique_id": "test.ds_dbt.unique_snowplow_phoenix_events_event_id", "empty": false, "fqn": ["ds_dbt", "schema_test", "unique_snowplow_phoenix_events_event_id"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "unique_snowplow_phoenix_events_event_id", "column_name": "event_id", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        event_id\n\n    from \"quasar_prod_warehouse\".\"public\".\"snowplow_phoenix_events\"\n    where event_id is not null\n    group by event_id\n    having count(*) > 1\n\n) validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        event_id\n\n    from \"quasar_prod_warehouse\".\"public\".\"snowplow_phoenix_events\"\n    where event_id is not null\n    group by event_id\n    having count(*) > 1\n\n) validation_errors\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        event_id\n\n    from \"quasar_prod_warehouse\".\"public\".\"snowplow_phoenix_events\"\n    where event_id is not null\n    group by event_id\n    having count(*) > 1\n\n) validation_errors\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/unique_snowplow_phoenix_events_event_id.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.009766101837158203, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:36.765003Z", "completed_at": "2019-11-19T20:10:36.770921Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:36.771123Z", "completed_at": "2019-11-19T20:10:36.772381Z"}]}, {"node": {"name": "unique_snowplow_phoenix_events_event_source", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/unique_snowplow_phoenix_events_event_source.sql", "original_file_path": "models/phoenix_events/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_unique(model=ref('snowplow_phoenix_events'), column_name='event_source') }}", "refs": [["snowplow_phoenix_events"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.snowplow_phoenix_events"], "macros": []}, "unique_id": "test.ds_dbt.unique_snowplow_phoenix_events_event_source", "empty": false, "fqn": ["ds_dbt", "schema_test", "unique_snowplow_phoenix_events_event_source"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "unique_snowplow_phoenix_events_event_source", "column_name": "event_source", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        event_source\n\n    from \"quasar_prod_warehouse\".\"public\".\"snowplow_phoenix_events\"\n    where event_source is not null\n    group by event_source\n    having count(*) > 1\n\n) validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        event_source\n\n    from \"quasar_prod_warehouse\".\"public\".\"snowplow_phoenix_events\"\n    where event_source is not null\n    group by event_source\n    having count(*) > 1\n\n) validation_errors\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        event_source\n\n    from \"quasar_prod_warehouse\".\"public\".\"snowplow_phoenix_events\"\n    where event_source is not null\n    group by event_source\n    having count(*) > 1\n\n) validation_errors\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/unique_snowplow_phoenix_events_event_source.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.009259223937988281, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:36.776055Z", "completed_at": "2019-11-19T20:10:36.781349Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:36.781523Z", "completed_at": "2019-11-19T20:10:36.783298Z"}]}, {"node": {"name": "user_activity", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "resource_type": "model", "path": "user_activity/user_activity.sql", "original_file_path": "models/user_activity/user_activity.sql", "package_name": "ds_dbt", "raw_sql": "WITH\nrb_summary AS (\n    SELECT\n\tr_with_lag.northstar_id,\n\tsum(r_with_lag.reportback_volume) AS total_quantity,\n\tcount(DISTINCT r_with_lag.campaign_id) AS num_rbs,\n\tmax(r_with_lag.post_created_at) AS most_recent_rb,\n\tmin(r_with_lag.post_created_at) AS first_rb,\n\tavg(r_with_lag.time_betw_rbs) AS avg_time_betw_rbs\n    FROM (\n\tSELECT\n\t    *,\n\t    post_created_at - lag(post_created_at) OVER (\n\t\tPARTITION BY northstar_id ORDER BY post_created_at) AS time_betw_rbs\n\tFROM {{ ref('reportbacks') }}\n    ) r_with_lag\n    GROUP BY r_with_lag.northstar_id\n),\ngambit_unsub AS (\n    SELECT\n\tf.user_id,\n\tCASE WHEN f.last_macro = 'subscriptionStatusStop' OR f.last_topic = 'unsubscribed'\n\tTHEN f.last_ts ELSE NULL END AS unsub_ts\n    FROM (\n\tSELECT DISTINCT\n\t    user_id,\n\t    LAST_VALUE(macro) OVER (PARTITION BY user_id ORDER BY created_at\n\t\tRANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS last_macro,\n\t    LAST_VALUE(topic) OVER (PARTITION BY user_id ORDER BY created_at\n\t\tRANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS last_topic,\n\t    LAST_VALUE(created_at) OVER (PARTITION BY user_id ORDER BY created_at\n\t\tRANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS last_ts\n\tFROM {{ ref('gambit_messages_inbound') }}\n    ) f\n),\nsms_undeliverable AS (\n    SELECT DISTINCT\n\t    id,\n\t    FIRST_VALUE(updated_at) OVER (PARTITION BY id ORDER BY updated_at\n\t\tROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS unsub_ts\n    FROM northstar.users\n    WHERE sms_status IN ('unknown', 'undeliverable', 'GDPR')\n),\nemail_unsub AS (\n    SELECT\n\tf.customer_id,\n\tCASE WHEN f.last_status = 'customer_unsubscribed' THEN f.last_ts ELSE NULL\n\t    END AS email_unsubscribed_at\n    FROM (\n\tSELECT DISTINCT\n\t    customer_id,\n\t    LAST_VALUE(\"timestamp\") OVER (\n\t\tPARTITION BY customer_id ORDER BY \"timestamp\", event_type\n\t\tRANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS last_ts,\n\t    LAST_VALUE(event_type) OVER (\n\t\tPARTITION BY customer_id ORDER BY \"timestamp\", event_type\n\t\tRANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS last_status\n\t    FROM cio.customer_event\n    ) f\n),\ntime_to_actions AS (\n    SELECT\n\tf.northstar_id,\n\tavg(date_part('day', f.time_to_next_action)) AS avg_days_next_action_after_rb,\n\tmin(date_part('day', f.time_to_next_action_last_rb)) AS days_to_next_action_after_last_rb\n    FROM (\n\tSELECT\n\t    r.northstar_id,\n\t    mel.next_action_ts - r.post_created_at AS time_to_next_action,\n\t    LAST_VALUE(mel.next_action_ts - r.post_created_at) OVER (\n\t\tPARTITION BY r.northstar_id ORDER BY r.post_created_at\n\t\tROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING\n\t    ) AS time_to_next_action_last_rb\n\tFROM {{ ref('reportbacks') }} r\n\tLEFT JOIN LATERAL (\n\t    SELECT \"timestamp\" AS next_action_ts, action_type AS next_action_type\n\t    FROM {{ ref('member_event_log') }}\n\t    WHERE northstar_id = r.northstar_id AND \"timestamp\" > r.post_created_at\n\t    ORDER BY \"timestamp\" ASC\n\t    LIMIT 1\n\t) mel\n\tON TRUE\n    ) f\n    GROUP BY f.northstar_id\n)\nSELECT\nu.northstar_id,\nu.created_at,\nu.sms_status,\nu.cio_status AS email_status,\ns.num_signups,\ns.most_recent_signup,\nr.num_rbs,\nr.total_quantity,\nr.most_recent_rb,\nr.first_rb,\nr.avg_time_betw_rbs,\ntime_to_actions.avg_days_next_action_after_rb,\ntime_to_actions.days_to_next_action_after_last_rb,\nmel.most_recent_action AS most_recent_mam_action,\nemail_opens.most_recent_email_open,\ngreatest(\n    mel.most_recent_action,\n    email_opens.most_recent_email_open\n) AS most_recent_all_actions,\nCASE WHEN time_to_actions.days_to_next_action_after_last_rb IS NULL\n    AND r.num_rbs > 0 THEN TRUE END AS last_action_is_rb,\nDATE_PART(\n    'day', now() - greatest(mel.most_recent_action, email_opens.most_recent_email_open)\n) as days_since_last_action,\n(r.first_rb - u.created_at) AS time_to_first_rb,\nCOALESCE(gambit_unsub.unsub_ts, sms_undeliverable.unsub_ts) AS sms_unsubscribed_at,\nemail_unsub.email_unsubscribed_at,\nCASE WHEN u.subscribed_member IS FALSE\n    THEN greatest(\n\tgambit_unsub.unsub_ts,\n\tsms_undeliverable.unsub_ts,\n\temail_unsub.email_unsubscribed_at) ELSE NULL\n    END AS user_unsubscribed_at,\nCASE WHEN u.\"source\" = 'importer-client' AND p.first_post = 'voter-reg'\n    THEN 1 ELSE 0 END AS voter_reg_acquisition\nFROM {{ ref('users') }} u\nLEFT JOIN (\nSELECT\n    northstar_id,\n    count(DISTINCT campaign_id) AS num_signups,\n    max(created_at) AS most_recent_signup\nFROM {{ ref('signups') }}\nGROUP BY northstar_id\n) s\nON u.northstar_id = s.northstar_id\nLEFT JOIN rb_summary r\nON u.northstar_id = r.northstar_id\nLEFT JOIN (\n    SELECT northstar_id, max(\"timestamp\") AS most_recent_action\n    FROM {{ ref('member_event_log') }}\n    GROUP BY northstar_id\n) mel\nON u.northstar_id = mel.northstar_id\nLEFT JOIN (\n    SELECT customer_id, max(\"timestamp\") AS most_recent_email_open\n    FROM cio.email_event\n    WHERE event_type = 'email_opened'\n    GROUP BY customer_id\n) email_opens\nON u.northstar_id = email_opens.customer_id\nLEFT JOIN gambit_unsub\nON u.northstar_id = gambit_unsub.user_id\nLEFT JOIN sms_undeliverable\nON u.northstar_id = sms_undeliverable.id\nLEFT JOIN email_unsub\nON u.northstar_id = email_unsub.customer_id\nLEFT JOIN time_to_actions\nON u.northstar_id = time_to_actions.northstar_id\nLEFT JOIN (\n    SELECT DISTINCT\n\tnorthstar_id,\n\tFIRST_VALUE(\"type\") OVER (\n\t    PARTITION BY northstar_id ORDER BY created_at) AS first_post\n    FROM {{ ref('posts') }}\n) p\nON u.northstar_id = p.northstar_id", "refs": [["reportbacks"], ["gambit_messages_inbound"], ["reportbacks"], ["member_event_log"], ["users"], ["signups"], ["member_event_log"], ["posts"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.reportbacks", "model.ds_dbt.gambit_messages_inbound", "model.ds_dbt.reportbacks", "model.ds_dbt.member_event_log", "model.ds_dbt.users", "model.ds_dbt.signups", "model.ds_dbt.member_event_log", "model.ds_dbt.posts"], "macros": []}, "unique_id": "model.ds_dbt.user_activity", "empty": false, "fqn": ["ds_dbt", "user_activity", "user_activity"], "tags": [], "config": {"enabled": true, "materialized": "table", "pre-hook": [], "tags": [], "post-hook": [{"sql": "CREATE UNIQUE INDEX IF NOT EXISTS user_activity_unique_i ON {{ this }}(created_at, northstar_id)", "transaction": true, "index": 0}, {"sql": "CREATE INDEX IF NOT EXISTS most_recent_all_actions_i ON {{ this }}(most_recent_all_actions)", "transaction": true, "index": 1}, {"sql": "GRANT SELECT ON {{ this }} TO dsanalyst", "transaction": true, "index": 2}, {"sql": "GRANT SELECT ON {{ this }} TO looker", "transaction": true, "index": 3}], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}, "alias": "user_activity"}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "user_activity", "columns": {}, "description": "", "compiled": true, "compiled_sql": "WITH\nrb_summary AS (\n    SELECT\n\tr_with_lag.northstar_id,\n\tsum(r_with_lag.reportback_volume) AS total_quantity,\n\tcount(DISTINCT r_with_lag.campaign_id) AS num_rbs,\n\tmax(r_with_lag.post_created_at) AS most_recent_rb,\n\tmin(r_with_lag.post_created_at) AS first_rb,\n\tavg(r_with_lag.time_betw_rbs) AS avg_time_betw_rbs\n    FROM (\n\tSELECT\n\t    *,\n\t    post_created_at - lag(post_created_at) OVER (\n\t\tPARTITION BY northstar_id ORDER BY post_created_at) AS time_betw_rbs\n\tFROM \"quasar_prod_warehouse\".\"public\".\"reportbacks\"\n    ) r_with_lag\n    GROUP BY r_with_lag.northstar_id\n),\ngambit_unsub AS (\n    SELECT\n\tf.user_id,\n\tCASE WHEN f.last_macro = 'subscriptionStatusStop' OR f.last_topic = 'unsubscribed'\n\tTHEN f.last_ts ELSE NULL END AS unsub_ts\n    FROM (\n\tSELECT DISTINCT\n\t    user_id,\n\t    LAST_VALUE(macro) OVER (PARTITION BY user_id ORDER BY created_at\n\t\tRANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS last_macro,\n\t    LAST_VALUE(topic) OVER (PARTITION BY user_id ORDER BY created_at\n\t\tRANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS last_topic,\n\t    LAST_VALUE(created_at) OVER (PARTITION BY user_id ORDER BY created_at\n\t\tRANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS last_ts\n\tFROM \"quasar_prod_warehouse\".\"public\".\"gambit_messages_inbound\"\n    ) f\n),\nsms_undeliverable AS (\n    SELECT DISTINCT\n\t    id,\n\t    FIRST_VALUE(updated_at) OVER (PARTITION BY id ORDER BY updated_at\n\t\tROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS unsub_ts\n    FROM northstar.users\n    WHERE sms_status IN ('unknown', 'undeliverable', 'GDPR')\n),\nemail_unsub AS (\n    SELECT\n\tf.customer_id,\n\tCASE WHEN f.last_status = 'customer_unsubscribed' THEN f.last_ts ELSE NULL\n\t    END AS email_unsubscribed_at\n    FROM (\n\tSELECT DISTINCT\n\t    customer_id,\n\t    LAST_VALUE(\"timestamp\") OVER (\n\t\tPARTITION BY customer_id ORDER BY \"timestamp\", event_type\n\t\tRANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS last_ts,\n\t    LAST_VALUE(event_type) OVER (\n\t\tPARTITION BY customer_id ORDER BY \"timestamp\", event_type\n\t\tRANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS last_status\n\t    FROM cio.customer_event\n    ) f\n),\ntime_to_actions AS (\n    SELECT\n\tf.northstar_id,\n\tavg(date_part('day', f.time_to_next_action)) AS avg_days_next_action_after_rb,\n\tmin(date_part('day', f.time_to_next_action_last_rb)) AS days_to_next_action_after_last_rb\n    FROM (\n\tSELECT\n\t    r.northstar_id,\n\t    mel.next_action_ts - r.post_created_at AS time_to_next_action,\n\t    LAST_VALUE(mel.next_action_ts - r.post_created_at) OVER (\n\t\tPARTITION BY r.northstar_id ORDER BY r.post_created_at\n\t\tROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING\n\t    ) AS time_to_next_action_last_rb\n\tFROM \"quasar_prod_warehouse\".\"public\".\"reportbacks\" r\n\tLEFT JOIN LATERAL (\n\t    SELECT \"timestamp\" AS next_action_ts, action_type AS next_action_type\n\t    FROM \"quasar_prod_warehouse\".\"public\".\"member_event_log\"\n\t    WHERE northstar_id = r.northstar_id AND \"timestamp\" > r.post_created_at\n\t    ORDER BY \"timestamp\" ASC\n\t    LIMIT 1\n\t) mel\n\tON TRUE\n    ) f\n    GROUP BY f.northstar_id\n)\nSELECT\nu.northstar_id,\nu.created_at,\nu.sms_status,\nu.cio_status AS email_status,\ns.num_signups,\ns.most_recent_signup,\nr.num_rbs,\nr.total_quantity,\nr.most_recent_rb,\nr.first_rb,\nr.avg_time_betw_rbs,\ntime_to_actions.avg_days_next_action_after_rb,\ntime_to_actions.days_to_next_action_after_last_rb,\nmel.most_recent_action AS most_recent_mam_action,\nemail_opens.most_recent_email_open,\ngreatest(\n    mel.most_recent_action,\n    email_opens.most_recent_email_open\n) AS most_recent_all_actions,\nCASE WHEN time_to_actions.days_to_next_action_after_last_rb IS NULL\n    AND r.num_rbs > 0 THEN TRUE END AS last_action_is_rb,\nDATE_PART(\n    'day', now() - greatest(mel.most_recent_action, email_opens.most_recent_email_open)\n) as days_since_last_action,\n(r.first_rb - u.created_at) AS time_to_first_rb,\nCOALESCE(gambit_unsub.unsub_ts, sms_undeliverable.unsub_ts) AS sms_unsubscribed_at,\nemail_unsub.email_unsubscribed_at,\nCASE WHEN u.subscribed_member IS FALSE\n    THEN greatest(\n\tgambit_unsub.unsub_ts,\n\tsms_undeliverable.unsub_ts,\n\temail_unsub.email_unsubscribed_at) ELSE NULL\n    END AS user_unsubscribed_at,\nCASE WHEN u.\"source\" = 'importer-client' AND p.first_post = 'voter-reg'\n    THEN 1 ELSE 0 END AS voter_reg_acquisition\nFROM \"quasar_prod_warehouse\".\"public\".\"users\" u\nLEFT JOIN (\nSELECT\n    northstar_id,\n    count(DISTINCT campaign_id) AS num_signups,\n    max(created_at) AS most_recent_signup\nFROM \"quasar_prod_warehouse\".\"public\".\"signups\"\nGROUP BY northstar_id\n) s\nON u.northstar_id = s.northstar_id\nLEFT JOIN rb_summary r\nON u.northstar_id = r.northstar_id\nLEFT JOIN (\n    SELECT northstar_id, max(\"timestamp\") AS most_recent_action\n    FROM \"quasar_prod_warehouse\".\"public\".\"member_event_log\"\n    GROUP BY northstar_id\n) mel\nON u.northstar_id = mel.northstar_id\nLEFT JOIN (\n    SELECT customer_id, max(\"timestamp\") AS most_recent_email_open\n    FROM cio.email_event\n    WHERE event_type = 'email_opened'\n    GROUP BY customer_id\n) email_opens\nON u.northstar_id = email_opens.customer_id\nLEFT JOIN gambit_unsub\nON u.northstar_id = gambit_unsub.user_id\nLEFT JOIN sms_undeliverable\nON u.northstar_id = sms_undeliverable.id\nLEFT JOIN email_unsub\nON u.northstar_id = email_unsub.customer_id\nLEFT JOIN time_to_actions\nON u.northstar_id = time_to_actions.northstar_id\nLEFT JOIN (\n    SELECT DISTINCT\n\tnorthstar_id,\n\tFIRST_VALUE(\"type\") OVER (\n\t    PARTITION BY northstar_id ORDER BY created_at) AS first_post\n    FROM \"quasar_prod_warehouse\".\"public\".\"posts\"\n) p\nON u.northstar_id = p.northstar_id", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "WITH\nrb_summary AS (\n    SELECT\n\tr_with_lag.northstar_id,\n\tsum(r_with_lag.reportback_volume) AS total_quantity,\n\tcount(DISTINCT r_with_lag.campaign_id) AS num_rbs,\n\tmax(r_with_lag.post_created_at) AS most_recent_rb,\n\tmin(r_with_lag.post_created_at) AS first_rb,\n\tavg(r_with_lag.time_betw_rbs) AS avg_time_betw_rbs\n    FROM (\n\tSELECT\n\t    *,\n\t    post_created_at - lag(post_created_at) OVER (\n\t\tPARTITION BY northstar_id ORDER BY post_created_at) AS time_betw_rbs\n\tFROM \"quasar_prod_warehouse\".\"public\".\"reportbacks\"\n    ) r_with_lag\n    GROUP BY r_with_lag.northstar_id\n),\ngambit_unsub AS (\n    SELECT\n\tf.user_id,\n\tCASE WHEN f.last_macro = 'subscriptionStatusStop' OR f.last_topic = 'unsubscribed'\n\tTHEN f.last_ts ELSE NULL END AS unsub_ts\n    FROM (\n\tSELECT DISTINCT\n\t    user_id,\n\t    LAST_VALUE(macro) OVER (PARTITION BY user_id ORDER BY created_at\n\t\tRANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS last_macro,\n\t    LAST_VALUE(topic) OVER (PARTITION BY user_id ORDER BY created_at\n\t\tRANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS last_topic,\n\t    LAST_VALUE(created_at) OVER (PARTITION BY user_id ORDER BY created_at\n\t\tRANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS last_ts\n\tFROM \"quasar_prod_warehouse\".\"public\".\"gambit_messages_inbound\"\n    ) f\n),\nsms_undeliverable AS (\n    SELECT DISTINCT\n\t    id,\n\t    FIRST_VALUE(updated_at) OVER (PARTITION BY id ORDER BY updated_at\n\t\tROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS unsub_ts\n    FROM northstar.users\n    WHERE sms_status IN ('unknown', 'undeliverable', 'GDPR')\n),\nemail_unsub AS (\n    SELECT\n\tf.customer_id,\n\tCASE WHEN f.last_status = 'customer_unsubscribed' THEN f.last_ts ELSE NULL\n\t    END AS email_unsubscribed_at\n    FROM (\n\tSELECT DISTINCT\n\t    customer_id,\n\t    LAST_VALUE(\"timestamp\") OVER (\n\t\tPARTITION BY customer_id ORDER BY \"timestamp\", event_type\n\t\tRANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS last_ts,\n\t    LAST_VALUE(event_type) OVER (\n\t\tPARTITION BY customer_id ORDER BY \"timestamp\", event_type\n\t\tRANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS last_status\n\t    FROM cio.customer_event\n    ) f\n),\ntime_to_actions AS (\n    SELECT\n\tf.northstar_id,\n\tavg(date_part('day', f.time_to_next_action)) AS avg_days_next_action_after_rb,\n\tmin(date_part('day', f.time_to_next_action_last_rb)) AS days_to_next_action_after_last_rb\n    FROM (\n\tSELECT\n\t    r.northstar_id,\n\t    mel.next_action_ts - r.post_created_at AS time_to_next_action,\n\t    LAST_VALUE(mel.next_action_ts - r.post_created_at) OVER (\n\t\tPARTITION BY r.northstar_id ORDER BY r.post_created_at\n\t\tROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING\n\t    ) AS time_to_next_action_last_rb\n\tFROM \"quasar_prod_warehouse\".\"public\".\"reportbacks\" r\n\tLEFT JOIN LATERAL (\n\t    SELECT \"timestamp\" AS next_action_ts, action_type AS next_action_type\n\t    FROM \"quasar_prod_warehouse\".\"public\".\"member_event_log\"\n\t    WHERE northstar_id = r.northstar_id AND \"timestamp\" > r.post_created_at\n\t    ORDER BY \"timestamp\" ASC\n\t    LIMIT 1\n\t) mel\n\tON TRUE\n    ) f\n    GROUP BY f.northstar_id\n)\nSELECT\nu.northstar_id,\nu.created_at,\nu.sms_status,\nu.cio_status AS email_status,\ns.num_signups,\ns.most_recent_signup,\nr.num_rbs,\nr.total_quantity,\nr.most_recent_rb,\nr.first_rb,\nr.avg_time_betw_rbs,\ntime_to_actions.avg_days_next_action_after_rb,\ntime_to_actions.days_to_next_action_after_last_rb,\nmel.most_recent_action AS most_recent_mam_action,\nemail_opens.most_recent_email_open,\ngreatest(\n    mel.most_recent_action,\n    email_opens.most_recent_email_open\n) AS most_recent_all_actions,\nCASE WHEN time_to_actions.days_to_next_action_after_last_rb IS NULL\n    AND r.num_rbs > 0 THEN TRUE END AS last_action_is_rb,\nDATE_PART(\n    'day', now() - greatest(mel.most_recent_action, email_opens.most_recent_email_open)\n) as days_since_last_action,\n(r.first_rb - u.created_at) AS time_to_first_rb,\nCOALESCE(gambit_unsub.unsub_ts, sms_undeliverable.unsub_ts) AS sms_unsubscribed_at,\nemail_unsub.email_unsubscribed_at,\nCASE WHEN u.subscribed_member IS FALSE\n    THEN greatest(\n\tgambit_unsub.unsub_ts,\n\tsms_undeliverable.unsub_ts,\n\temail_unsub.email_unsubscribed_at) ELSE NULL\n    END AS user_unsubscribed_at,\nCASE WHEN u.\"source\" = 'importer-client' AND p.first_post = 'voter-reg'\n    THEN 1 ELSE 0 END AS voter_reg_acquisition\nFROM \"quasar_prod_warehouse\".\"public\".\"users\" u\nLEFT JOIN (\nSELECT\n    northstar_id,\n    count(DISTINCT campaign_id) AS num_signups,\n    max(created_at) AS most_recent_signup\nFROM \"quasar_prod_warehouse\".\"public\".\"signups\"\nGROUP BY northstar_id\n) s\nON u.northstar_id = s.northstar_id\nLEFT JOIN rb_summary r\nON u.northstar_id = r.northstar_id\nLEFT JOIN (\n    SELECT northstar_id, max(\"timestamp\") AS most_recent_action\n    FROM \"quasar_prod_warehouse\".\"public\".\"member_event_log\"\n    GROUP BY northstar_id\n) mel\nON u.northstar_id = mel.northstar_id\nLEFT JOIN (\n    SELECT customer_id, max(\"timestamp\") AS most_recent_email_open\n    FROM cio.email_event\n    WHERE event_type = 'email_opened'\n    GROUP BY customer_id\n) email_opens\nON u.northstar_id = email_opens.customer_id\nLEFT JOIN gambit_unsub\nON u.northstar_id = gambit_unsub.user_id\nLEFT JOIN sms_undeliverable\nON u.northstar_id = sms_undeliverable.id\nLEFT JOIN email_unsub\nON u.northstar_id = email_unsub.customer_id\nLEFT JOIN time_to_actions\nON u.northstar_id = time_to_actions.northstar_id\nLEFT JOIN (\n    SELECT DISTINCT\n\tnorthstar_id,\n\tFIRST_VALUE(\"type\") OVER (\n\t    PARTITION BY northstar_id ORDER BY created_at) AS first_post\n    FROM \"quasar_prod_warehouse\".\"public\".\"posts\"\n) p\nON u.northstar_id = p.northstar_id", "wrapped_sql": "None", "build_path": "../../docs/compiled/ds_dbt/user_activity/user_activity.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.015356063842773438, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:36.788170Z", "completed_at": "2019-11-19T20:10:36.799018Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:36.799150Z", "completed_at": "2019-11-19T20:10:36.800905Z"}]}, {"node": {"name": "phoenix_sessions_combined", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "resource_type": "model", "path": "phoenix_events/phoenix_sessions_combined.sql", "original_file_path": "models/phoenix_events/phoenix_sessions_combined.sql", "package_name": "ds_dbt", "raw_sql": "SELECT \n    p.session_id,\n    p.event_id,\n    p.device_id,\n    p.landing_datetime,\n    p.end_datetime as ending_datetime,\n    EXTRACT(EPOCH FROM (end_datetime - landing_datetime)) AS session_duration_seconds,\n    NULL as num_pages_viewed,\n    p.landing_page,\n    NULL as exit_page,\n    NULL as days_since_last_session\nFROM public.puck_phoenix_sessions p\nUNION ALL\nSELECT\n    s.session_id,\n    s.event_id,\n    s.device_id,\n    s.landing_datetime,\n    s.ending_datetime,\n    s.session_duration_seconds,\n    s.num_pages_viewed,\n    s.landing_page,\n    s.exit_page,\n    s.days_since_last_session\nFROM {{ ref('snowplow_sessions') }} s", "refs": [["snowplow_sessions"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.snowplow_sessions"], "macros": []}, "unique_id": "model.ds_dbt.phoenix_sessions_combined", "empty": false, "fqn": ["ds_dbt", "phoenix_events", "phoenix_sessions_combined"], "tags": [], "config": {"enabled": true, "materialized": "table", "pre-hook": [], "tags": [], "post-hook": [{"sql": "CREATE INDEX IF NOT EXISTS psc_landing ON {{ this }}(landing_datetime, landing_page)", "transaction": true, "index": 0}, {"sql": "GRANT SELECT ON {{ this }} TO looker", "transaction": true, "index": 1}, {"sql": "GRANT SELECT ON {{ this }} TO dsanalyst", "transaction": true, "index": 2}], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}, "alias": "phoenix_sessions_combined"}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "phoenix_sessions_combined", "columns": {"session_id": {"name": "session_id", "description": "Unique identifier of the user's session"}, "event_id": {"name": "event_id", "description": "This is a unique identifier for each event"}, "device_id": {"name": "device_id", "description": "ID of the device used"}, "landing_datetime": {"name": "landing_datetime", "description": "When the session started in UTC (eg. 2018-01-01 12:00:00)"}, "ending_datetime": {"name": "ending_datetime", "description": "When the session ended in UTC (eg. 2018-01-01 12:00:00)"}, "session_duration_seconds": {"name": "session_duration_seconds", "description": "Session duration in seconds"}, "num_pages_views": {"name": "num_pages_views", "description": "Number of pages viewed in session"}, "landing_page": {"name": "landing_page", "description": "First page the user viewed in the session (eg. /us/facts/11-facts-about-bp-oil-spill)"}, "exit_page": {"name": "exit_page", "description": "\"Which page the user ended or exited their session from (eg. /us/campaigns/green-your-getaway)\""}, "days_since_last_session": {"name": "days_since_last_session", "description": "\"Days since their last session.\""}}, "description": "Table combining Snowplow based web session data with legacy Puck data based on 7/12/2019 cutover date", "patch_path": "models/phoenix_events/schema.yml", "docrefs": [{"documentation_package": "", "documentation_name": "session_id", "column_name": "session_id"}, {"documentation_package": "", "documentation_name": "event_id", "column_name": "event_id"}, {"documentation_package": "", "documentation_name": "device_id", "column_name": "device_id"}, {"documentation_package": "", "documentation_name": "landing_datetime", "column_name": "landing_datetime"}, {"documentation_package": "", "documentation_name": "ending_datetime", "column_name": "ending_datetime"}, {"documentation_package": "", "documentation_name": "session_duration_seconds", "column_name": "session_duration_seconds"}, {"documentation_package": "", "documentation_name": "num_pages_views", "column_name": "num_pages_views"}, {"documentation_package": "", "documentation_name": "landing_page", "column_name": "landing_page"}, {"documentation_package": "", "documentation_name": "exit_page", "column_name": "exit_page"}, {"documentation_package": "", "documentation_name": "days_since_last_session", "column_name": "days_since_last_session"}], "compiled": true, "compiled_sql": "SELECT \n    p.session_id,\n    p.event_id,\n    p.device_id,\n    p.landing_datetime,\n    p.end_datetime as ending_datetime,\n    EXTRACT(EPOCH FROM (end_datetime - landing_datetime)) AS session_duration_seconds,\n    NULL as num_pages_viewed,\n    p.landing_page,\n    NULL as exit_page,\n    NULL as days_since_last_session\nFROM public.puck_phoenix_sessions p\nUNION ALL\nSELECT\n    s.session_id,\n    s.event_id,\n    s.device_id,\n    s.landing_datetime,\n    s.ending_datetime,\n    s.session_duration_seconds,\n    s.num_pages_viewed,\n    s.landing_page,\n    s.exit_page,\n    s.days_since_last_session\nFROM \"quasar_prod_warehouse\".\"public\".\"snowplow_sessions\" s", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "SELECT \n    p.session_id,\n    p.event_id,\n    p.device_id,\n    p.landing_datetime,\n    p.end_datetime as ending_datetime,\n    EXTRACT(EPOCH FROM (end_datetime - landing_datetime)) AS session_duration_seconds,\n    NULL as num_pages_viewed,\n    p.landing_page,\n    NULL as exit_page,\n    NULL as days_since_last_session\nFROM public.puck_phoenix_sessions p\nUNION ALL\nSELECT\n    s.session_id,\n    s.event_id,\n    s.device_id,\n    s.landing_datetime,\n    s.ending_datetime,\n    s.session_duration_seconds,\n    s.num_pages_viewed,\n    s.landing_page,\n    s.exit_page,\n    s.days_since_last_session\nFROM \"quasar_prod_warehouse\".\"public\".\"snowplow_sessions\" s", "wrapped_sql": "None", "build_path": "../../docs/compiled/ds_dbt/phoenix_events/phoenix_sessions_combined.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.010043144226074219, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:36.804490Z", "completed_at": "2019-11-19T20:10:36.810275Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:36.810425Z", "completed_at": "2019-11-19T20:10:36.812602Z"}]}, {"node": {"name": "not_null_snowplow_sessions_device_id", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_snowplow_sessions_device_id.sql", "original_file_path": "models/phoenix_events/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('snowplow_sessions'), column_name='device_id') }}", "refs": [["snowplow_sessions"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.snowplow_sessions"], "macros": []}, "unique_id": "test.ds_dbt.not_null_snowplow_sessions_device_id", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_snowplow_sessions_device_id"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_snowplow_sessions_device_id", "column_name": "device_id", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_sessions\"\nwhere device_id is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_sessions\"\nwhere device_id is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_sessions\"\nwhere device_id is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_snowplow_sessions_device_id.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.01312112808227539, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:36.819039Z", "completed_at": "2019-11-19T20:10:36.826559Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:36.826726Z", "completed_at": "2019-11-19T20:10:36.828072Z"}]}, {"node": {"name": "not_null_snowplow_sessions_ending_datetime", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_snowplow_sessions_ending_datetime.sql", "original_file_path": "models/phoenix_events/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('snowplow_sessions'), column_name='ending_datetime') }}", "refs": [["snowplow_sessions"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.snowplow_sessions"], "macros": []}, "unique_id": "test.ds_dbt.not_null_snowplow_sessions_ending_datetime", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_snowplow_sessions_ending_datetime"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_snowplow_sessions_ending_datetime", "column_name": "ending_datetime", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_sessions\"\nwhere ending_datetime is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_sessions\"\nwhere ending_datetime is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_sessions\"\nwhere ending_datetime is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_snowplow_sessions_ending_datetime.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.008929967880249023, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:36.831291Z", "completed_at": "2019-11-19T20:10:36.836384Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:36.836533Z", "completed_at": "2019-11-19T20:10:36.838357Z"}]}, {"node": {"name": "not_null_snowplow_sessions_event_id", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_snowplow_sessions_event_id.sql", "original_file_path": "models/phoenix_events/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('snowplow_sessions'), column_name='event_id') }}", "refs": [["snowplow_sessions"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.snowplow_sessions"], "macros": []}, "unique_id": "test.ds_dbt.not_null_snowplow_sessions_event_id", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_snowplow_sessions_event_id"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_snowplow_sessions_event_id", "column_name": "event_id", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_sessions\"\nwhere event_id is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_sessions\"\nwhere event_id is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_sessions\"\nwhere event_id is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_snowplow_sessions_event_id.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.009820938110351562, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:36.840677Z", "completed_at": "2019-11-19T20:10:36.848730Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:36.848856Z", "completed_at": "2019-11-19T20:10:36.849988Z"}]}, {"node": {"name": "not_null_snowplow_sessions_exit_page", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_snowplow_sessions_exit_page.sql", "original_file_path": "models/phoenix_events/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('snowplow_sessions'), column_name='exit_page') }}", "refs": [["snowplow_sessions"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.snowplow_sessions"], "macros": []}, "unique_id": "test.ds_dbt.not_null_snowplow_sessions_exit_page", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_snowplow_sessions_exit_page"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_snowplow_sessions_exit_page", "column_name": "exit_page", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_sessions\"\nwhere exit_page is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_sessions\"\nwhere exit_page is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_sessions\"\nwhere exit_page is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_snowplow_sessions_exit_page.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.007261037826538086, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:36.852759Z", "completed_at": "2019-11-19T20:10:36.857294Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:36.857427Z", "completed_at": "2019-11-19T20:10:36.858514Z"}]}, {"node": {"name": "not_null_snowplow_sessions_landing_datetime", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_snowplow_sessions_landing_datetime.sql", "original_file_path": "models/phoenix_events/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('snowplow_sessions'), column_name='landing_datetime') }}", "refs": [["snowplow_sessions"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.snowplow_sessions"], "macros": []}, "unique_id": "test.ds_dbt.not_null_snowplow_sessions_landing_datetime", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_snowplow_sessions_landing_datetime"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_snowplow_sessions_landing_datetime", "column_name": "landing_datetime", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_sessions\"\nwhere landing_datetime is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_sessions\"\nwhere landing_datetime is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_sessions\"\nwhere landing_datetime is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_snowplow_sessions_landing_datetime.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.009499073028564453, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:36.862378Z", "completed_at": "2019-11-19T20:10:36.867696Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:36.867905Z", "completed_at": "2019-11-19T20:10:36.869561Z"}]}, {"node": {"name": "not_null_snowplow_sessions_landing_page", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_snowplow_sessions_landing_page.sql", "original_file_path": "models/phoenix_events/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('snowplow_sessions'), column_name='landing_page') }}", "refs": [["snowplow_sessions"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.snowplow_sessions"], "macros": []}, "unique_id": "test.ds_dbt.not_null_snowplow_sessions_landing_page", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_snowplow_sessions_landing_page"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_snowplow_sessions_landing_page", "column_name": "landing_page", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_sessions\"\nwhere landing_page is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_sessions\"\nwhere landing_page is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_sessions\"\nwhere landing_page is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_snowplow_sessions_landing_page.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.00863504409790039, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:36.872283Z", "completed_at": "2019-11-19T20:10:36.877166Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:36.877477Z", "completed_at": "2019-11-19T20:10:36.879383Z"}]}, {"node": {"name": "not_null_snowplow_sessions_num_pages_views", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_snowplow_sessions_num_pages_views.sql", "original_file_path": "models/phoenix_events/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('snowplow_sessions'), column_name='num_pages_views') }}", "refs": [["snowplow_sessions"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.snowplow_sessions"], "macros": []}, "unique_id": "test.ds_dbt.not_null_snowplow_sessions_num_pages_views", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_snowplow_sessions_num_pages_views"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_snowplow_sessions_num_pages_views", "column_name": "num_pages_views", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_sessions\"\nwhere num_pages_views is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_sessions\"\nwhere num_pages_views is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_sessions\"\nwhere num_pages_views is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_snowplow_sessions_num_pages_views.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.011681079864501953, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:36.881145Z", "completed_at": "2019-11-19T20:10:36.891037Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:36.891223Z", "completed_at": "2019-11-19T20:10:36.892370Z"}]}, {"node": {"name": "not_null_snowplow_sessions_session_duration_seconds", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_snowplow_sessions_session_duration_seconds.sql", "original_file_path": "models/phoenix_events/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('snowplow_sessions'), column_name='session_duration_seconds') }}", "refs": [["snowplow_sessions"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.snowplow_sessions"], "macros": []}, "unique_id": "test.ds_dbt.not_null_snowplow_sessions_session_duration_seconds", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_snowplow_sessions_session_duration_seconds"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_snowplow_sessions_session_duration_seconds", "column_name": "session_duration_seconds", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_sessions\"\nwhere session_duration_seconds is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_sessions\"\nwhere session_duration_seconds is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_sessions\"\nwhere session_duration_seconds is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_snowplow_sessions_session_duration_seconds.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.0074138641357421875, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:36.895083Z", "completed_at": "2019-11-19T20:10:36.899761Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:36.899886Z", "completed_at": "2019-11-19T20:10:36.900974Z"}]}, {"node": {"name": "not_null_snowplow_sessions_session_id", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_snowplow_sessions_session_id.sql", "original_file_path": "models/phoenix_events/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('snowplow_sessions'), column_name='session_id') }}", "refs": [["snowplow_sessions"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.snowplow_sessions"], "macros": []}, "unique_id": "test.ds_dbt.not_null_snowplow_sessions_session_id", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_snowplow_sessions_session_id"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_snowplow_sessions_session_id", "column_name": "session_id", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_sessions\"\nwhere session_id is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_sessions\"\nwhere session_id is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"snowplow_sessions\"\nwhere session_id is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_snowplow_sessions_session_id.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.010334014892578125, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:36.903530Z", "completed_at": "2019-11-19T20:10:36.912104Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:36.912256Z", "completed_at": "2019-11-19T20:10:36.913391Z"}]}, {"node": {"name": "unique_snowplow_sessions_event_id", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/unique_snowplow_sessions_event_id.sql", "original_file_path": "models/phoenix_events/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_unique(model=ref('snowplow_sessions'), column_name='event_id') }}", "refs": [["snowplow_sessions"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.snowplow_sessions"], "macros": []}, "unique_id": "test.ds_dbt.unique_snowplow_sessions_event_id", "empty": false, "fqn": ["ds_dbt", "schema_test", "unique_snowplow_sessions_event_id"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "unique_snowplow_sessions_event_id", "column_name": "event_id", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        event_id\n\n    from \"quasar_prod_warehouse\".\"public\".\"snowplow_sessions\"\n    where event_id is not null\n    group by event_id\n    having count(*) > 1\n\n) validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        event_id\n\n    from \"quasar_prod_warehouse\".\"public\".\"snowplow_sessions\"\n    where event_id is not null\n    group by event_id\n    having count(*) > 1\n\n) validation_errors\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        event_id\n\n    from \"quasar_prod_warehouse\".\"public\".\"snowplow_sessions\"\n    where event_id is not null\n    group by event_id\n    having count(*) > 1\n\n) validation_errors\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/unique_snowplow_sessions_event_id.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.007608175277709961, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:36.915013Z", "completed_at": "2019-11-19T20:10:36.920956Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:36.921082Z", "completed_at": "2019-11-19T20:10:36.922153Z"}]}, {"node": {"name": "unique_snowplow_sessions_session_id", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/unique_snowplow_sessions_session_id.sql", "original_file_path": "models/phoenix_events/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_unique(model=ref('snowplow_sessions'), column_name='session_id') }}", "refs": [["snowplow_sessions"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.snowplow_sessions"], "macros": []}, "unique_id": "test.ds_dbt.unique_snowplow_sessions_session_id", "empty": false, "fqn": ["ds_dbt", "schema_test", "unique_snowplow_sessions_session_id"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "unique_snowplow_sessions_session_id", "column_name": "session_id", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        session_id\n\n    from \"quasar_prod_warehouse\".\"public\".\"snowplow_sessions\"\n    where session_id is not null\n    group by session_id\n    having count(*) > 1\n\n) validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        session_id\n\n    from \"quasar_prod_warehouse\".\"public\".\"snowplow_sessions\"\n    where session_id is not null\n    group by session_id\n    having count(*) > 1\n\n) validation_errors\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        session_id\n\n    from \"quasar_prod_warehouse\".\"public\".\"snowplow_sessions\"\n    where session_id is not null\n    group by session_id\n    having count(*) > 1\n\n) validation_errors\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/unique_snowplow_sessions_session_id.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.011452913284301758, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:36.927192Z", "completed_at": "2019-11-19T20:10:36.933884Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:36.934053Z", "completed_at": "2019-11-19T20:10:36.935184Z"}]}, {"node": {"name": "not_null_phoenix_events_combined_browser_size", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_phoenix_events_combined_browser_size.sql", "original_file_path": "models/phoenix_events/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('phoenix_events_combined'), column_name='browser_size') }}", "refs": [["phoenix_events_combined"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.phoenix_events_combined"], "macros": []}, "unique_id": "test.ds_dbt.not_null_phoenix_events_combined_browser_size", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_phoenix_events_combined_browser_size"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_phoenix_events_combined_browser_size", "column_name": "browser_size", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"phoenix_events_combined\"\nwhere browser_size is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"phoenix_events_combined\"\nwhere browser_size is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"phoenix_events_combined\"\nwhere browser_size is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_phoenix_events_combined_browser_size.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.00728607177734375, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:36.938012Z", "completed_at": "2019-11-19T20:10:36.942530Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:36.942661Z", "completed_at": "2019-11-19T20:10:36.943726Z"}]}, {"node": {"name": "not_null_phoenix_events_combined_device_id", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_phoenix_events_combined_device_id.sql", "original_file_path": "models/phoenix_events/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('phoenix_events_combined'), column_name='device_id') }}", "refs": [["phoenix_events_combined"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.phoenix_events_combined"], "macros": []}, "unique_id": "test.ds_dbt.not_null_phoenix_events_combined_device_id", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_phoenix_events_combined_device_id"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_phoenix_events_combined_device_id", "column_name": "device_id", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"phoenix_events_combined\"\nwhere device_id is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"phoenix_events_combined\"\nwhere device_id is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"phoenix_events_combined\"\nwhere device_id is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_phoenix_events_combined_device_id.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.012630939483642578, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:36.946401Z", "completed_at": "2019-11-19T20:10:36.956787Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:36.956998Z", "completed_at": "2019-11-19T20:10:36.958328Z"}]}, {"node": {"name": "not_null_phoenix_events_combined_event_datetime", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_phoenix_events_combined_event_datetime.sql", "original_file_path": "models/phoenix_events/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('phoenix_events_combined'), column_name='event_datetime') }}", "refs": [["phoenix_events_combined"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.phoenix_events_combined"], "macros": []}, "unique_id": "test.ds_dbt.not_null_phoenix_events_combined_event_datetime", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_phoenix_events_combined_event_datetime"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_phoenix_events_combined_event_datetime", "column_name": "event_datetime", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"phoenix_events_combined\"\nwhere event_datetime is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"phoenix_events_combined\"\nwhere event_datetime is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"phoenix_events_combined\"\nwhere event_datetime is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_phoenix_events_combined_event_datetime.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.009196043014526367, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:36.960258Z", "completed_at": "2019-11-19T20:10:36.966793Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:36.967016Z", "completed_at": "2019-11-19T20:10:36.968961Z"}]}, {"node": {"name": "not_null_phoenix_events_combined_event_id", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_phoenix_events_combined_event_id.sql", "original_file_path": "models/phoenix_events/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('phoenix_events_combined'), column_name='event_id') }}", "refs": [["phoenix_events_combined"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.phoenix_events_combined"], "macros": []}, "unique_id": "test.ds_dbt.not_null_phoenix_events_combined_event_id", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_phoenix_events_combined_event_id"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_phoenix_events_combined_event_id", "column_name": "event_id", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"phoenix_events_combined\"\nwhere event_id is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"phoenix_events_combined\"\nwhere event_id is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"phoenix_events_combined\"\nwhere event_id is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_phoenix_events_combined_event_id.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.009645938873291016, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:36.972905Z", "completed_at": "2019-11-19T20:10:36.978810Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:36.979201Z", "completed_at": "2019-11-19T20:10:36.980381Z"}]}, {"node": {"name": "not_null_phoenix_events_combined_event_source", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_phoenix_events_combined_event_source.sql", "original_file_path": "models/phoenix_events/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('phoenix_events_combined'), column_name='event_source') }}", "refs": [["phoenix_events_combined"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.phoenix_events_combined"], "macros": []}, "unique_id": "test.ds_dbt.not_null_phoenix_events_combined_event_source", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_phoenix_events_combined_event_source"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_phoenix_events_combined_event_source", "column_name": "event_source", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"phoenix_events_combined\"\nwhere event_source is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"phoenix_events_combined\"\nwhere event_source is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"phoenix_events_combined\"\nwhere event_source is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_phoenix_events_combined_event_source.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.0075757503509521484, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:36.983086Z", "completed_at": "2019-11-19T20:10:36.987818Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:36.987965Z", "completed_at": "2019-11-19T20:10:36.989119Z"}]}, {"node": {"name": "not_null_phoenix_events_combined_host", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_phoenix_events_combined_host.sql", "original_file_path": "models/phoenix_events/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('phoenix_events_combined'), column_name='host') }}", "refs": [["phoenix_events_combined"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.phoenix_events_combined"], "macros": []}, "unique_id": "test.ds_dbt.not_null_phoenix_events_combined_host", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_phoenix_events_combined_host"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_phoenix_events_combined_host", "column_name": "host", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"phoenix_events_combined\"\nwhere host is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"phoenix_events_combined\"\nwhere host is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"phoenix_events_combined\"\nwhere host is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_phoenix_events_combined_host.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.009427070617675781, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:36.992955Z", "completed_at": "2019-11-19T20:10:36.998134Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:36.998330Z", "completed_at": "2019-11-19T20:10:36.999956Z"}]}, {"node": {"name": "not_null_phoenix_events_combined_path", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_phoenix_events_combined_path.sql", "original_file_path": "models/phoenix_events/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('phoenix_events_combined'), column_name='path') }}", "refs": [["phoenix_events_combined"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.phoenix_events_combined"], "macros": []}, "unique_id": "test.ds_dbt.not_null_phoenix_events_combined_path", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_phoenix_events_combined_path"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_phoenix_events_combined_path", "column_name": "path", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"phoenix_events_combined\"\nwhere path is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"phoenix_events_combined\"\nwhere path is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"phoenix_events_combined\"\nwhere path is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_phoenix_events_combined_path.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.007928133010864258, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:37.002885Z", "completed_at": "2019-11-19T20:10:37.007868Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:37.007987Z", "completed_at": "2019-11-19T20:10:37.009143Z"}]}, {"node": {"name": "not_null_phoenix_events_combined_referrer_host", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_phoenix_events_combined_referrer_host.sql", "original_file_path": "models/phoenix_events/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('phoenix_events_combined'), column_name='referrer_host') }}", "refs": [["phoenix_events_combined"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.phoenix_events_combined"], "macros": []}, "unique_id": "test.ds_dbt.not_null_phoenix_events_combined_referrer_host", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_phoenix_events_combined_referrer_host"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_phoenix_events_combined_referrer_host", "column_name": "referrer_host", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"phoenix_events_combined\"\nwhere referrer_host is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"phoenix_events_combined\"\nwhere referrer_host is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"phoenix_events_combined\"\nwhere referrer_host is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_phoenix_events_combined_referrer_host.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.009979009628295898, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:37.012372Z", "completed_at": "2019-11-19T20:10:37.019222Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:37.019382Z", "completed_at": "2019-11-19T20:10:37.020541Z"}]}, {"node": {"name": "not_null_phoenix_events_combined_referrer_path", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_phoenix_events_combined_referrer_path.sql", "original_file_path": "models/phoenix_events/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('phoenix_events_combined'), column_name='referrer_path') }}", "refs": [["phoenix_events_combined"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.phoenix_events_combined"], "macros": []}, "unique_id": "test.ds_dbt.not_null_phoenix_events_combined_referrer_path", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_phoenix_events_combined_referrer_path"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_phoenix_events_combined_referrer_path", "column_name": "referrer_path", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"phoenix_events_combined\"\nwhere referrer_path is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"phoenix_events_combined\"\nwhere referrer_path is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"phoenix_events_combined\"\nwhere referrer_path is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_phoenix_events_combined_referrer_path.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.007882833480834961, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:37.023132Z", "completed_at": "2019-11-19T20:10:37.028177Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:37.028306Z", "completed_at": "2019-11-19T20:10:37.029573Z"}]}, {"node": {"name": "not_null_phoenix_events_combined_session_id", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_phoenix_events_combined_session_id.sql", "original_file_path": "models/phoenix_events/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('phoenix_events_combined'), column_name='session_id') }}", "refs": [["phoenix_events_combined"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.phoenix_events_combined"], "macros": []}, "unique_id": "test.ds_dbt.not_null_phoenix_events_combined_session_id", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_phoenix_events_combined_session_id"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_phoenix_events_combined_session_id", "column_name": "session_id", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"phoenix_events_combined\"\nwhere session_id is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"phoenix_events_combined\"\nwhere session_id is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"phoenix_events_combined\"\nwhere session_id is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_phoenix_events_combined_session_id.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.008949041366577148, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:37.032601Z", "completed_at": "2019-11-19T20:10:37.038410Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:37.038571Z", "completed_at": "2019-11-19T20:10:37.039946Z"}]}, {"node": {"name": "relationships_phoenix_events_combined_northstar_id__id__ref_users_", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/relationships_phoenix_events_combined_northstar_id__id__ref_users_.sql", "original_file_path": "models/phoenix_events/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_relationships(model=ref('phoenix_events_combined'), column_name='northstar_id', field='id', to=ref('users')) }}", "refs": [["phoenix_events_combined"], ["users"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.phoenix_events_combined", "model.ds_dbt.users"], "macros": []}, "unique_id": "test.ds_dbt.relationships_phoenix_events_combined_northstar_id__id__ref_users_", "empty": false, "fqn": ["ds_dbt", "schema_test", "relationships_phoenix_events_combined_northstar_id__id__ref_users_"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "relationships_phoenix_events_combined_northstar_id__id__ref_users_", "column_name": "northstar_id", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\n\nselect count(*)\nfrom (\n    select northstar_id as id from \"quasar_prod_warehouse\".\"public\".\"phoenix_events_combined\"\n) as child\nleft join (\n    select id as id from \"quasar_prod_warehouse\".\"public\".\"users\"\n) as parent on parent.id = child.id\nwhere child.id is not null\n  and parent.id is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\n\nselect count(*)\nfrom (\n    select northstar_id as id from \"quasar_prod_warehouse\".\"public\".\"phoenix_events_combined\"\n) as child\nleft join (\n    select id as id from \"quasar_prod_warehouse\".\"public\".\"users\"\n) as parent on parent.id = child.id\nwhere child.id is not null\n  and parent.id is null\n\n", "wrapped_sql": "\n\n\n\n\nselect count(*)\nfrom (\n    select northstar_id as id from \"quasar_prod_warehouse\".\"public\".\"phoenix_events_combined\"\n) as child\nleft join (\n    select id as id from \"quasar_prod_warehouse\".\"public\".\"users\"\n) as parent on parent.id = child.id\nwhere child.id is not null\n  and parent.id is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/relationships_phoenix_events_combined_northstar_id__id__ref_users_.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.008253097534179688, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:37.042787Z", "completed_at": "2019-11-19T20:10:37.048107Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:37.048233Z", "completed_at": "2019-11-19T20:10:37.049447Z"}]}, {"node": {"name": "unique_phoenix_events_combined_event_id", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/unique_phoenix_events_combined_event_id.sql", "original_file_path": "models/phoenix_events/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_unique(model=ref('phoenix_events_combined'), column_name='event_id') }}", "refs": [["phoenix_events_combined"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.phoenix_events_combined"], "macros": []}, "unique_id": "test.ds_dbt.unique_phoenix_events_combined_event_id", "empty": false, "fqn": ["ds_dbt", "schema_test", "unique_phoenix_events_combined_event_id"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "unique_phoenix_events_combined_event_id", "column_name": "event_id", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        event_id\n\n    from \"quasar_prod_warehouse\".\"public\".\"phoenix_events_combined\"\n    where event_id is not null\n    group by event_id\n    having count(*) > 1\n\n) validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        event_id\n\n    from \"quasar_prod_warehouse\".\"public\".\"phoenix_events_combined\"\n    where event_id is not null\n    group by event_id\n    having count(*) > 1\n\n) validation_errors\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        event_id\n\n    from \"quasar_prod_warehouse\".\"public\".\"phoenix_events_combined\"\n    where event_id is not null\n    group by event_id\n    having count(*) > 1\n\n) validation_errors\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/unique_phoenix_events_combined_event_id.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.008990049362182617, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:37.053402Z", "completed_at": "2019-11-19T20:10:37.058643Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:37.058847Z", "completed_at": "2019-11-19T20:10:37.060209Z"}]}, {"node": {"name": "unique_phoenix_events_combined_event_source", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/unique_phoenix_events_combined_event_source.sql", "original_file_path": "models/phoenix_events/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_unique(model=ref('phoenix_events_combined'), column_name='event_source') }}", "refs": [["phoenix_events_combined"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.phoenix_events_combined"], "macros": []}, "unique_id": "test.ds_dbt.unique_phoenix_events_combined_event_source", "empty": false, "fqn": ["ds_dbt", "schema_test", "unique_phoenix_events_combined_event_source"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "unique_phoenix_events_combined_event_source", "column_name": "event_source", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        event_source\n\n    from \"quasar_prod_warehouse\".\"public\".\"phoenix_events_combined\"\n    where event_source is not null\n    group by event_source\n    having count(*) > 1\n\n) validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        event_source\n\n    from \"quasar_prod_warehouse\".\"public\".\"phoenix_events_combined\"\n    where event_source is not null\n    group by event_source\n    having count(*) > 1\n\n) validation_errors\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        event_source\n\n    from \"quasar_prod_warehouse\".\"public\".\"phoenix_events_combined\"\n    where event_source is not null\n    group by event_source\n    having count(*) > 1\n\n) validation_errors\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/unique_phoenix_events_combined_event_source.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.007673025131225586, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:37.062907Z", "completed_at": "2019-11-19T20:10:37.067776Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:37.067934Z", "completed_at": "2019-11-19T20:10:37.069052Z"}]}, {"node": {"name": "not_null_phoenix_sessions_combined_device_id", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_phoenix_sessions_combined_device_id.sql", "original_file_path": "models/phoenix_events/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('phoenix_sessions_combined'), column_name='device_id') }}", "refs": [["phoenix_sessions_combined"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.phoenix_sessions_combined"], "macros": []}, "unique_id": "test.ds_dbt.not_null_phoenix_sessions_combined_device_id", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_phoenix_sessions_combined_device_id"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_phoenix_sessions_combined_device_id", "column_name": "device_id", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"phoenix_sessions_combined\"\nwhere device_id is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"phoenix_sessions_combined\"\nwhere device_id is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"phoenix_sessions_combined\"\nwhere device_id is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_phoenix_sessions_combined_device_id.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.01032400131225586, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:37.072477Z", "completed_at": "2019-11-19T20:10:37.079062Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:37.079258Z", "completed_at": "2019-11-19T20:10:37.081061Z"}]}, {"node": {"name": "not_null_phoenix_sessions_combined_ending_datetime", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_phoenix_sessions_combined_ending_datetime.sql", "original_file_path": "models/phoenix_events/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('phoenix_sessions_combined'), column_name='ending_datetime') }}", "refs": [["phoenix_sessions_combined"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.phoenix_sessions_combined"], "macros": []}, "unique_id": "test.ds_dbt.not_null_phoenix_sessions_combined_ending_datetime", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_phoenix_sessions_combined_ending_datetime"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_phoenix_sessions_combined_ending_datetime", "column_name": "ending_datetime", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"phoenix_sessions_combined\"\nwhere ending_datetime is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"phoenix_sessions_combined\"\nwhere ending_datetime is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"phoenix_sessions_combined\"\nwhere ending_datetime is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_phoenix_sessions_combined_ending_datetime.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.008058786392211914, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:37.084051Z", "completed_at": "2019-11-19T20:10:37.088667Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:37.088920Z", "completed_at": "2019-11-19T20:10:37.090431Z"}]}, {"node": {"name": "not_null_phoenix_sessions_combined_event_id", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_phoenix_sessions_combined_event_id.sql", "original_file_path": "models/phoenix_events/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('phoenix_sessions_combined'), column_name='event_id') }}", "refs": [["phoenix_sessions_combined"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.phoenix_sessions_combined"], "macros": []}, "unique_id": "test.ds_dbt.not_null_phoenix_sessions_combined_event_id", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_phoenix_sessions_combined_event_id"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_phoenix_sessions_combined_event_id", "column_name": "event_id", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"phoenix_sessions_combined\"\nwhere event_id is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"phoenix_sessions_combined\"\nwhere event_id is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"phoenix_sessions_combined\"\nwhere event_id is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_phoenix_sessions_combined_event_id.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.00967717170715332, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:37.094186Z", "completed_at": "2019-11-19T20:10:37.099923Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:37.100136Z", "completed_at": "2019-11-19T20:10:37.101389Z"}]}, {"node": {"name": "not_null_phoenix_sessions_combined_exit_page", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_phoenix_sessions_combined_exit_page.sql", "original_file_path": "models/phoenix_events/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('phoenix_sessions_combined'), column_name='exit_page') }}", "refs": [["phoenix_sessions_combined"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.phoenix_sessions_combined"], "macros": []}, "unique_id": "test.ds_dbt.not_null_phoenix_sessions_combined_exit_page", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_phoenix_sessions_combined_exit_page"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_phoenix_sessions_combined_exit_page", "column_name": "exit_page", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"phoenix_sessions_combined\"\nwhere exit_page is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"phoenix_sessions_combined\"\nwhere exit_page is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"phoenix_sessions_combined\"\nwhere exit_page is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_phoenix_sessions_combined_exit_page.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.008770942687988281, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:37.104404Z", "completed_at": "2019-11-19T20:10:37.108957Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:37.109109Z", "completed_at": "2019-11-19T20:10:37.111423Z"}]}, {"node": {"name": "not_null_phoenix_sessions_combined_landing_datetime", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_phoenix_sessions_combined_landing_datetime.sql", "original_file_path": "models/phoenix_events/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('phoenix_sessions_combined'), column_name='landing_datetime') }}", "refs": [["phoenix_sessions_combined"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.phoenix_sessions_combined"], "macros": []}, "unique_id": "test.ds_dbt.not_null_phoenix_sessions_combined_landing_datetime", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_phoenix_sessions_combined_landing_datetime"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_phoenix_sessions_combined_landing_datetime", "column_name": "landing_datetime", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"phoenix_sessions_combined\"\nwhere landing_datetime is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"phoenix_sessions_combined\"\nwhere landing_datetime is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"phoenix_sessions_combined\"\nwhere landing_datetime is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_phoenix_sessions_combined_landing_datetime.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.009981870651245117, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:37.118528Z", "completed_at": "2019-11-19T20:10:37.124126Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:37.124298Z", "completed_at": "2019-11-19T20:10:37.125422Z"}]}, {"node": {"name": "not_null_phoenix_sessions_combined_landing_page", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_phoenix_sessions_combined_landing_page.sql", "original_file_path": "models/phoenix_events/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('phoenix_sessions_combined'), column_name='landing_page') }}", "refs": [["phoenix_sessions_combined"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.phoenix_sessions_combined"], "macros": []}, "unique_id": "test.ds_dbt.not_null_phoenix_sessions_combined_landing_page", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_phoenix_sessions_combined_landing_page"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_phoenix_sessions_combined_landing_page", "column_name": "landing_page", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"phoenix_sessions_combined\"\nwhere landing_page is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"phoenix_sessions_combined\"\nwhere landing_page is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"phoenix_sessions_combined\"\nwhere landing_page is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_phoenix_sessions_combined_landing_page.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.0076410770416259766, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:37.128507Z", "completed_at": "2019-11-19T20:10:37.133211Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:37.133339Z", "completed_at": "2019-11-19T20:10:37.134559Z"}]}, {"node": {"name": "not_null_phoenix_sessions_combined_num_pages_views", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_phoenix_sessions_combined_num_pages_views.sql", "original_file_path": "models/phoenix_events/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('phoenix_sessions_combined'), column_name='num_pages_views') }}", "refs": [["phoenix_sessions_combined"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.phoenix_sessions_combined"], "macros": []}, "unique_id": "test.ds_dbt.not_null_phoenix_sessions_combined_num_pages_views", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_phoenix_sessions_combined_num_pages_views"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_phoenix_sessions_combined_num_pages_views", "column_name": "num_pages_views", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"phoenix_sessions_combined\"\nwhere num_pages_views is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"phoenix_sessions_combined\"\nwhere num_pages_views is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"phoenix_sessions_combined\"\nwhere num_pages_views is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_phoenix_sessions_combined_num_pages_views.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.010048151016235352, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:37.138696Z", "completed_at": "2019-11-19T20:10:37.144818Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:37.145024Z", "completed_at": "2019-11-19T20:10:37.146270Z"}]}, {"node": {"name": "not_null_phoenix_sessions_combined_session_duration_seconds", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_phoenix_sessions_combined_session_duration_seconds.sql", "original_file_path": "models/phoenix_events/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('phoenix_sessions_combined'), column_name='session_duration_seconds') }}", "refs": [["phoenix_sessions_combined"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.phoenix_sessions_combined"], "macros": []}, "unique_id": "test.ds_dbt.not_null_phoenix_sessions_combined_session_duration_seconds", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_phoenix_sessions_combined_session_duration_seconds"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_phoenix_sessions_combined_session_duration_seconds", "column_name": "session_duration_seconds", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"phoenix_sessions_combined\"\nwhere session_duration_seconds is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"phoenix_sessions_combined\"\nwhere session_duration_seconds is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"phoenix_sessions_combined\"\nwhere session_duration_seconds is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_phoenix_sessions_combined_session_duration_seconds.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.007803201675415039, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:37.149003Z", "completed_at": "2019-11-19T20:10:37.154058Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:37.154184Z", "completed_at": "2019-11-19T20:10:37.155252Z"}]}, {"node": {"name": "not_null_phoenix_sessions_combined_session_id", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/not_null_phoenix_sessions_combined_session_id.sql", "original_file_path": "models/phoenix_events/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('phoenix_sessions_combined'), column_name='session_id') }}", "refs": [["phoenix_sessions_combined"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.phoenix_sessions_combined"], "macros": []}, "unique_id": "test.ds_dbt.not_null_phoenix_sessions_combined_session_id", "empty": false, "fqn": ["ds_dbt", "schema_test", "not_null_phoenix_sessions_combined_session_id"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "not_null_phoenix_sessions_combined_session_id", "column_name": "session_id", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"phoenix_sessions_combined\"\nwhere session_id is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"phoenix_sessions_combined\"\nwhere session_id is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"quasar_prod_warehouse\".\"public\".\"phoenix_sessions_combined\"\nwhere session_id is null\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/not_null_phoenix_sessions_combined_session_id.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.009021282196044922, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:37.158558Z", "completed_at": "2019-11-19T20:10:37.163984Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:37.164135Z", "completed_at": "2019-11-19T20:10:37.165773Z"}]}, {"node": {"name": "unique_phoenix_sessions_combined_event_id", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/unique_phoenix_sessions_combined_event_id.sql", "original_file_path": "models/phoenix_events/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_unique(model=ref('phoenix_sessions_combined'), column_name='event_id') }}", "refs": [["phoenix_sessions_combined"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.phoenix_sessions_combined"], "macros": []}, "unique_id": "test.ds_dbt.unique_phoenix_sessions_combined_event_id", "empty": false, "fqn": ["ds_dbt", "schema_test", "unique_phoenix_sessions_combined_event_id"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "unique_phoenix_sessions_combined_event_id", "column_name": "event_id", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        event_id\n\n    from \"quasar_prod_warehouse\".\"public\".\"phoenix_sessions_combined\"\n    where event_id is not null\n    group by event_id\n    having count(*) > 1\n\n) validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        event_id\n\n    from \"quasar_prod_warehouse\".\"public\".\"phoenix_sessions_combined\"\n    where event_id is not null\n    group by event_id\n    having count(*) > 1\n\n) validation_errors\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        event_id\n\n    from \"quasar_prod_warehouse\".\"public\".\"phoenix_sessions_combined\"\n    where event_id is not null\n    group by event_id\n    having count(*) > 1\n\n) validation_errors\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/unique_phoenix_sessions_combined_event_id.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.007846832275390625, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:37.169084Z", "completed_at": "2019-11-19T20:10:37.173848Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:37.173967Z", "completed_at": "2019-11-19T20:10:37.175205Z"}]}, {"node": {"name": "unique_phoenix_sessions_combined_session_id", "resource_type": "test", "package_name": "ds_dbt", "root_path": "/Users/mrich/projects/quasar/quasar/dbt", "path": "schema_test/unique_phoenix_sessions_combined_session_id.sql", "original_file_path": "models/phoenix_events/schema.yml", "raw_sql": "{{ config(severity='ERROR') }}{{ test_unique(model=ref('phoenix_sessions_combined'), column_name='session_id') }}", "refs": [["phoenix_sessions_combined"]], "sources": [], "depends_on": {"nodes": ["model.ds_dbt.phoenix_sessions_combined"], "macros": []}, "unique_id": "test.ds_dbt.unique_phoenix_sessions_combined_session_id", "empty": false, "fqn": ["ds_dbt", "schema_test", "unique_phoenix_sessions_combined_session_id"], "tags": ["schema"], "config": {"enabled": true, "materialized": "view", "severity": "ERROR", "pre-hook": [], "tags": [], "post-hook": [], "column_types": {}, "vars": {}, "persist_docs": {}, "quoting": {}}, "schema": "public", "database": "quasar_prod_warehouse", "alias": "unique_phoenix_sessions_combined_session_id", "column_name": "session_id", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        session_id\n\n    from \"quasar_prod_warehouse\".\"public\".\"phoenix_sessions_combined\"\n    where session_id is not null\n    group by session_id\n    having count(*) > 1\n\n) validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        session_id\n\n    from \"quasar_prod_warehouse\".\"public\".\"phoenix_sessions_combined\"\n    where session_id is not null\n    group by session_id\n    having count(*) > 1\n\n) validation_errors\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        session_id\n\n    from \"quasar_prod_warehouse\".\"public\".\"phoenix_sessions_combined\"\n    where session_id is not null\n    group by session_id\n    having count(*) > 1\n\n) validation_errors\n", "build_path": "../../docs/compiled/ds_dbt/schema_test/unique_phoenix_sessions_combined_session_id.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.009567022323608398, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-11-19T20:10:37.180213Z", "completed_at": "2019-11-19T20:10:37.185856Z"}, {"name": "execute", "started_at": "2019-11-19T20:10:37.186034Z", "completed_at": "2019-11-19T20:10:37.187118Z"}]}], "generated_at": "2019-11-19T20:10:37.255418Z", "elapsed_time": 4.28619122505188}
