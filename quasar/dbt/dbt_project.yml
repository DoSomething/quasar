
# Name your package! Package names should contain only lowercase characters
# and underscores. A good package name should reflect your organization's
# name or the intended use of these models
name: 'ds_dbt'
version: '1.0'

# This setting configures which "profile" dbt uses for this project. Profiles contain
# database connection information, and should be configured in the  ~/.dbt/profiles.yml file
profile: 'default'

# These configurations specify where dbt should look for different types of files.
# The `source-paths` config, for example, states that source models can be found
# in the "models/" directory. You probably won't need to change these!
source-paths: ["models"]
analysis-paths: ["analysis"] 
test-paths: ["tests"]
data-paths: ["data"]
macro-paths: ["macros"]

target-path: "../../docs"  # directory which will store compiled SQL files
clean-targets:         # directories to be removed by `dbt clean`
    - "target"
    - "dbt_modules"

# You can define configurations for models in the `source-paths` directory here.
# Using these configurations, you can enable or disable models, change how they
# are materialized, and more!

# In this example config, we tell dbt to build all models in the example/ directory
# as views (the default). These settings can be overridden in the individual model files
# using the `{{ config(...) }}` macro.
models:
  ds_dbt:
      # Applies to all files under models/phoenix_events/
      phoenix_events:
        snowplow_base_event:
          alias: snowplow_base_event
          materialized: table
          post-hook:
           - "CREATE INDEX IF NOT EXISTS event_index ON {{ this }}(event_id)"
           - "GRANT SELECT ON {{ this }} TO dsanalyst"
        snowplow_payload_event:
          alias: snowplow_payload_event
          materialized: table
          post-hook:
           - "CREATE INDEX IF NOT EXISTS payload_event_id ON {{ this }}(event_id)"
           - "GRANT SELECT ON {{ this }} TO dsanalyst"
        snowplow_raw_events:
          alias: snowplow_raw_events
          materialized: table
          post-hook:
            - "CREATE INDEX IF NOT EXISTS raw_event_id ON {{ this }}(event_id)"
            - "GRANT SELECT ON {{ this }} TO dsanalyst"
        snowplow_phoenix_events:
          alias: snowplow_phoenix_events
          materialized: table
          post-hook:
            - "CREATE UNIQUE INDEX IF NOT EXISTS spe_unique ON {{ this }}(event_datetime, event_name, event_id)"
            - "CREATE INDEX IF NOT EXISTS spe_session_id ON {{ this }} (session_id)"
            - "GRANT SELECT ON {{ this }} TO looker"
            - "GRANT SELECT ON {{ this }} TO dsanalyst"
        snowplow_sessions:
          materialized: table
          post-hook:
            - "CREATE INDEX IF NOT EXISTS sps_landing ON {{ this }}(landing_datetime, landing_page)"
            - "GRANT SELECT ON {{ this }} TO looker"
            - "GRANT SELECT ON {{ this }} TO dsanalyst"
        phoenix_events_combined:
          alias: phoenix_events_combined
          materialized: table
          post-hook:
            - "CREATE UNIQUE INDEX IF NOT EXISTS pec_unique ON {{ this }}(event_datetime, event_name, event_id)"
            - "CREATE INDEX IF NOT EXISTS pec_session_id ON {{ this }} (session_id)"
            - "GRANT SELECT ON {{ this }} TO looker"
            - "GRANT SELECT ON {{ this }} TO dsanalyst"
        phoenix_sessions_combined:
          alias: phoenix_sessions_combined
          materialized: table
          post-hook:
            - "CREATE INDEX IF NOT EXISTS psc_landing ON {{ this }}(landing_datetime, landing_page)"
            - "GRANT SELECT ON {{ this }} TO looker"
            - "GRANT SELECT ON {{ this }} TO dsanalyst"
      gambit_messages:
        messages_flattened:
          alias: messages_flattened
          materialized: table
          post-hook:
            - "CREATE INDEX IF NOT EXISTS messages_user_id ON {{ this }}(user_id)"
            - "CREATE INDEX IF NOT EXISTS platform_message_id ON {{ this }}(platform_message_id)"
            - "GRANT SELECT ON {{ this }} TO dsanalyst"
            - "GRANT SELECT ON {{ this }} TO looker"
        gambit_messages_inbound:
          alias: gambit_messages_inbound
          materialized: table
          post-hook:
            - "CREATE INDEX IF NOT EXISTS messages_in_index ON {{ this }}(message_id, created_at, user_id, conversation_id)"
            - "GRANT SELECT ON {{ this }} TO dsanalyst"
            - "GRANT SELECT ON {{ this }} TO looker"        
        gambit_messages_outbound:
          alias: gambit_messages_outbound
          materialized: table
          post-hook:
            - "CREATE INDEX IF NOT EXISTS messages_out_index ON {{ this }}(message_id, created_at, user_id, conversation_id)"
            - "CREATE INDEX IF NOT EXISTS deliverability ON {{ this }}(created_at, carrier_failure_code)"
            - "GRANT SELECT ON {{ this }} TO dsanalyst"
            - "GRANT SELECT ON {{ this }} TO looker" 
      campaign_activity:
        signups:
          alias: signups
          materialized: table
          post-hook:
           - "CREATE UNIQUE INDEX IF NOT EXISTS signups_unique ON {{ this }}(created_at, id)"
           - "GRANT SELECT ON {{ this }} TO dsanalyst"
           - "GRANT SELECT ON {{ this }} TO looker"
        turbovote:
          alias: turbovote
          materialized: table
          post-hook:
           - "CREATE UNIQUE INDEX IF NOT EXISTS turbovote_unique ON {{ this }}(post_id, created_at, updated_at)"
           - "GRANT SELECT ON {{ this }} TO dsanalyst"
           - "GRANT SELECT ON {{ this }} TO looker"
        rock_the_vote:
          alias: rock_the_vote
          materialized: table
          post-hook:
           - "CREATE UNIQUE INDEX IF NOT EXISTS rtv_unique ON {{ this }}(post_id, started_registration)"
           - "GRANT SELECT ON {{ this }} TO dsanalyst"
           - "GRANT SELECT ON {{ this }} TO looker"
        posts:
          alias: posts
          materialized: table
          post-hook:
           - "CREATE UNIQUE INDEX IF NOT EXISTS posts_unique ON {{ this }}(created_at, campaign_id, id)"
           - "CREATE INDEX IF NOT EXISTS posts_i ON {{ this }}(is_reportback, is_accepted, signup_id, id, post_class)"
           - "GRANT SELECT ON {{ this }} TO dsanalyst"
           - "GRANT SELECT ON {{ this }} TO looker"
        reportbacks:
          alias: reportbacks
          materialized: table
          post-hook:
           - "CREATE UNIQUE INDEX IF NOT EXISTS reportbacks_unique ON {{ this }}(post_id)"
           - "CREATE INDEX IF NOT EXISTS reportbacks_i ON {{ this }}(post_created_at, campaign_id, post_class, reportback_volume)"
           - "GRANT SELECT ON {{ this }} TO dsanalyst"
           - "GRANT SELECT ON {{ this }} TO looker"
      users_table:
        cio_latest_status:
          alias: cio_latest_status
          materialized: table
          post-hook:
           - "CREATE INDEX IF NOT EXISTS cio_indices ON {{ this }}(customer_id)"
           - "GRANT SELECT ON {{ this }} TO dsanalyst"
           - "GRANT SELECT ON {{ this }} TO looker"
        users:
          alias: users
          materialized: table
          post-hook:
           - "CREATE UNIQUE INDEX IF NOT EXISTS du_indicies ON {{ this }}(northstar_id, created_at, email, mobile, source)"
           - "GRANT SELECT ON {{ this }} TO dsanalyst"
           - "GRANT SELECT ON {{ this }} TO looker"
           - "GRANT SELECT ON {{ this }} TO public"
      user_activity:
        user_activity:
          alias: user_activity
          materialized: table
          post-hook:
           - "CREATE UNIQUE INDEX IF NOT EXISTS user_activity_unique_i ON {{ this }}(created_at, northstar_id)"
           - "CREATE INDEX IF NOT EXISTS most_recent_all_actions_i ON {{ this }}(most_recent_all_actions)"
           - "GRANT SELECT ON {{ this }} TO dsanalyst"
           - "GRANT SELECT ON {{ this }} TO looker"
      campaign_info:
        campaign_info_all:
          alias: campaign_info_all
          materialized: table
        campaign_info:
          alias: campaign_info
          materialized: table
          post-hook:
           - "CREATE UNIQUE INDEX IF NOT EXISTS campaign_info_i ON {{ this }} (campaign_run_id, campaign_id)"
           - "GRANT SELECT ON {{ this }} TO dsanalyst"
           - "GRANT SELECT ON {{ this }} TO looker"
        campaign_info_international:
          materialized: table
          post-hook:
           - "GRANT SELECT ON {{ this }} TO dsanalyst"
           - "GRANT SELECT ON {{ this }} TO looker"
      bertly:
        bertly_clicks:
          alias: bertly_clicks
          materialized: table
          post-hook:
            - "CREATE UNIQUE INDEX IF NOT EXISTS clicks_unique ON {{ this }}(click_id)"
            - "GRANT SELECT ON {{ this }} TO dsanalyst"
            - "GRANT SELECT ON {{ this }} TO looker"
      post_actions:
        post_actions:
          alias: post_actions
          materialized: table
          post-hook:
            - "CREATE UNIQUE INDEX IF NOT EXISTS post_actions_unique ON {{ this }}(created_at, id)"
            - "GRANT SELECT ON {{ this }} TO dsanalyst"
            - "GRANT SELECT ON {{ this }} TO looker"
      member_event_log:
        member_event_log:
          alias: member_event_log
          materialized: table
          post-hook:
           - "CREATE UNIQUE INDEX IF NOT EXISTS mel_unique_i ON {{ this }}(timestamp, northstar_id, event_id)"
           - "CREATE INDEX IF NOT EXISTS nid_timestamp_i ON {{ this }}(northstar_id, timestamp)"
           - "GRANT SELECT ON {{ this }} TO dsanalyst"
           - "GRANT SELECT ON {{ this }} TO looker"
      news_subscription:
        email_subscription_topics_raw:
          alias: email_subscription_topics_raw
          materialized: table
          post-hook:
           - "GRANT SELECT ON {{ this }} TO dsanalyst"
           - "GRANT SELECT ON {{ this }} TO looker"
        user_newsletter_subscriptions:
          alias: user_newsletter_subscriptions
          materialized: table
          post-hook:
           - "CREATE INDEX IF NOT EXISTS email_subscription_topics_i ON {{ this }}(topic_subscribed_at, northstar_id)"
           - "GRANT SELECT ON {{ this }} TO dsanalyst"
           - "GRANT SELECT ON {{ this }} TO looker"
