##### Core System Setup

# https://www.percona.com/blog/2014/04/28/oom-relation-vm-swappiness0-new-kernel/
- name: System | Set vm.swappiness
  become: yes
  sysctl: >
    name=vm.swappiness
    value=1
    sysctl_set=yes

- name: System | Install Common Tools
  become: yes
  apt: name={{ item }} state=latest update_cache=yes
  with_items:
    - ntp
    - git
    - curl
    - tmux
    - screen
    - bind9utils
    - sysstat

- name: System | Check Current Timezone
  shell: cat /etc/timezone
  register: timestat
  changed_when: timestat.stdout != "{{ timezone }}"

- name: System | Set Timezone to UTC
  command: timedatectl set-timezone "{{ timezone }}"
  when: timestat.stdout != "{{ timezone }}"
  notify: restart ntp

## Security Note
#  Current incarnation runs in Google Cloud which disables
#  password authentication altogether, and allows root login
#  but with tight security controls that inform you to
#  login via different username. Should we move hosting
#  we should add code that addresses these security points.
#
#  - Sena Heydari - 18/2/2016
##

##### User Setup

## Admin Users

- name: User Setup | Add SysAdmin Users
  user: name={{ item }} groups=sudo shell=/bin/bash
  with_items: "{{sysadmins}}"

- name: User Setup | Create SysAdmin User SSH Directory
  file: dest=/home/{{ item }}/.ssh owner={{ item }} group={{ item }} mode=750 state=directory
  with_items: "{{sysadmins}}"

- name: User Setup | Setup SysAdmin User Public Keys
  authorized_key:
     user={{ item }}
     key="{{ lookup('file', item + '-id_rsa.pub') }}"
  with_items: "{{sysadmins}}"

## Limited Users

- name: User Setup | Add Limited Users
  user: name={{ item }} shell=/bin/bash
  with_items: "{{users}}"
  when: (open_access) is defined and open_access == "true"

- name: User Setup | Create Limited User SSH Directory
  file: dest=/home/{{ item }}/.ssh owner={{ item }} group={{ item }} mode=750 state=directory
  with_items: "{{users}}"
  when: (open_access) is defined and open_access == "true"

- name: User Setup | Setup Limited User Public Keys
  authorized_key: >
     user={{ item }}
     key="{{ lookup('file', item + '-id_rsa.pub') }}"
  with_items: "{{users}}"
  when: (open_access) is defined and open_access == "true"

## App Users
# This section creates App users when specified
# with variable setting of "appuser" to QA or Prod.
# There will likely be other users added in the future.
# IMPORTANT FEATURE: None of these users will have login
# privileges. You either have to sudo to them as a "sysadmin"
# or not at all.
##

## QA Data Application User

- name: User Setup | Add QA App User
  user: name={{ item }} shell=/bin/bash
  with_items: "{{qa_users}}"
  when: appuser is defined and appuser == "QA"

## Prod Data Application User

- name: User Setup | Add Prod App User
  user: name={{ item }} shell=/bin/bash
  with_items: "{{prod_users}}"
  when: appuser is defined and appuser == "PROD"

## Create Env Directory Used by App User

- name: Create QA Env Dir
  file: path=/env state=directory owner=quantum group=quantum mode=750 recurse=yes
  when: appuser is defined and appuser == "QA"

- name: Create Prod Env Dir
  file: path=/env state=directory owner=quasar group=quasar mode=750 recurse=yes
  when: appuser is defined and appuser == "PROD"
